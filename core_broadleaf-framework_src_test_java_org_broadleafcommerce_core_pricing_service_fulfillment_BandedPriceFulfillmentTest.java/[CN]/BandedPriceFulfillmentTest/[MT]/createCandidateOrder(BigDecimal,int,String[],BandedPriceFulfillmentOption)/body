{
  if (flatRates != null && flatRates.length > orderItemsToCreate) {
    throw new IllegalStateException("Flat rates for Skus should be less than or equal to the number of order items being created");
  }
  List<FulfillmentGroupItem> fulfillmentItems=new ArrayList<FulfillmentGroupItem>();
  for (int i=0; i < orderItemsToCreate; i++) {
    OrderItem orderItem=(flatRates != null && i < flatRates.length) ? new DiscreteOrderItemImpl() : new OrderItemImpl();
    if (orderItem instanceof DiscreteOrderItem && option != null) {
      Sku sku=new SkuImpl();
      sku.getFulfillmentFlatRates().put(option,new BigDecimal(flatRates[i]));
      ((DiscreteOrderItem)orderItem).setSku(sku);
    }
    orderItem.setPrice(new Money(retailTotal.divide(new BigDecimal(orderItemsToCreate))));
    FulfillmentGroupItem fulfillmentItem=new FulfillmentGroupItemImpl();
    fulfillmentItem.setOrderItem(orderItem);
    fulfillmentItem.setQuantity(1);
    fulfillmentItems.add(fulfillmentItem);
  }
  FulfillmentGroup group=new FulfillmentGroupImpl();
  group.setFulfillmentGroupItems(fulfillmentItems);
  List<FulfillmentGroup> groups=new ArrayList<FulfillmentGroup>();
  groups.add(group);
  Order result=new OrderImpl();
  result.setFulfillmentGroups(groups);
  return result;
}
