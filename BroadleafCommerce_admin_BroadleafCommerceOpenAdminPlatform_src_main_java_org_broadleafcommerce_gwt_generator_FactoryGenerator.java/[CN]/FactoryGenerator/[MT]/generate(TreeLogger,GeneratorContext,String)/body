{
  logger.log(TreeLogger.INFO,"Generating source for " + typeName,null);
  TypeOracle typeOracle=context.getTypeOracle();
  JClassType clazz=typeOracle.findType(typeName);
  if (clazz == null) {
    logger.log(TreeLogger.ERROR,"Unable to find metadata for type '" + typeName + "'",null);
    throw new UnableToCompleteException();
  }
  try {
    logger.log(TreeLogger.INFO,"Generating source for " + clazz.getQualifiedSourceName(),null);
    JClassType reflectableType=typeOracle.getType("org.broadleafcommerce.gwt.client.reflection.Instantiable");
    SourceWriter sourceWriter=getSourceWriter(clazz,context,logger);
    if (sourceWriter != null) {
      sourceWriter.println("public " + reflectableType.getQualifiedSourceName() + " newInstance(String className) {");
      JClassType[] types=typeOracle.getTypes();
      int count=0;
      for (int i=0; i < types.length; i++) {
        if (types[i].isInterface() == null && types[i].isAssignableTo(reflectableType)) {
          if (count == 0) {
            sourceWriter.println("   if(\"" + types[i].getQualifiedSourceName() + "\".equals(className)) {"+ " return new "+ types[i].getQualifiedSourceName()+ "();"+ "}");
          }
 else {
            sourceWriter.println("   else if(\"" + types[i].getQualifiedSourceName() + "\".equals(className)) {"+ " return new "+ types[i].getQualifiedSourceName()+ "();"+ "}");
          }
          count++;
        }
      }
      sourceWriter.println("return null;");
      sourceWriter.println("}");
      sourceWriter.commit(logger);
      logger.log(TreeLogger.INFO,"Done Generating source for " + clazz.getName(),null);
    }
    return clazz.getQualifiedSourceName() + "Wrapper";
  }
 catch (  NotFoundException e) {
    e.printStackTrace();
    throw new UnableToCompleteException();
  }
}
