{
  Authentication authentication=SecurityContextHolder.getContext().getAuthentication();
  Customer customer=null;
  if (authentication != null) {
    String userName=request.getUserPrincipal().getName();
    if (userName != null) {
      customer=customerService.readCustomerByUsername(userName);
      if (customer != null) {
        if (logger.isDebugEnabled()) {
          logger.debug("Customer found by username " + userName);
        }
        ApplicationEvent lastPublishedEvent=(ApplicationEvent)request.getSession(true).getAttribute(LAST_PUBLISHED_EVENT_SESSION_ATTRIBUTED_NAME);
        if (authentication instanceof RememberMeAuthenticationToken) {
          customer.setCookied(true);
          boolean publishRememberMeEvent=true;
          if (lastPublishedEvent != null && lastPublishedEvent instanceof CustomerAuthenticatedFromCookieEvent) {
            CustomerAuthenticatedFromCookieEvent cookieEvent=(CustomerAuthenticatedFromCookieEvent)lastPublishedEvent;
            if (userName.equals(cookieEvent.getCustomer().getUsername())) {
              publishRememberMeEvent=false;
            }
          }
          if (publishRememberMeEvent) {
            CustomerAuthenticatedFromCookieEvent cookieEvent=new CustomerAuthenticatedFromCookieEvent(customer,this.getClass().getName());
            eventPublisher.publishEvent(cookieEvent);
            request.getSession().setAttribute(LAST_PUBLISHED_EVENT_SESSION_ATTRIBUTED_NAME,cookieEvent);
          }
        }
 else         if (authentication instanceof UsernamePasswordAuthenticationToken) {
          customer.setLoggedIn(true);
          boolean publishLoggedInEvent=true;
          if (lastPublishedEvent != null && lastPublishedEvent instanceof CustomerLoggedInEvent) {
            CustomerLoggedInEvent loggedInEvent=(CustomerLoggedInEvent)lastPublishedEvent;
            if (userName.equals(loggedInEvent.getCustomer().getUsername())) {
              publishLoggedInEvent=false;
            }
          }
          if (publishLoggedInEvent) {
            CustomerLoggedInEvent loggedInEvent=new CustomerLoggedInEvent(customer,this.getClass().getName());
            eventPublisher.publishEvent(loggedInEvent);
            request.getSession().setAttribute(LAST_PUBLISHED_EVENT_SESSION_ATTRIBUTED_NAME,loggedInEvent);
          }
        }
 else {
          customer=null;
        }
      }
    }
  }
  if (customer == null) {
    customer=(Customer)request.getSession(true).getAttribute(ANONYMOUS_CUSTOMER_SESSION_ATTRIBUTE_NAME);
    if (customer == null) {
      customer=customerService.createCustomerFromId(null);
      customer.setAnonymous(true);
      request.getSession().setAttribute(ANONYMOUS_CUSTOMER_SESSION_ATTRIBUTE_NAME,customer);
    }
  }
  request.setAttribute(customerRequestAttributeName,customer);
  chain.doFilter(request,response);
}
