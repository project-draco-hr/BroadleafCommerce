{
  if (!isActive()) {
    throw new IllegalStateException("This is currently a sessionless environment and session cannot be used " + "to obtain a lock. Consider using a different implementation of OrderLockManager.");
  }
  HttpSession session=getRequest().getSession();
  ReentrantLock lock=SESSION_LOCKS.get(session.getId());
  if (lock == null) {
synchronized (LOCK) {
      lock=SESSION_LOCKS.get(session.getId());
      if (lock == null) {
        lock=new ReentrantLock();
        SESSION_LOCKS.put(session.getId(),lock);
      }
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("Created new lock object: " + lock.toString());
    }
  }
 else {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Returning previously created lock object: " + lock.toString());
    }
  }
  return lock;
}
