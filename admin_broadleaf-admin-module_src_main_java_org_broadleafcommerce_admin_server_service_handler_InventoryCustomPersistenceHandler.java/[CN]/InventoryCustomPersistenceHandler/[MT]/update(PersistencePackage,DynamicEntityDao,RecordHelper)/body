{
  Entity entity=persistencePackage.getEntity();
  try {
    PersistencePerspective persistencePerspective=persistencePackage.getPersistencePerspective();
    Inventory adminInstance=(Inventory)Class.forName(entity.getType()[0]).newInstance();
    Map<String,FieldMetadata> adminProperties=helper.getSimpleMergedProperties(Inventory.class.getName(),persistencePerspective);
    adminInstance=(Inventory)helper.createPopulatedInstance(adminInstance,entity,adminProperties,false);
    int retryCount=0;
    while (retryCount < MAX_RETRIES) {
      try {
        adminInstance=inventoryService.save(adminInstance);
        break;
      }
 catch (      ConcurrentInventoryModificationException ex) {
        retryCount++;
        if (retryCount == MAX_RETRIES) {
          throw ex;
        }
      }
    }
    return helper.getRecord(adminProperties,adminInstance,null,null);
  }
 catch (  Exception e) {
    LOG.error("Unable to update entity for " + entity.getType()[0],e);
    throw new ServiceException("Unable to update entity for " + entity.getType()[0],e);
  }
}
