{
  Order order=request.getOrder();
  if (isRemoveEmptyFulfillmentGroups() && order.getFulfillmentGroups() != null) {
    ListIterator<FulfillmentGroup> fgIter=order.getFulfillmentGroups().listIterator();
    while (fgIter.hasNext()) {
      FulfillmentGroup fg=fgIter.next();
      if (fg.getFulfillmentGroupItems() == null || fg.getFulfillmentGroupItems().size() == 0) {
        fgIter.remove();
        fulfillmentGroupService.delete(fg);
      }
    }
  }
  Map<Long,Integer> oiQuantityMap=new HashMap<Long,Integer>();
  List<OrderItem> expandedOrderItems=new ArrayList<OrderItem>();
  for (  OrderItem oi : order.getOrderItems()) {
    if (oi instanceof BundleOrderItem) {
      for (      DiscreteOrderItem doi : ((BundleOrderItem)oi).getDiscreteOrderItems()) {
        expandedOrderItems.add(doi);
      }
    }
 else     if (oi instanceof DiscreteOrderItem) {
      expandedOrderItems.add(oi);
    }
 else {
      expandedOrderItems.add(oi);
    }
  }
  for (  OrderItem oi : expandedOrderItems) {
    Integer oiQuantity=oiQuantityMap.get(oi.getId());
    if (oiQuantity == null) {
      oiQuantity=0;
    }
    if (oi instanceof DiscreteOrderItem && ((DiscreteOrderItem)oi).getBundleOrderItem() != null) {
      oiQuantity+=((DiscreteOrderItem)oi).getBundleOrderItem().getQuantity() * oi.getQuantity();
    }
 else {
      oiQuantity+=oi.getQuantity();
    }
    oiQuantityMap.put(oi.getId(),oiQuantity);
  }
  for (  FulfillmentGroup fg : order.getFulfillmentGroups()) {
    for (    FulfillmentGroupItem fgi : fg.getFulfillmentGroupItems()) {
      Long oiId=fgi.getOrderItem().getId();
      Integer oiQuantity=oiQuantityMap.get(oiId);
      if (oiQuantity == null) {
        throw new IllegalStateException("Fulfillment group items and discrete order items are not in sync. DiscreteOrderItem id: " + oiId);
      }
      oiQuantity-=fgi.getQuantity();
      oiQuantityMap.put(oiId,oiQuantity);
    }
  }
  for (  Entry<Long,Integer> entry : oiQuantityMap.entrySet()) {
    if (entry.getValue() != 0) {
      throw new IllegalStateException("Not enough fulfillment group items found for DiscreteOrderItem id: " + entry.getKey());
    }
  }
  return request;
}
