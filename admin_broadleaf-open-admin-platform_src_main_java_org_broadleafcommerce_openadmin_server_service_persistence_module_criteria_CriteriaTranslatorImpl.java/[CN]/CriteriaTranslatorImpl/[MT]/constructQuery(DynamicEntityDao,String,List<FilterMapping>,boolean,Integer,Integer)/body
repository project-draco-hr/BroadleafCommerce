{
  CriteriaBuilder criteriaBuilder=dynamicEntityDao.getStandardEntityManager().getCriteriaBuilder();
  Class<Serializable> ceilingMarker;
  try {
    ceilingMarker=(Class<Serializable>)Class.forName(ceilingEntity);
  }
 catch (  ClassNotFoundException e) {
    throw new RuntimeException(e);
  }
  Class<Serializable> ceilingClass=determineRoot(dynamicEntityDao,ceilingMarker,filterMappings);
  CriteriaQuery<Serializable> criteria=criteriaBuilder.createQuery(ceilingMarker);
  Root<Serializable> original=criteria.from(ceilingClass);
  if (isCount) {
    criteria.select(criteriaBuilder.count(original));
  }
 else {
    criteria.select(original);
  }
  List<Predicate> restrictions=new ArrayList<Predicate>();
  List<Order> sorts=new ArrayList<Order>();
  addRestrictions(ceilingEntity,filterMappings,criteriaBuilder,original,restrictions,sorts);
  criteria.where(restrictions.toArray(new Predicate[restrictions.size()]));
  if (!isCount) {
    criteria.orderBy(sorts.toArray(new Order[sorts.size()]));
  }
  TypedQuery<Serializable> response=dynamicEntityDao.getStandardEntityManager().createQuery(criteria);
  if (!isCount) {
    addPaging(response,firstResult,maxResults);
  }
  return response;
}
