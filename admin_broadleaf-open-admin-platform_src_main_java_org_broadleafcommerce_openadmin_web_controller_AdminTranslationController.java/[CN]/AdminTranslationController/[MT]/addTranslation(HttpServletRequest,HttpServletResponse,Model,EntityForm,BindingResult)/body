{
  final TranslationForm form=getTranslationForm(entityForm);
  adminRemoteSecurityService.securityCheck(form.getCeilingEntity(),EntityOperationType.UPDATE);
  SectionCrumb sectionCrumb=new SectionCrumb();
  sectionCrumb.setSectionIdentifier(TranslationImpl.class.getName());
  List<SectionCrumb> sectionCrumbs=Arrays.asList(sectionCrumb);
  entityForm.setCeilingEntityClassname(Translation.class.getName());
  entityForm.setEntityType(TranslationImpl.class.getName());
  Field entityType=new Field();
  entityType.setName("entityType");
  String ceilingEntity=form.getCeilingEntity();
  TranslatedEntity translatedEntity=TranslatedEntity.getInstance(ceilingEntity);
  if (translatedEntity == null && ceilingEntity.endsWith("Impl")) {
    int pos=ceilingEntity.lastIndexOf("Impl");
    ceilingEntity=ceilingEntity.substring(0,pos);
    translatedEntity=TranslatedEntity.getInstance(ceilingEntity);
  }
  entityType.setValue(translatedEntity.getFriendlyType());
  Field fieldName=new Field();
  fieldName.setName("fieldName");
  fieldName.setValue(form.getPropertyName());
  entityForm.getFields().put("entityType",entityType);
  entityForm.getFields().put("fieldName",fieldName);
  Entity entity=service.addEntity(entityForm,getSectionCustomCriteria(),sectionCrumbs).getEntity();
  for (  Map.Entry<String,Field> entry : entityForm.getFields().entrySet()) {
    String key=entry.getKey();
    Field value=entry.getValue();
    System.out.println("key=" + key + " value="+ value);
  }
  entityFormValidator.validate(entityForm,entity,result);
  if (result.hasErrors()) {
    model.addAttribute("entity",entity);
    model.addAttribute("entityForm",entityForm);
    model.addAttribute("viewType","modal/translationAdd");
    model.addAttribute("currentUrl",request.getRequestURL().toString());
    model.addAttribute("modalHeaderType","addTranslation");
    return "modules/modalContainer";
  }
 else {
    return viewTranslation(request,response,model,form,result);
  }
}
