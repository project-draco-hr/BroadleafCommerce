{
  Order order=retrieveCartOrder(request,model);
  order.setOrderNumber(new SimpleDateFormat("yyyyMMddHHmmssS").format(SystemTime.asDate()));
  List<FulfillmentGroup> groups=order.getFulfillmentGroups();
  if (groups.size() < 1) {
    return "redirect:/basket/currentCart.htm";
  }
  FulfillmentGroup group=groups.get(0);
  group.setOrder(order);
  AddressImpl address=new AddressImpl();
  address.setActive(true);
  address.setAddressLine1("123 Test Rd");
  address.setBusiness(false);
  address.setCity("Dallas");
  address.setCountry(countryService.findCountryByAbbreviation("US"));
  address.setFirstName("Test");
  address.setLastName("Tester");
  address.setPostalCode("75222");
  address.setPrimaryPhone("214-214-1234");
  address.setState(stateService.findStateByAbbreviation("TX"));
  group.setAddress(address);
  group.setShippingPrice(new Money(8D));
  Map<PaymentInfo,Referenced> payments=new HashMap<PaymentInfo,Referenced>();
  CreditCardPaymentInfo creditCardPaymentInfo=((CreditCardPaymentInfo)securePaymentInfoService.create(PaymentInfoType.CREDIT_CARD));
  creditCardPaymentInfo.setCvvCode("123");
  creditCardPaymentInfo.setExpirationMonth(12);
  creditCardPaymentInfo.setExpirationYear(2013);
  creditCardPaymentInfo.setPan("1111111111111111");
  creditCardPaymentInfo.setReferenceNumber("1234");
  PaymentInfo paymentInfo=paymentInfoService.create();
  paymentInfo.setAddress(address);
  paymentInfo.setOrder(order);
  paymentInfo.setType(PaymentInfoType.CREDIT_CARD);
  paymentInfo.setReferenceNumber("1234");
  paymentInfo.setAmount(order.getTotal());
  payments.put(paymentInfo,creditCardPaymentInfo);
  List<PaymentInfo> paymentInfos=new ArrayList<PaymentInfo>();
  paymentInfos.add(paymentInfo);
  order.setPaymentInfos(paymentInfos);
  order.setStatus(OrderStatus.SUBMITTED);
  order.setSubmitDate(Calendar.getInstance().getTime());
  try {
    checkoutService.performCheckout(order,payments);
  }
 catch (  CheckoutException e) {
    LOG.error("Cannot perform checkout",e);
  }
  model.addAttribute("order",order);
  return "checkout/checkoutConfirmation";
}
