{
  if (count > 0 && temp.getName().equals(myCriteriaList.get(count - 1).getName()) && myCriteriaList.get(count - 1).getOperator().equals(BLCOperator.GREATER_THAN.name()) && temp.getOperator().equals(BLCOperator.LESS_THAN.name())) {
    myCriteriaList.get(count - 1).setOperator(BLCOperator.BETWEEN.name());
    String start;
    String end;
    if (type.toString().equals(SupportedFieldType.DATE.toString())) {
      start=myCriteriaList.get(count - 1).getValue();
      end=temp.getValue();
    }
 else {
      start=myCriteriaList.get(count - 1).getValue();
      end=temp.getValue();
    }
    myCriteriaList.get(count - 1).setStart(start);
    myCriteriaList.get(count - 1).setEnd(end);
    myCriteriaList.get(count - 1).setValue(null);
    if (parentDTO != null) {
      parentDTO.getGroups().add(myCriteriaList.remove(count - 1));
    }
  }
 else   if (count > 0 && temp.getName().equals(myCriteriaList.get(count - 1).getName()) && myCriteriaList.get(count - 1).getOperator().equals(BLCOperator.GREATER_OR_EQUAL.name()) && temp.getOperator().equals(BLCOperator.LESS_OR_EQUAL.name())) {
    myCriteriaList.get(count - 1).setOperator(BLCOperator.BETWEEN_INCLUSIVE.name());
    String start;
    String end;
    if (type.toString().equals(SupportedFieldType.DATE.toString())) {
      start=myCriteriaList.get(count - 1).getValue();
      end=temp.getValue();
    }
 else {
      start=myCriteriaList.get(count - 1).getValue();
      end=temp.getValue();
    }
    myCriteriaList.get(count - 1).setStart(start);
    myCriteriaList.get(count - 1).setEnd(end);
    myCriteriaList.get(count - 1).setValue(null);
    if (parentDTO != null) {
      parentDTO.getGroups().add(myCriteriaList.remove(count - 1));
    }
  }
 else   if (isProjection(temp.getValue())) {
    if (parentDTO != null) {
      parentDTO.getGroups().add(temp);
    }
 else {
      myCriteriaList.add(temp);
    }
  }
 else {
    myCriteriaList.add(temp);
  }
}
