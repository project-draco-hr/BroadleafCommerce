{
  Entity entity=persistencePackage.getEntity();
  try {
    PersistencePerspective persistencePerspective=persistencePackage.getPersistencePerspective();
    Page adminInstance=(Page)Class.forName(entity.getType()[0]).newInstance();
    Map<String,FieldMetadata> adminProperties=helper.getSimpleMergedProperties(Page.class.getName(),persistencePerspective);
    adminInstance=(Page)helper.createPopulatedInstance(adminInstance,entity,adminProperties,false);
    addRule(entity,adminInstance,"customerRule",PageRuleType.CUSTOMER);
    addRule(entity,adminInstance,"productRule",PageRuleType.PRODUCT);
    addRule(entity,adminInstance,"requestRule",PageRuleType.REQUEST);
    addRule(entity,adminInstance,"timeRule",PageRuleType.TIME);
    adminInstance=pageService.addPage(adminInstance,getSandBox());
    Entity adminEntity=helper.getRecord(adminProperties,adminInstance,null,null);
    if (adminEntity.findProperty("pageTemplate") != null) {
      Property property=new Property();
      property.setName("pageTemplate_Grid");
      property.setValue(adminEntity.findProperty("pageTemplate").getValue());
      adminEntity.addProperty(property);
    }
    return adminEntity;
  }
 catch (  Exception e) {
    LOG.error("Unable to add entity for " + entity.getType()[0],e);
    throw new ServiceException("Unable to add entity for " + entity.getType()[0],e);
  }
}
