{
  mergedProperties=helper.getSimpleMergedProperties(Page.class.getName(),persistencePerspective);
  BasicFieldMetadata contentTypeFieldMetadata=new BasicFieldMetadata();
  contentTypeFieldMetadata.setFieldType(SupportedFieldType.EXPLICIT_ENUMERATION);
  contentTypeFieldMetadata.setMutable(true);
  contentTypeFieldMetadata.setInheritedFromType(PageTemplateImpl.class.getName());
  contentTypeFieldMetadata.setAvailableToTypes(new String[]{PageTemplateImpl.class.getName()});
  contentTypeFieldMetadata.setForeignKeyCollection(false);
  contentTypeFieldMetadata.setMergedPropertyType(MergedPropertyType.PRIMARY);
  PersistencePackage pageTemplatePersistencePackage=new PersistencePackage();
  pageTemplatePersistencePackage.setCeilingEntityFullyQualifiedClassname(PageTemplate.class.getName());
  PersistencePerspective pageTemplateFetchPerspective=new PersistencePerspective();
  pageTemplatePersistencePackage.setPersistencePerspective(pageTemplateFetchPerspective);
  pageTemplateFetchPerspective.setAdditionalForeignKeys(new ForeignKey[]{});
  pageTemplateFetchPerspective.setOperationTypes(new OperationTypes(OperationType.BASIC,OperationType.BASIC,OperationType.BASIC,OperationType.BASIC,OperationType.BASIC));
  pageTemplateFetchPerspective.setAdditionalNonPersistentProperties(new String[]{});
  DynamicResultSet pageTemplateResultSet=((PersistenceManager)helper).fetch(pageTemplatePersistencePackage,new CriteriaTransferObject());
  String[][] pageTemplateEnums=new String[pageTemplateResultSet.getRecords().length][2];
  int i=0;
  for (  Entity entity : pageTemplateResultSet.getRecords()) {
    pageTemplateEnums[i][0]=entity.findProperty("id").getValue();
    pageTemplateEnums[i][1]=entity.findProperty("templateName").getValue();
    i++;
  }
  contentTypeFieldMetadata.setEnumerationValues(pageTemplateEnums);
  contentTypeFieldMetadata.setName("pageTemplate_Grid");
  contentTypeFieldMetadata.setFriendlyName("PagesCustomPersistenceHandler_Page_Template");
  contentTypeFieldMetadata.setGroup("PagesCustomPersistenceHandler_Description");
  contentTypeFieldMetadata.setOrder(2);
  contentTypeFieldMetadata.setTab("General");
  contentTypeFieldMetadata.setTabOrder(100);
  contentTypeFieldMetadata.setExplicitFieldType(SupportedFieldType.UNKNOWN);
  contentTypeFieldMetadata.setProminent(false);
  contentTypeFieldMetadata.setBroadleafEnumeration("");
  contentTypeFieldMetadata.setReadOnly(false);
  contentTypeFieldMetadata.setVisibility(VisibilityEnum.FORM_HIDDEN);
  contentTypeFieldMetadata.setRequiredOverride(true);
  mergedProperties.put("pageTemplate_Grid",contentTypeFieldMetadata);
  BasicFieldMetadata iconMetadata=new BasicFieldMetadata();
  iconMetadata.setFieldType(SupportedFieldType.ASSET);
  iconMetadata.setMutable(true);
  iconMetadata.setInheritedFromType(PageImpl.class.getName());
  iconMetadata.setAvailableToTypes(new String[]{PageImpl.class.getName()});
  iconMetadata.setForeignKeyCollection(false);
  iconMetadata.setMergedPropertyType(MergedPropertyType.PRIMARY);
  iconMetadata.setName("picture");
  iconMetadata.setFriendlyName("PagesCustomPersistenceHandler_Lock");
  iconMetadata.setGroup("PagesCustomPersistenceHandler_Description");
  iconMetadata.setExplicitFieldType(SupportedFieldType.UNKNOWN);
  iconMetadata.setProminent(true);
  iconMetadata.setBroadleafEnumeration("");
  iconMetadata.setReadOnly(false);
  iconMetadata.setVisibility(VisibilityEnum.FORM_HIDDEN);
  iconMetadata.setColumnWidth("30");
  iconMetadata.setOrder(0);
  iconMetadata.setRequiredOverride(true);
  mergedProperties.put("locked",iconMetadata);
  mergedProperties.put("timeRule",createHiddenField("timeRule"));
  mergedProperties.put("requestRule",createHiddenField("requestRule"));
  mergedProperties.put("customerRule",createHiddenField("customerRule"));
  mergedProperties.put("productRule",createHiddenField("productRule"));
}
