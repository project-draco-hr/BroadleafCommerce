{
  BLCMain.NON_MODAL_PROGRESS.startProgress();
  setLinkedValue(getPrimaryKeyValue(((ListGrid)getAssociatedGrid()).getSelectedRecord()));
  JavaScriptObject data=request.getData();
  final TreeNode newRecord=new TreeNode(data);
  persistencePerspective.getOperationTypes().setAddType(OperationType.ENTITY);
  final DataSourceModule entityModule=getCompatibleModule(OperationType.ENTITY);
  Entity entity=entityModule.buildEntity(newRecord,request);
  service.add(new PersistencePackage(entityModule.getCeilingEntityFullyQualifiedClassname(),entity,persistencePerspective,null),new EntityServiceAsyncCallback<Entity>(EntityOperationType.ADD,requestId,request,response,this){
    public void onSuccess(    Entity result){
      super.onSuccess(result);
      TreeNode record=(TreeNode)entityModule.buildRecord(result,true);
      TreeNode[] recordList=new TreeNode[]{record};
      response.setData(recordList);
      persistencePerspective.getOperationTypes().setAddType(OperationType.JOINSTRUCTURE);
      DataSourceModule joinModule=getCompatibleModule(OperationType.JOINSTRUCTURE);
      Entity entity=joinModule.buildEntity(record,request);
      service.add(new PersistencePackage(joinModule.getCeilingEntityFullyQualifiedClassname(),entity,persistencePerspective,null),new EntityServiceAsyncCallback<Entity>(EntityOperationType.ADD,"temp" + requestId,request,response,CategoryTreeDataSource.this){
        public void onSuccess(        Entity result){
          super.onSuccess(result);
          processResponse(requestId,response);
        }
      }
);
    }
  }
);
}
