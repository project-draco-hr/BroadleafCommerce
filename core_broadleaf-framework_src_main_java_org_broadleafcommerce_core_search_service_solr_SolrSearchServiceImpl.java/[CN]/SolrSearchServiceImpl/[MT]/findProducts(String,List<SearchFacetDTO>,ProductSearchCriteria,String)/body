{
  Map<String,SearchFacetDTO> namedFacetMap=getNamedFacetMap(facets,searchCriteria);
  SolrQuery solrQuery=new SolrQuery().setQuery(qualifiedSolrQuery).setFields("id").setRows(searchCriteria.getPageSize()).setStart((searchCriteria.getPage() - 1) * searchCriteria.getPageSize());
  attachSortClause(solrQuery,searchCriteria,defaultSort);
  attachActiveFacetFilters(solrQuery,namedFacetMap,searchCriteria);
  attachFacets(solrQuery,namedFacetMap);
  if (LOG.isTraceEnabled()) {
    try {
      LOG.trace(URLDecoder.decode(solrQuery.toString(),"UTF-8"));
    }
 catch (    Exception e) {
      LOG.trace("Couldn't UTF-8 URL Decode: " + solrQuery.toString());
    }
  }
  QueryResponse response;
  try {
    response=server.query(solrQuery);
    if (LOG.isTraceEnabled()) {
      LOG.trace(response.toString());
    }
  }
 catch (  SolrServerException e) {
    throw new ServiceException("Could not perform search",e);
  }
  setFacetResults(namedFacetMap,response);
  sortFacetResults(namedFacetMap);
  List<Product> products=getProducts(response);
  ProductSearchResult result=new ProductSearchResult();
  result.setFacets(facets);
  result.setProducts(products);
  setPagingAttributes(result,response,searchCriteria);
  return result;
}
