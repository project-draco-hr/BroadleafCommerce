{
  if ("solrhome".equals(solrServer)) {
    final String baseTempPath=System.getProperty("java.io.tmpdir");
    File tempDir=new File(baseTempPath + File.separator + System.getProperty("user.name")+ File.separator+ "solrhome-4.10.3");
    if (System.getProperty("tmpdir.solrhome") != null) {
      tempDir=new File(System.getProperty("tmpdir.solrhome"));
    }
    if (!tempDir.exists()) {
      tempDir.mkdirs();
    }
    solrServer=tempDir.getAbsolutePath();
  }
  File solrXml=new File(new File(solrServer),"solr.xml");
  if (!solrXml.exists()) {
    copyConfigToSolrHome(this.getClass().getResourceAsStream("/solr-default.xml"),solrXml);
  }
  buildSolrCoreDirectories(solrServer);
  LOG.debug(String.format("Using [%s] as solrhome",solrServer));
  LOG.debug(String.format("Using [%s] as solr.xml",solrXml.getAbsoluteFile()));
  if (LOG.isTraceEnabled()) {
    LOG.trace("Contents of solr.xml:");
    BufferedReader br=null;
    try {
      br=new BufferedReader(new FileReader(solrXml));
      String line;
      while ((line=br.readLine()) != null) {
        LOG.trace(line);
      }
    }
  finally {
      if (br != null) {
        try {
          br.close();
        }
 catch (        Throwable e) {
        }
      }
    }
    LOG.trace("Done printing solr.xml");
  }
  CoreContainer coreContainer=CoreContainer.createAndLoad(solrServer,solrXml);
  EmbeddedSolrServer primaryServer=new EmbeddedSolrServer(coreContainer,SolrContext.PRIMARY);
  EmbeddedSolrServer reindexServer=new EmbeddedSolrServer(coreContainer,SolrContext.REINDEX);
  SolrContext.setPrimaryServer(primaryServer);
  SolrContext.setReindexServer(reindexServer);
}
