{
  if (!canHandlePersistence(populateValueRequest,instance)) {
    return FieldProviderResponse.NOT_HANDLED;
  }
  boolean dirty=false;
  try {
    Class<?> startingValueType=getStartingValueType(populateValueRequest);
    Class<?> valueType=getValueType(populateValueRequest,startingValueType);
    if (ValueAssignable.class.isAssignableFrom(valueType)) {
      boolean persistValue=false;
      ValueAssignable assignableValue;
      Object parent;
      try {
        parent=populateValueRequest.getFieldManager().getFieldValue(instance,populateValueRequest.getProperty().getName());
        if (parent == null) {
          parent=startingValueType.newInstance();
          if (!startingValueType.equals(valueType)) {
            setupJoinEntityParent(populateValueRequest,instance,parent);
          }
          populateValueRequest.getFieldManager().setFieldValue(instance,populateValueRequest.getProperty().getName(),parent);
          persistValue=true;
        }
        assignableValue=establishAssignableValue(populateValueRequest,parent);
      }
 catch (      FieldNotAvailableException e) {
        throw new IllegalArgumentException(e);
      }
      dirty=persistValue || (assignableValue != null && assignableValue.getValue().equals(populateValueRequest.getProperty().getValue()));
      if (dirty) {
        updateAssignableValue(populateValueRequest,instance,parent,valueType,persistValue,assignableValue);
      }
    }
 else {
      if (FieldProviderResponse.NOT_HANDLED == super.populateValue(populateValueRequest,instance)) {
        return FieldProviderResponse.NOT_HANDLED;
      }
    }
  }
 catch (  Exception e) {
    throw new PersistenceException(e);
  }
  populateValueRequest.getProperty().setIsDirty(dirty);
  return FieldProviderResponse.HANDLED_BREAK;
}
