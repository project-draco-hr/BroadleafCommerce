{
  Object filterObject=filters.get(effectName);
  if (filterObject == null) {
    throw new FilterNotFoundException("An effects filter was not found for the name: " + effectName);
  }
  Class filterClass=filterObject.getClass();
  Parameter[] marshalledParameters=new Parameter[parameters.length];
  for (int j=0; j < parameters.length; j++) {
    marshalledParameters[j]=conversionManager.convertParameter(parameters[j].getValue(),parameters[j].getType(),factor,parameters[j].isApplyFactor());
  }
  Class[] types=new Class[marshalledParameters.length + 1];
  Object[] args=new Object[marshalledParameters.length + 1];
  for (int j=0; j < types.length - 1; j++) {
    types[j]=marshalledParameters[j].getParameterClass();
    args[j]=marshalledParameters[j].getParameterInstance();
  }
  types[types.length - 1]=RenderingHints.class;
  args[types.length - 1]=null;
  Constructor constructor=filterClass.getConstructor(types);
  Object filterInstance=constructor.newInstance(args);
  Method filterMethod=filterClass.getMethod("filter",new Class[]{BufferedImage.class,BufferedImage.class});
  Object result=filterMethod.invoke(filterInstance,new Object[]{src,null});
  return (BufferedImage)result;
}
