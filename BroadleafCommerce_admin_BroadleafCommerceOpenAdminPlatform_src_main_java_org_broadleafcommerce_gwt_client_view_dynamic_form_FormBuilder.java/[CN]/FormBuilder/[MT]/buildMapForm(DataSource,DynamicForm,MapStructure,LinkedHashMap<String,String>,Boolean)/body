{
  form.setDataSource(dataSource);
  Map<String,List<FormItem>> sections=new HashMap<String,List<FormItem>>();
  List<String> sectionNames=new ArrayList<String>();
  DataSourceField[] fields=dataSource.getFields();
  for (  DataSourceField field : fields) {
    String fieldType=field.getAttribute("fieldType");
    if (fieldType != null && !field.getHidden()) {
      String group=field.getAttribute("formGroup");
      if (group == null) {
        if (fieldType.equals(SupportedFieldType.ID.toString())) {
          group="Primary Key";
        }
 else {
          group="General";
        }
      }
      FormItem formItem;
      FormItem displayFormItem=null;
      if (mapStructure != null && mapStructure.getKeyPropertyName().equals(field.getName())) {
        formItem=new SelectItem();
        ((SelectItem)formItem).setValueMap(mapKeys);
        ((SelectItem)formItem).setMultiple(false);
        ((SelectItem)formItem).setDefaultToFirstOption(true);
      }
 else {
        if (!fieldType.equals(SupportedFieldType.ID.toString()) || (fieldType.equals(SupportedFieldType.ID.toString()) && showId)) {
          Boolean largeEntry=field.getAttributeAsBoolean("largeEntry");
          if (largeEntry == null) {
            largeEntry=false;
          }
          formItem=buildField(dataSource,field,fieldType,largeEntry);
          displayFormItem=buildDisplayField(field,fieldType);
          setupField(null,null,sections,sectionNames,field,group,formItem,displayFormItem);
        }
      }
    }
  }
  groupFields(form,sections,sectionNames);
}
