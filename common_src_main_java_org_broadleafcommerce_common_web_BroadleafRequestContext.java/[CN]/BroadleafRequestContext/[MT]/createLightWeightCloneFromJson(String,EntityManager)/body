{
  BroadleafRequestContext context=new BroadleafRequestContext();
  JsonFactory factory=new JsonFactory();
  ObjectMapper mapper=new ObjectMapper(factory);
  TypeReference<HashMap<String,String>> typeRef=new TypeReference<HashMap<String,String>>(){
  }
;
  HashMap<String,String> json;
  try {
    json=mapper.readValue(Json,typeRef);
  }
 catch (  IOException e) {
    throw ExceptionHelper.refineException(e);
  }
  if (!json.get("ignoreSite").equals("null")) {
    context.setIgnoreSite(Boolean.valueOf(json.get("ignoreSite")));
  }
  if (!json.get("ignoreSparseCache").equals("null")) {
    context.setIgnoreSparseCache(Boolean.valueOf(json.get("ignoreSparseCache")));
  }
  if (!json.get("sandBox").equals("null")) {
    context.setSandBox(em.find(SandBoxImpl.class,Long.parseLong(json.get("sandBox"))));
  }
  if (!json.get("nonPersistentSite").equals("null")) {
    context.setNonPersistentSite(em.find(SiteImpl.class,Long.parseLong(json.get("nonPersistentSite"))));
  }
  if (!json.get("enforceEnterpriseCollectionBehaviorState").equals("null")) {
    context.setEnforceEnterpriseCollectionBehaviorState(EnforceEnterpriseCollectionBehaviorState.valueOf(json.get("enforceEnterpriseCollectionBehaviorState")));
  }
  if (!json.get("admin").equals("null")) {
    context.setAdmin(Boolean.valueOf(json.get("admin")));
  }
  if (!json.get("adminUserId").equals("null")) {
    context.setAdminUserId(Long.parseLong(json.get("ignoreSite")));
  }
  if (!json.get("broadleafCurrency").equals("null")) {
    context.setBroadleafCurrency(em.find(BroadleafCurrencyImpl.class,json.get("broadleafCurrency")));
  }
  if (!json.get("currentCatalog").equals("null")) {
    context.setCurrentCatalog(em.find(CatalogImpl.class,Long.parseLong(json.get("currentCatalog"))));
  }
  if (!json.get("currentProfile").equals("null")) {
    context.setCurrentProfile(em.find(SiteImpl.class,Long.parseLong(json.get("currentProfile"))));
  }
  if (!json.get("deployBehavior").equals("null")) {
    context.setDeployBehavior(DeployBehavior.valueOf(json.get("deployBehavior")));
  }
  if (!json.get("deployState").equals("null")) {
    context.setDeployState(DeployState.valueOf(json.get("deployState")));
  }
  if (!json.get("internalIgnoreFilters").equals("null")) {
    context.setInternalIgnoreFilters(Boolean.valueOf(json.get("internalIgnoreFilters")));
  }
  if (!json.get("locale").equals("null")) {
    context.setLocale(em.find(LocaleImpl.class,json.get("locale")));
  }
  if (!json.get("validateProductionChangesState").equals("null")) {
    context.setValidateProductionChangesState(ValidateProductionChangesState.valueOf(json.get("validateProductionChangesState")));
  }
  if (!json.get("timeZone").equals("null")) {
    context.setTimeZone(TimeZone.getTimeZone(json.get("timeZone")));
  }
  return context;
}
