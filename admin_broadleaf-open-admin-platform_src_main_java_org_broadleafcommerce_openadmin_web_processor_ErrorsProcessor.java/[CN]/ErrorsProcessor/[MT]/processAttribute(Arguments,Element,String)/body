{
  String attributeValue=element.getAttributeValue(attributeName);
  BindStatus bindStatus=FieldUtils.getBindStatus(arguments,attributeValue,true);
  if (bindStatus.isError()) {
    EntityForm form=(EntityForm)((BindingResult)bindStatus.getErrors()).getTarget();
    Map<String,Map<String,String>> result=new HashMap<String,Map<String,String>>();
    for (    FieldError err : bindStatus.getErrors().getFieldErrors()) {
      String tabName=EntityForm.DEFAULT_TAB_NAME;
      Tab tab=form.findTabForField(err.getField());
      if (tab != null) {
        tabName=tab.getTitle();
      }
      Map<String,String> tabErrors=result.get(tabName);
      if (tabErrors == null) {
        tabErrors=new HashMap<String,String>();
        result.put(tabName,tabErrors);
      }
      if (err.getField().contains(DynamicEntityFormInfo.FIELD_SEPARATOR)) {
        String fieldName=err.getField().substring(err.getField().indexOf('[') + 1,err.getField().lastIndexOf(']'));
        String[] fieldInfo=fieldName.split("\\" + DynamicEntityFormInfo.FIELD_SEPARATOR);
        Field formField=form.getDynamicForm(fieldInfo[0]).getFields().get(fieldName);
        if (formField != null) {
          tabErrors.put(formField.getFriendlyName(),err.getCode());
        }
 else {
          LOG.warn("Could not find field " + fieldName + " within the dynamic form "+ fieldInfo[0]);
          tabErrors.put(fieldName,err.getCode());
        }
      }
 else {
        Field formField=form.findField(err.getField());
        if (formField != null) {
          tabErrors.put(formField.getFriendlyName(),err.getCode());
        }
 else {
          LOG.warn("Could not field field " + err.getField() + " within the main form");
          tabErrors.put(err.getField(),err.getCode());
        }
      }
    }
    for (    ObjectError err : bindStatus.getErrors().getGlobalErrors()) {
    }
    Map<String,Object> localVariables=new HashMap<String,Object>();
    localVariables.put("tabErrors",result);
    return ProcessorResult.setLocalVariables(localVariables);
  }
  return ProcessorResult.OK;
}
