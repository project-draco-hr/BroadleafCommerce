{
  int k=0;
  Entity[] targetItemCriterias=new Entity[offerItemCriteria.size()];
  for (  OfferItemCriteria oic : offerItemCriteria) {
    Property[] properties=new Property[2];
    Property mvelProperty=new Property();
    mvelProperty.setName("orderItemMatchRule");
    mvelProperty.setValue(oic.getOrderItemMatchRule());
    Property quantityProperty=new Property();
    quantityProperty.setName("quantity");
    quantityProperty.setValue(oic.getQuantity().toString());
    properties[0]=mvelProperty;
    properties[1]=quantityProperty;
    Entity criteria=new Entity();
    criteria.setProperties(properties);
    targetItemCriterias[k]=criteria;
    k++;
  }
  DataWrapper oiWrapper=translator.createRuleData(targetItemCriterias,"orderItemMatchRule","quantity",ruleBuilderFieldServiceFactory.createInstance("ORDER_ITEM_FIELDS"));
  String json=mapper.writeValueAsString(oiWrapper);
  Property jsonP=new Property();
  jsonP.setName(jsonProp);
  jsonP.setValue(json);
  entity.addProperty(jsonP);
  Property fieldServiceP=new Property();
  fieldServiceP.setName(fieldServiceProp);
  fieldServiceP.setValue("ORDER_ITEM_FIELDS");
  entity.addProperty(fieldServiceP);
}
