{
  Entity entity=persistencePackage.getEntity();
  try {
    PersistencePerspective persistencePerspective=persistencePackage.getPersistencePerspective();
    Property offerCodeId=entity.findProperty("offerCode.id");
    if (offerCodeId != null) {
      OfferCode offerCode=(OfferCode)dynamicEntityDao.retrieve(OfferCodeImpl.class,Long.valueOf(entity.findProperty("offerCode.id").getValue()));
      if (offerCode != null) {
        offerCode.setOffer(null);
        dynamicEntityDao.remove(offerCode);
      }
    }
    Map<String,FieldMetadata> offerProperties=helper.getSimpleMergedProperties(Offer.class.getName(),persistencePerspective);
    Object primaryKey=helper.getPrimaryKey(entity,offerProperties);
    Offer offerInstance=(Offer)dynamicEntityDao.retrieve(Class.forName(entity.getType()[0]),primaryKey);
    dynamicEntityDao.remove(offerInstance);
  }
 catch (  Exception e) {
    LOG.error("Unable to remove entity for " + entity.getType()[0] + ". It is likely this offer is currently associated with one or more orders. Only unused offers may be deleted.",e);
    throw new ServiceException("Unable to remove entity for " + entity.getType()[0] + ". It is likely this offer is currently associated with one or more orders. Only unused offers may be deleted.",e);
  }
}
