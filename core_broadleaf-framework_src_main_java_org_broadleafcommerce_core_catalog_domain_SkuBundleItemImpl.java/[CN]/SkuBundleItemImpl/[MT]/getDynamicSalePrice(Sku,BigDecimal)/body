{
  Money returnPrice=null;
  if (SkuPricingConsiderationContext.hasDynamicPricing()) {
    if (dynamicPrices != null) {
      returnPrice=dynamicPrices.getSalePrice();
    }
 else {
      DefaultDynamicSkuPricingInvocationHandler handler=new DefaultDynamicSkuPricingInvocationHandler(sku,salePrice);
      List<Class<?>> list=ClassUtils.getAllInterfaces(getClass());
      Class<?>[] intfArray=list.toArray(new Class<?>[list.size()]);
      SkuBundleItem proxy=(SkuBundleItem)Proxy.newProxyInstance(getClass().getClassLoader(),intfArray,handler);
      dynamicPrices=SkuPricingConsiderationContext.getSkuPricingService().getSkuBundleItemPrice(proxy,SkuPricingConsiderationContext.getSkuPricingConsiderationContext());
      returnPrice=dynamicPrices.getSalePrice();
    }
  }
 else {
    if (salePrice != null) {
      returnPrice=new Money(salePrice,Money.defaultCurrency());
    }
  }
  return returnPrice;
}
