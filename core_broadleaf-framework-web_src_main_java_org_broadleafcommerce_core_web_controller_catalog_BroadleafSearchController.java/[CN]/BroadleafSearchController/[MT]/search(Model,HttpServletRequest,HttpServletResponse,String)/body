{
  try {
    if (StringUtils.isNotEmpty(query)) {
      query=StringUtils.trim(query);
      query=exploitProtectionService.cleanString(query);
    }
  }
 catch (  ServiceException e) {
    query=null;
  }
  if (query == null || query.length() == 0) {
    return "redirect:/";
  }
  if (request.getParameterMap().containsKey("facetField")) {
    String fieldName=request.getParameter("facetField");
    List<String> activeFieldFilters=new ArrayList<String>();
    Map<String,String[]> parameters=new HashMap<String,String[]>(request.getParameterMap());
    for (Iterator<Entry<String,String[]>> iter=parameters.entrySet().iterator(); iter.hasNext(); ) {
      Map.Entry<String,String[]> entry=iter.next();
      String key=entry.getKey();
      if (key.startsWith(fieldName + "-")) {
        activeFieldFilters.add(key.substring(key.indexOf('-') + 1));
        iter.remove();
      }
    }
    parameters.remove(SearchCriteria.PAGE_NUMBER);
    parameters.put(fieldName,activeFieldFilters.toArray(new String[activeFieldFilters.size()]));
    parameters.remove("facetField");
    String newUrl=ProcessorUtils.getUrl(request.getRequestURL().toString(),parameters);
    return "redirect:" + newUrl;
  }
 else {
    SearchRedirect handler=searchRedirectService.findSearchRedirectBySearchTerm(query);
    if (handler != null) {
      String contextPath=request.getContextPath();
      String url=UrlUtil.fixRedirectUrl(contextPath,handler.getUrl());
      response.sendRedirect(url);
      return null;
    }
    if (StringUtils.isNotEmpty(query)) {
      List<SearchFacetDTO> availableFacets=getSearchService().getSearchFacets();
      SearchCriteria searchCriteria=facetService.buildSearchCriteria(request,availableFacets);
      SearchResult result=getSearchService().findSearchResultsByQuery(query,searchCriteria);
      facetService.setActiveFacetResults(result.getFacets(),request);
      model.addAttribute(PRODUCTS_ATTRIBUTE_NAME,result.getProducts());
      model.addAttribute(FACETS_ATTRIBUTE_NAME,result.getFacets());
      model.addAttribute(PRODUCT_SEARCH_RESULT_ATTRIBUTE_NAME,result);
      model.addAttribute(ORIGINAL_QUERY_ATTRIBUTE_NAME,query);
    }
  }
  return getSearchView();
}
