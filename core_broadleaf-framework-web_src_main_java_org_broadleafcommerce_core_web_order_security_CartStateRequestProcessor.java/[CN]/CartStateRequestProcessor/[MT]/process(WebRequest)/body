{
  Customer customer=CustomerState.getCustomer();
  if (customer == null) {
    LOG.info("No customer was found on the current request, no cart will be added to the current request. Ensure that the" + " blCustomerStateFilter occurs prior to the blCartStateFilter");
    return;
  }
  ExtensionResultHolder<Order> erh=new ExtensionResultHolder<Order>();
  extensionManager.getProxy().lookupOrCreateCart(request,customer,erh);
  Order cart;
  if (erh.getResult() != null) {
    cart=erh.getResult();
  }
 else {
    cart=getOverrideCart(request);
    if (cart == null && mergeCartNeeded(customer,request)) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Merge cart required, calling mergeCart " + customer.getId());
      }
      cart=mergeCart(customer,request);
    }
 else     if (cart == null) {
      cart=orderService.findCartForCustomer(customer);
    }
    if (cart == null) {
      cart=orderService.getNullOrder();
    }
 else {
      updateCartService.updateAndValidateCart(cart);
    }
  }
  request.setAttribute(cartRequestAttributeName,cart,WebRequest.SCOPE_REQUEST);
  @SuppressWarnings("unchecked") Map<String,Object> ruleMap=(Map<String,Object>)request.getAttribute(BLC_RULE_MAP_PARAM,WebRequest.SCOPE_REQUEST);
  if (ruleMap == null) {
    ruleMap=new HashMap<String,Object>();
  }
  ruleMap.put("order",cart);
  ruleMap.put("cart",cart);
  request.setAttribute(BLC_RULE_MAP_PARAM,ruleMap,WebRequest.SCOPE_REQUEST);
}
