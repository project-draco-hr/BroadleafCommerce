{
  String[] customCriteria=persistencePackage.getCustomCriteria();
  if (customCriteria != null && customCriteria.length > 0) {
    LOG.warn("custom persistence handlers and custom criteria not supported for remove types other than BASIC");
  }
  PersistencePerspective persistencePerspective=persistencePackage.getPersistencePerspective();
  Entity entity=persistencePackage.getEntity();
  try {
    AdornedTargetList adornedTargetList=(AdornedTargetList)persistencePerspective.getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.ADORNEDTARGETLIST);
    Class<?>[] entities=persistenceManager.getPolymorphicEntities(adornedTargetList.getAdornedTargetEntityClassname());
    Map<String,FieldMetadata> mergedProperties=persistenceManager.getDynamicEntityDao().getMergedProperties(adornedTargetList.getAdornedTargetEntityClassname(),entities,null,new String[]{},new ForeignKey[]{},MergedPropertyType.ADORNEDTARGETLIST,false,new String[]{},new String[]{},null,"");
    CriteriaTransferObject ctoInserted=new CriteriaTransferObject();
    FilterAndSortCriteria filterCriteriaInsertedLinked=ctoInserted.get(adornedTargetList.getCollectionFieldName());
    filterCriteriaInsertedLinked.setFilterValue(entity.findProperty(adornedTargetList.getLinkedObjectPath() + "." + adornedTargetList.getLinkedIdProperty()).getValue());
    FilterAndSortCriteria filterCriteriaInsertedTarget=ctoInserted.get(adornedTargetList.getCollectionFieldName() + "Target");
    filterCriteriaInsertedTarget.setFilterValue(entity.findProperty(adornedTargetList.getTargetObjectPath() + "." + adornedTargetList.getTargetIdProperty()).getValue());
    BaseCtoConverter ctoConverterInserted=getAdornedTargetCtoConverter(persistencePerspective,ctoInserted,mergedProperties,adornedTargetList);
    PersistentEntityCriteria queryCriteriaInserted=ctoConverterInserted.convert(ctoInserted,adornedTargetList.getAdornedTargetEntityClassname());
    List<Serializable> recordsInserted=persistenceManager.getDynamicEntityDao().query(queryCriteriaInserted,Class.forName(adornedTargetList.getAdornedTargetEntityClassname()));
    persistenceManager.getDynamicEntityDao().remove(recordsInserted.get(0));
  }
 catch (  Exception e) {
    LOG.error("Problem removing entity",e);
    throw new ServiceException("Problem removing entity : " + e.getMessage(),e);
  }
}
