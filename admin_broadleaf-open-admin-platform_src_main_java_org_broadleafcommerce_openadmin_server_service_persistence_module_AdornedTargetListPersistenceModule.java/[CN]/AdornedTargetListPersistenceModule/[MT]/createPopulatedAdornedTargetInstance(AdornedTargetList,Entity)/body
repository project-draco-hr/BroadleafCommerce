{
  Serializable instance=(Serializable)Class.forName(StringUtils.isEmpty(adornedTargetList.getAdornedTargetEntityPolymorphicType()) ? adornedTargetList.getAdornedTargetEntityClassname() : adornedTargetList.getAdornedTargetEntityPolymorphicType()).newInstance();
  String targetPath=adornedTargetList.getTargetObjectPath() + "." + adornedTargetList.getTargetIdProperty();
  String linkedPath=adornedTargetList.getLinkedObjectPath() + "." + adornedTargetList.getLinkedIdProperty();
  getFieldManager().setFieldValue(instance,linkedPath,Long.valueOf(entity.findProperty(linkedPath).getValue()));
  Object test1=getFieldManager().getFieldValue(instance,adornedTargetList.getLinkedObjectPath());
  Object test1PersistedObject=persistenceManager.getDynamicEntityDao().retrieve(test1.getClass(),Long.valueOf(entity.findProperty(linkedPath).getValue()));
  Assert.isTrue(test1PersistedObject != null,"Entity not found");
  getFieldManager().setFieldValue(instance,targetPath,Long.valueOf(entity.findProperty(targetPath).getValue()));
  Object test2=getFieldManager().getFieldValue(instance,adornedTargetList.getTargetObjectPath());
  Object test2PersistedObject=persistenceManager.getDynamicEntityDao().retrieve(test2.getClass(),Long.valueOf(entity.findProperty(targetPath).getValue()));
  Assert.isTrue(test2PersistedObject != null,"Entity not found");
  return instance;
}
