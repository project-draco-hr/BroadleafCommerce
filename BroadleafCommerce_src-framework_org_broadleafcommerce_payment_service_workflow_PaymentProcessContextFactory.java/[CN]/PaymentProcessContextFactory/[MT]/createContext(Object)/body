{
  if (!(seedData instanceof PaymentSeed)) {
    throw new WorkflowException("Seed data instance is incorrect. " + "Required class is " + PaymentSeed.class.getName() + " "+ "but found class: "+ seedData.getClass().getName());
  }
  PaymentSeed paymentSeed=(PaymentSeed)seedData;
  Map<PaymentInfo,Referenced> secureMap=paymentSeed.getInfos();
  if (secureMap == null) {
    secureMap=new HashMap<PaymentInfo,Referenced>();
    List<PaymentInfo> paymentInfoList=orderService.readPaymentInfosForOrder(paymentSeed.getOrder());
    if (paymentInfoList == null || paymentInfoList.size() == 0) {
      throw new WorkflowException("No payment info instances associated with the order -- id: " + paymentSeed.getOrder().getId());
    }
    Iterator<PaymentInfo> infos=paymentInfoList.iterator();
    while (infos.hasNext()) {
      PaymentInfo info=infos.next();
      secureMap.put(info,securePaymentInfoService.findSecurePaymentInfo(info.getReferenceNumber(),info.getType()));
    }
  }
  CombinedPaymentContextSeed combinedSeed=new CombinedPaymentContextSeed(secureMap,paymentActionType);
  PaymentContext response=new PaymentContext();
  response.setSeedData(combinedSeed);
  return response;
}
