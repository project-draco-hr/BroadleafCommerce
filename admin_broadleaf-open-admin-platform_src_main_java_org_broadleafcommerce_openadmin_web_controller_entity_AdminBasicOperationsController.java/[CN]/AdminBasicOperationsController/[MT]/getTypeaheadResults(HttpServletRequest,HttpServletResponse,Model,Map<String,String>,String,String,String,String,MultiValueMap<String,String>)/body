{
  List<SectionCrumb> sectionCrumbs=getSectionCrumbs(request,null,null);
  PersistencePackageRequest ppr=getSectionPersistencePackageRequest(owningClass,requestParams,sectionCrumbs,pathVars);
  ClassMetadata mainMetadata=service.getClassMetadata(ppr).getDynamicResultSet().getClassMetaData();
  Property collectionProperty=mainMetadata.getPMap().get(collectionField);
  FieldMetadata md=collectionProperty.getMetadata();
  ppr=PersistencePackageRequest.fromMetadata(md,sectionCrumbs);
  ppr.addFilterAndSortCriteria(getCriteria(requestParams));
  ppr.setStartIndex(getStartIndex(requestParams));
  ppr.setMaxIndex(getMaxIndex(requestParams));
  ppr.removeFilterAndSortCriteria("query");
  ppr.removeFilterAndSortCriteria("requestingEntityId");
  ppr.addCustomCriteria("requestingEntityId=" + requestingEntityId);
  List<Map<String,String>> responses=new ArrayList<Map<String,String>>();
  if (md instanceof BasicFieldMetadata) {
    String searchField=searchFieldResolver.resolveField(((BasicFieldMetadata)md).getForeignKeyClass());
    ppr.addFilterAndSortCriteria(new FilterAndSortCriteria(searchField,query));
    DynamicResultSet drs=service.getRecords(ppr).getDynamicResultSet();
    ClassMetadata lookupMetadata=service.getClassMetadata(ppr).getDynamicResultSet().getClassMetaData();
    for (    Entity e : drs.getRecords()) {
      Map<String,String> responseMap=new HashMap<String,String>();
      String idProperty=service.getIdProperty(lookupMetadata);
      responseMap.put("id",e.findProperty(idProperty).getValue());
      String displayKey=e.findProperty(searchField).getDisplayValue();
      if (StringUtils.isBlank(displayKey)) {
        displayKey=e.findProperty(searchField).getValue();
      }
      responseMap.put("displayKey",displayKey);
      responses.add(responseMap);
    }
  }
  return responses;
}
