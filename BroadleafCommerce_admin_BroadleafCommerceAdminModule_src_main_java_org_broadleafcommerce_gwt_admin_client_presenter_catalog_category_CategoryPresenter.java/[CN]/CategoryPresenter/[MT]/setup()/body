{
  getPresenterSetupManager().addOrReplaceItem(new PresenterSetupItem("categoryTreeDS",new CategoryTreeDataSourceFactory(),null,new Object[]{rootId,rootName},new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource top){
      setupDisplayItems(top);
      ((TreeGridDataSource)top).setupGridFields(new String[]{},new Boolean[]{},"250","100");
    }
  }
));
  getPresenterSetupManager().addOrReplaceItem(new PresenterSetupItem("categorySearch",new CategorySearchDataSourceFactory(),new OperationTypes(OperationType.ENTITY,OperationType.ENTITY,OperationType.JOINSTRUCTURE,OperationType.ENTITY,OperationType.ENTITY),new Object[]{},new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource result){
      categorySearchDataSource=(ListGridDataSource)result;
      categorySearchDataSource.resetProminenceOnly("name","urlKey","activeStartDate","activeEndDate");
      EntitySearchDialog categorySearchView=new EntitySearchDialog(categorySearchDataSource);
      library.put("categorySearchView",categorySearchView);
      ((DynamicEntityDataSource)((CategoryDisplay)getDisplay()).getListDisplay().getGrid().getDataSource()).getFormItemCallbackHandlerManager().addSearchFormItemCallback("defaultParentCategory",categorySearchView,"Category Search",((CategoryDisplay)getDisplay()).getDynamicFormDisplay());
    }
  }
));
  getPresenterSetupManager().addOrReplaceItem(new PresenterSetupItem("allChildCategoriesDS",new CategoryListDataSourceFactory(),new OperationTypes(OperationType.JOINSTRUCTURE,OperationType.JOINSTRUCTURE,OperationType.JOINSTRUCTURE,OperationType.JOINSTRUCTURE,OperationType.ENTITY),new Object[]{},new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource result){
      allChildCategoriesPresenter=new AllChildCategoriesPresenter(CategoryPresenter.this,((CategoryDisplay)getDisplay()).getAllCategoriesDisplay(),(EntitySearchDialog)library.get("categorySearchView"),AdminModule.ADMINMESSAGES.categorySearchTitle());
      allChildCategoriesPresenter.setDataSource((ListGridDataSource)result,new String[]{"name","urlKey"},new Boolean[]{false,false});
    }
  }
));
  getPresenterSetupManager().addOrReplaceItem(new PresenterSetupItem("orphanedCategoriesDS",new OrphanedCategoryListDataSourceFactory(),null,new Object[]{rootId},new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource result){
      ((CategoryDisplay)getDisplay()).getOrphanedCategoryGrid().setDataSource(result);
      ((ListGridDataSource)result).setAssociatedGrid(((CategoryDisplay)getDisplay()).getOrphanedCategoryGrid());
      ((ListGridDataSource)result).setupGridFields(new String[]{"name","urlKey"},new Boolean[]{false,false});
      Criteria myCriteria=new Criteria();
      myCriteria.addCriteria(OrphanedCategoryListDataSourceFactory.foreignKeyName,"0");
      ((CategoryDisplay)getDisplay()).getOrphanedCategoryGrid().fetchData(myCriteria);
    }
  }
));
  getPresenterSetupManager().addOrReplaceItem(new PresenterSetupItem("productSearchDS",new ProductListDataSourceFactory(),null,new Object[]{},new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource result){
      ListGridDataSource productSearchDataSource=(ListGridDataSource)result;
      productSearchDataSource.resetPermanentFieldVisibility("name","description","model","manufacturer","activeStartDate","activeEndDate");
      EntitySearchDialog productSearchView=new EntitySearchDialog(productSearchDataSource);
      library.put("productSearchView",productSearchView);
    }
  }
));
  getPresenterSetupManager().addOrReplaceItem(new PresenterSetupItem("featuredProductsDS",new FeaturedProductListDataSourceFactory(),null,new Object[]{},new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource result){
      featuredPresenter=new EditableJoinStructurePresenter(((CategoryDisplay)getDisplay()).getFeaturedDisplay(),(EntitySearchDialog)library.get("productSearchView"),AdminModule.ADMINMESSAGES.productSearchTitle(),AdminModule.ADMINMESSAGES.setPromotionMessageTitle(),"promotionMessage");
      featuredPresenter.setDataSource((ListGridDataSource)result,new String[]{"name","promotionMessage"},new Boolean[]{false,true});
    }
  }
));
  getPresenterSetupManager().addOrReplaceItem(new PresenterSetupItem("allChildProductsDS",new AllProductsDataSourceFactory(),new OperationTypes(OperationType.JOINSTRUCTURE,OperationType.JOINSTRUCTURE,OperationType.JOINSTRUCTURE,OperationType.JOINSTRUCTURE,OperationType.ENTITY),new Object[]{},new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource result){
      childProductsPresenter=new SimpleSearchJoinStructurePresenter(((CategoryDisplay)getDisplay()).getAllProductsDisplay(),(EntitySearchDialog)library.get("productSearchView"),AdminModule.ADMINMESSAGES.productSearchPrompt());
      childProductsPresenter.setDataSource((ListGridDataSource)result,new String[]{"name","model","manufacturer"},new Boolean[]{false,false,false});
    }
  }
));
  getPresenterSetupManager().addOrReplaceItem(new PresenterSetupItem("mediaMapDS",new MediaMapDataSourceFactory(this),null,new Object[]{getMediaMapKeys()},new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource result){
      Map<String,Object> initialValues=new HashMap<String,Object>();
      initialValues.put("name",AdminModule.ADMINMESSAGES.mediaNameDefault());
      initialValues.put("label",AdminModule.ADMINMESSAGES.mediaLabelDefault());
      mediaPresenter=new MapStructurePresenter(((CategoryDisplay)getDisplay()).getMediaDisplay(),getMediaEntityView(),AdminModule.ADMINMESSAGES.newMediaTitle(),initialValues);
      mediaPresenter.setDataSource((ListGridDataSource)result,new String[]{"key","name","url","label"},new Boolean[]{true,true,true,true});
    }
  }
));
}
