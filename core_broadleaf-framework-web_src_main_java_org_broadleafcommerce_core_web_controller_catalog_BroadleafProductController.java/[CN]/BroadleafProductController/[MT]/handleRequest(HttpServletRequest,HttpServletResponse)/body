{
  ModelAndView model=new ModelAndView();
  Product product=(Product)request.getAttribute(ProductHandlerMapping.CURRENT_PRODUCT_ATTRIBUTE_NAME);
  assert(product != null);
  model.addObject(MODEL_ATTRIBUTE_NAME,product);
  Set<Product> allProductsSet=new HashSet<Product>();
  allProductsSet.add(product);
  model.addObject(ALL_PRODUCTS_ATTRIBUTE_NAME,new HashSet<Product>(allProductsSet));
  model.addObject("BLC_PAGE_TYPE","product");
  addDeepLink(model,deepLinkService,product);
  String templatePath=null;
  if (StringUtils.isNotBlank(product.getDisplayTemplate())) {
    templatePath=product.getDisplayTemplate();
  }
 else {
    templatePath=getDefaultProductView();
  }
  ExtensionResultHolder<String> erh=new ExtensionResultHolder<String>();
  ExtensionResultStatusType extResult=templateOverrideManager.getProxy().getOverrideTemplate(erh,product);
  if (extResult != ExtensionResultStatusType.NOT_HANDLED) {
    templatePath=erh.getResult();
  }
  model.setViewName(templatePath);
  return model;
}
