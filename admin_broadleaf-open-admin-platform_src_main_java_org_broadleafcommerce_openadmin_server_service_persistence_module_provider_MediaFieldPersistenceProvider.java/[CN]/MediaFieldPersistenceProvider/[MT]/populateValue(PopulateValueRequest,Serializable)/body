{
  if (!canHandlePersistence(populateValueRequest,instance)) {
    return FieldProviderResponse.NOT_HANDLED;
  }
  String prop=populateValueRequest.getProperty().getName();
  if (prop.contains(FieldManager.MAPFIELDSEPARATOR)) {
    Field field=populateValueRequest.getFieldManager().getField(instance.getClass(),prop.substring(0,prop.indexOf(FieldManager.MAPFIELDSEPARATOR)));
    if (field.getAnnotation(OneToMany.class) == null) {
      throw new UnsupportedOperationException("MediaFieldPersistenceProvider is currently only compatible with map fields when modelled using @OneToMany");
    }
  }
  FieldProviderResponse response=FieldProviderResponse.HANDLED;
  boolean dirty;
  try {
    setNonDisplayableValues(populateValueRequest);
    Class<?> valueType=getStartingValueType(populateValueRequest);
    if (Media.class.isAssignableFrom(valueType)) {
      Media newMedia=convertJsonToMedia(populateValueRequest.getProperty().getUnHtmlEncodedValue(),valueType);
      boolean persist=false;
      Media media;
      try {
        media=(Media)populateValueRequest.getFieldManager().getFieldValue(instance,populateValueRequest.getProperty().getName());
        if (media == null) {
          media=(Media)valueType.newInstance();
          Object parent=extractParent(populateValueRequest,instance);
          populateValueRequest.getFieldManager().setFieldValue(media,populateValueRequest.getMetadata().getToOneParentProperty(),parent);
          populateValueRequest.getFieldManager().setFieldValue(media,populateValueRequest.getMetadata().getMapKeyValueProperty(),prop.substring(prop.indexOf(FieldManager.MAPFIELDSEPARATOR) + FieldManager.MAPFIELDSEPARATOR.length(),prop.length()));
          persist=true;
        }
      }
 catch (      FieldNotAvailableException e) {
        throw new IllegalArgumentException(e);
      }
      populateValueRequest.getProperty().setOriginalValue(convertMediaToJson(media));
      dirty=establishDirtyState(newMedia,media);
      if (dirty) {
        updateMedia(populateValueRequest,newMedia,persist,media);
        response=FieldProviderResponse.HANDLED_BREAK;
      }
    }
 else {
      throw new UnsupportedOperationException("MediaFields only work with Media types.");
    }
  }
 catch (  Exception e) {
    throw ExceptionHelper.refineException(PersistenceException.class,PersistenceException.class,e);
  }
  populateValueRequest.getProperty().setIsDirty(dirty);
  return response;
}
