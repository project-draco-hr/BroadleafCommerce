{
  for (  String targetPackage : targetPackages) {
    DependencyVisitor v=new DependencyVisitor();
    List<String> classes=getClasses(targetPackage);
    List<String> finalClasses=new ArrayList<String>();
    for (    String clazz : classes) {
      testPackage: {
        for (        String acceptablePackage : acceptablePackages) {
          if (clazz.startsWith(acceptablePackage)) {
            break testPackage;
          }
        }
        finalClasses.add(clazz);
      }
    }
    for (    String clazz : finalClasses) {
      new ClassReader(clazz).accept(v,false);
    }
    Set<String> classPackages=v.getPackages();
    String[] classNames=classPackages.toArray(new String[classPackages.size()]);
    for (    String className : classNames) {
      className=className.replace('/','.');
      for (      String testPackage : testPackages) {
        if (className.startsWith(testPackage) || testPackage.startsWith(className)) {
          throw new RuntimeException("Improper dependency (" + className + ") found in package ("+ targetPackage+ ")");
        }
      }
    }
  }
}
