{
  MergeCartResponse mergeCartResponse=new MergeCartResponse();
  ReconstructCartResponse reconstructCartResponse=reconstructCart(customer);
  mergeCartResponse.setRemovedItems(reconstructCartResponse.getRemovedItems());
  Order customerCart=reconstructCartResponse.getOrder();
  if ((customerCart == null || !customerCart.getId().equals(anonymousCartId)) && anonymousCartId != null) {
    Order anonymousCart=findOrderById(anonymousCartId);
    if (anonymousCart != null && anonymousCart.getOrderItems() != null && !anonymousCart.getOrderItems().isEmpty()) {
      if (customerCart == null) {
        customerCart=createNewCartForCustomer(customer);
      }
      for (      OrderItem orderItem : anonymousCart.getOrderItems()) {
        if (orderItem instanceof DiscreteOrderItem) {
          DiscreteOrderItem discreteOrderItem=(DiscreteOrderItem)orderItem;
          if (discreteOrderItem.getSku().isActive(discreteOrderItem.getProduct(),orderItem.getCategory())) {
            DiscreteOrderItemRequest itemRequest=createDiscreteOrderItemRequest(discreteOrderItem);
            addDiscreteItemToOrder(customerCart,itemRequest);
            mergeCartResponse.getAddedItems().add(orderItem);
          }
 else {
            mergeCartResponse.getRemovedItems().add(orderItem);
          }
        }
 else         if (orderItem instanceof BundleOrderItem) {
          BundleOrderItem bundleOrderItem=(BundleOrderItem)orderItem;
          boolean removeBundle=false;
          List<DiscreteOrderItemRequest> discreteOrderItemRequests=new ArrayList<DiscreteOrderItemRequest>();
          for (          DiscreteOrderItem discreteOrderItem : bundleOrderItem.getDiscreteOrderItems()) {
            DiscreteOrderItemRequest itemRequest=createDiscreteOrderItemRequest(discreteOrderItem);
            discreteOrderItemRequests.add(itemRequest);
            if (!discreteOrderItem.getSku().isActive(discreteOrderItem.getProduct(),orderItem.getCategory())) {
              removeBundle=true;
            }
          }
          BundleOrderItemRequest bundleOrderItemRequest=createBundleOrderItemRequest(bundleOrderItem,discreteOrderItemRequests);
          if (!removeBundle) {
            addBundleItemToOrder(customerCart,bundleOrderItemRequest);
            mergeCartResponse.getAddedItems().add(orderItem);
          }
 else {
            mergeCartResponse.getRemovedItems().add(orderItem);
          }
        }
      }
      cancelOrder(anonymousCart);
    }
  }
  mergeCartResponse.setOrder(customerCart);
  return mergeCartResponse;
}
