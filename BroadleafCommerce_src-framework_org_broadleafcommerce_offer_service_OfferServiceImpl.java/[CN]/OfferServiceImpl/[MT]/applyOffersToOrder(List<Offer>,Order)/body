{
  List<CandidateOrderOffer> qualifiedOrderOffers=new ArrayList<CandidateOrderOffer>();
  List<CandidateItemOffer> qualifiedItemOffers=new ArrayList<CandidateItemOffer>();
  order.removeAllCandidateOffers();
  order.removeAllAdjustments();
  if (offers != null && !offers.isEmpty()) {
    order.setSubTotal(order.calculateOrderItemsCurrentPrice());
    List<Offer> filteredOffers=removeOutOfDateOffers(offers);
    filteredOffers=removeInvalidCustomerOffers(filteredOffers,order.getCustomer());
    List<DiscreteOrderItem> discreteOrderItems=order.getDiscountableDiscreteOrderItems();
    if (filteredOffers != null && !filteredOffers.isEmpty()) {
      for (      Offer offer : filteredOffers) {
        if (offer.getType().equals(OfferType.ORDER)) {
          if (couldOfferApplyToOrder(offer,order)) {
            CandidateOrderOffer candidateOffer=new CandidateOrderOfferImpl(order,offer);
            order.addCandidateOrderOffer(candidateOffer);
            qualifiedOrderOffers.add(candidateOffer);
          }
        }
 else         if (offer.getType().equals(OfferType.ORDER_ITEM)) {
          for (          DiscreteOrderItem discreteOrderItem : discreteOrderItems) {
            if (couldOfferApplyToOrder(offer,order,discreteOrderItem)) {
              CandidateItemOffer candidateOffer=new CandidateItemOfferImpl(discreteOrderItem,offer);
              discreteOrderItem.addCandidateItemOffer(candidateOffer);
              qualifiedItemOffers.add(candidateOffer);
            }
          }
        }
 else         if (offer.getType().equals(OfferType.FULFILLMENT_GROUP)) {
          for (          FulfillmentGroup fulfillmentGroup : order.getFulfillmentGroups()) {
            if (couldOfferApplyToOrder(offer,order,fulfillmentGroup)) {
              CandidateFulfillmentGroupOffer candidateOffer=new CandidateFulfillmentGroupOfferImpl(fulfillmentGroup,offer);
              fulfillmentGroup.addCandidateFulfillmentGroupOffer(candidateOffer);
            }
          }
        }
      }
      if (!qualifiedItemOffers.isEmpty()) {
        Collections.sort(qualifiedItemOffers,new BeanComparator("discountedPrice"));
        Collections.sort(qualifiedItemOffers,new BeanComparator("priority"));
        int appliedItemOffersCount=applyAllItemOffers(qualifiedItemOffers);
        if (appliedItemOffersCount > 0) {
          for (          DiscreteOrderItem discreteOrderItem : discreteOrderItems) {
            if (discreteOrderItem.getAdjustmentPrice() != null) {
              Money itemPrice=discreteOrderItem.getRetailPrice();
              if (discreteOrderItem.getSalePrice() != null) {
                itemPrice=discreteOrderItem.getSalePrice();
              }
              if (discreteOrderItem.getAdjustmentPrice().greaterThanOrEqual(itemPrice)) {
                discreteOrderItem.removeAllAdjustments();
              }
            }
          }
        }
      }
      if (!qualifiedOrderOffers.isEmpty()) {
        Collections.sort(qualifiedOrderOffers,new BeanComparator("discountedPrice"));
        Collections.sort(qualifiedOrderOffers,new BeanComparator("priority"));
        applyAllOrderOffers(qualifiedOrderOffers,order);
        if ((order.getOrderAdjustments().size() > 0) && (order.containsNotCombinableItemOffer())) {
          if (order.getAdjustmentPrice().greaterThanOrEqual(order.calculateOrderItemsCurrentPrice())) {
            order.removeAllOrderAdjustments();
          }
 else {
            order.removeAllItemAdjustments();
          }
        }
      }
    }
  }
  order.assignOrderItemsFinalPrice();
  order.setSubTotal(order.calculateOrderItemsFinalPrice());
  if (!order.getOrderAdjustments().isEmpty()) {
    List<CandidateOrderOffer> finalQualifiedOrderOffers=new ArrayList<CandidateOrderOffer>();
    order.removeAllOrderAdjustments();
    for (    CandidateOrderOffer condidateOrderOffer : qualifiedOrderOffers) {
      if (couldOfferApplyToOrder(condidateOrderOffer.getOffer(),order)) {
        finalQualifiedOrderOffers.add(condidateOrderOffer);
      }
    }
    if (!finalQualifiedOrderOffers.isEmpty()) {
      applyAllOrderOffers(finalQualifiedOrderOffers,order);
    }
  }
}
