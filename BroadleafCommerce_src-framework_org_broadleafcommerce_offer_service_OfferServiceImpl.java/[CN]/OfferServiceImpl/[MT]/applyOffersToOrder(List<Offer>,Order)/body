{
  List<Offer> qualifiedOrderOffers=new ArrayList<Offer>();
  List<CandidateItemOffer> qualifiedItemOffers=new ArrayList<CandidateItemOffer>();
  order.removeAllOffers();
  order.setCandidateOffers(new ArrayList<Offer>());
  order=pricingService.executePricing(order);
  List<Offer> offersWithValidDates=removeOutOfDateOffers(offers);
  if (offersWithValidDates != null) {
    for (    Offer offer : offersWithValidDates) {
      if (offer.getType().equals(OfferType.ORDER)) {
        offer=calculateAtomOfferDiscount(offer,order.getSubTotal());
        qualifiedOrderOffers.add(offer);
      }
 else       if (offer.getType().equals(OfferType.ORDER_ITEM)) {
        for (        OrderItem orderItem : order.getOrderItems()) {
          if (couldOfferApplyToOrderItem(offer,order,orderItem))           qualifiedItemOffers.add(new CandidateItemOfferImpl(orderItem,offer));
        }
      }
 else       if (offer.getType().equals(OfferType.FULLFILLMENT_GROUP)) {
      }
    }
    Collections.sort(qualifiedOrderOffers,ComparatorUtils.reversedComparator(new BeanComparator("discountedPrice")));
    Collections.sort(qualifiedOrderOffers,new BeanComparator("priority"));
    order.setCandidateOffers(qualifiedOrderOffers);
    for (    OrderItem orderItem : order.getOrderItems()) {
      orderItem.setCandidateItemOffers(qualifiedItemOffers);
    }
    for (    OrderItem orderItem : order.getOrderItems()) {
      for (      CandidateItemOffer itemOffer : qualifiedItemOffers) {
        if (orderItem.getCandidateItemOffers().contains(itemOffer)) {
          if (itemOffer.getDiscountedPrice().greaterThan(orderItem.getSalePrice())) {
            if (requiresMultipleSkus(itemOffer)) {
            }
            if (!orderItem.isMarkedForOffer() || (orderItem.isMarkedForOffer() && itemOffer.getOffer().isApplyDiscountToMarkedItems())) {
              if (orderItem.isMarkedForOffer()) {
                if (itemOffer.getOffer().isStackable()) {
                  applyItemOffer(orderItem,itemOffer);
                }
              }
 else {
                applyItemOffer(orderItem,itemOffer);
              }
            }
          }
        }
      }
    }
    Money newOrderTotal=pricingService.executePricing(order).getSubTotal();
    for (    Offer offer : qualifiedOrderOffers) {
      if (order.getCandidateOffers().contains(offer)) {
        if (newOrderTotal.greaterThan(order.getSubTotal())) {
          if (!order.isMarkedForOffer() || (order.isMarkedForOffer() && offer.isApplyDiscountToMarkedItems())) {
            if (order.isMarkedForOffer()) {
              if (offer.isStackable()) {
                applyOrderOffer(order,offer);
              }
            }
 else {
              applyOrderOffer(order,offer);
            }
          }
        }
      }
    }
  }
}
