{
  Order order=new OrderImpl();
  order.setId(getOrderId());
  Category category1=new CategoryImpl();
  category1.setName("test1");
  category1.setId(1L);
  Product product1=new ProductImpl();
  Sku sku1=new SkuImpl();
  sku1.setName("test1");
  sku1.setId(1L);
  sku1.setDiscountable(true);
  sku1.setRetailPrice(new Money(19.99D));
  product1.setDefaultSku(sku1);
  category1.getAllProducts().add(product1);
  Category category2=new CategoryImpl();
  category2.setName("test2");
  category2.setId(2L);
  Product product2=new ProductImpl();
  Sku sku2=new SkuImpl();
  sku2.setName("test2");
  sku2.setId(2L);
  sku2.setDiscountable(true);
  sku2.setRetailPrice(new Money(29.99D));
  product2.setDefaultSku(sku2);
  category2.getAllProducts().add(product2);
  DiscreteOrderItem orderItem1=new DiscreteOrderItemImpl();
  orderItem1.setCategory(category1);
  orderItem1.setName("test1");
  orderItem1.setOrder(order);
  orderItem1.setOrderItemType(OrderItemType.DISCRETE);
  orderItem1.setProduct(product1);
  orderItem1.setQuantity(2);
  orderItem1.setSku(sku1);
  orderItem1.setRetailPrice(new Money(19.99D));
  orderItem1.setPrice(new Money(19.99D));
  orderItem1.setId(getOrderItemId());
  orderItem1.setOrder(order);
  order.getOrderItems().add(orderItem1);
  DiscreteOrderItem orderItem2=new DiscreteOrderItemImpl();
  orderItem2.setCategory(category2);
  orderItem2.setName("test2");
  orderItem2.setOrder(order);
  orderItem2.setOrderItemType(OrderItemType.DISCRETE);
  orderItem2.setProduct(product2);
  orderItem2.setQuantity(3);
  orderItem2.setSku(sku2);
  orderItem2.setRetailPrice(new Money(29.99D));
  orderItem2.setPrice(new Money(29.99D));
  orderItem2.setId(getOrderItemId());
  orderItem2.setOrder(order);
  order.getOrderItems().add(orderItem2);
  Customer customer=new CustomerImpl();
  customer.setEmailAddress("test@test.com");
  customer.setFirstName("John");
  customer.setLastName("Tester");
  customer.setReceiveEmail(true);
  customer.setRegistered(true);
  order.setCustomer(customer);
  order.setEmailAddress("test@test.com");
  FulfillmentGroup fg1=new FulfillmentGroupImpl();
  fg1.setId(1L);
  Address address1=new AddressImpl();
  address1.setAddressLine1("123 Test Road");
  address1.setCity("Dallas");
  Country country=new CountryImpl();
  country.setAbbreviation("US");
  country.setName("United States");
  address1.setCountry(country);
  address1.setDefault(true);
  address1.setFirstName("John");
  address1.setLastName("Tester");
  address1.setPostalCode("75244");
  Phone primary=new PhoneImpl();
  primary.setPhoneNumber("972-976-1234");
  address1.setPhonePrimary(primary);
  State state=new StateImpl();
  state.setAbbreviation("TX");
  state.setCountry(country);
  state.setName("Texas");
  address1.setState(state);
  fg1.setAddress(address1);
  fg1.setOrder(order);
  fg1.setPrimary(true);
  fg1.setRetailShippingPrice(new Money(10D));
  fg1.setShippingPrice(new Money(10D));
  fg1.setType(FulfillmentType.SHIPPING);
  fg1.setOrder(order);
  FulfillmentGroupItem fgItem1=new FulfillmentGroupItemImpl();
  fgItem1.setFulfillmentGroup(fg1);
  fgItem1.setOrderItem(orderItem1);
  fgItem1.setQuantity(2);
  fg1.getFulfillmentGroupItems().add(fgItem1);
  order.getFulfillmentGroups().add(fg1);
  FulfillmentGroup fg2=new FulfillmentGroupImpl();
  fg2.setId(2L);
  Address address2=new AddressImpl();
  address2.setAddressLine1("124 Test Road");
  address2.setCity("Dallas");
  Country country2=new CountryImpl();
  country2.setAbbreviation("US");
  country2.setName("United States");
  address2.setCountry(country2);
  address2.setDefault(true);
  address2.setFirstName("John");
  address2.setLastName("Tester");
  address2.setPostalCode("75244");
  address2.setPrimaryPhone("972-976-1234");
  State state2=new StateImpl();
  state2.setAbbreviation("TX");
  state2.setCountry(country2);
  state2.setName("Texas");
  address2.setState(state2);
  fg2.setAddress(address2);
  fg2.setOrder(order);
  fg2.setPrimary(true);
  fg2.setRetailShippingPrice(new Money(20D));
  fg2.setShippingPrice(new Money(20D));
  fg2.setType(FulfillmentType.SHIPPING);
  fg2.setOrder(order);
  FulfillmentGroupItem fgItem2=new FulfillmentGroupItemImpl();
  fgItem2.setFulfillmentGroup(fg2);
  fgItem2.setOrderItem(orderItem2);
  fgItem2.setQuantity(3);
  fg2.getFulfillmentGroupItems().add(fgItem2);
  order.getFulfillmentGroups().add(fg2);
  order.setSubTotal(new Money((2 * 19.99D) + (3 * 29.99D)));
  orders.put(order.getId(),order);
  PromotableOrder promotableOrder=new PromotableOrderImpl(order,new PromotableItemFactoryImpl());
  return promotableOrder;
}
