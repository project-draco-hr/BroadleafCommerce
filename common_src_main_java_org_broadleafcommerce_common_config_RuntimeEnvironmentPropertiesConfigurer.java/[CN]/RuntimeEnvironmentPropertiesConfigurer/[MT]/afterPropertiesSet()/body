{
  if (environments == null || environments.size() == 0) {
    environments=defaultEnvironments;
  }
  Set<Resource> combinedLocations=new HashSet<Resource>();
  combinedLocations.addAll(defaultPropertyLocations);
  if (propertyLocations != null && propertyLocations.size() > 0) {
    combinedLocations.addAll(propertyLocations);
  }
  propertyLocations=combinedLocations;
  if (!environments.contains(defaultEnvironment)) {
    throw new AssertionError("Default environment '" + defaultEnvironment + "' not listed in environment list");
  }
  if (keyResolver == null) {
    keyResolver=new SystemPropertyRuntimeEnvironmentKeyResolver();
  }
  String environment=determineEnvironment();
  Resource[] blcPropertiesLocation=createBroadleafResource();
  Resource[] sharedPropertiesLocation=createSharedPropertiesResource(environment);
  Resource[] sharedCommonLocation=createSharedCommonResource();
  Resource[] propertiesLocation=createPropertiesResource(environment);
  Resource[] commonLocation=createCommonResource();
  ArrayList<Resource> allLocations=new ArrayList<Resource>();
  for (  Resource resource : blcPropertiesLocation) {
    if (resource.exists()) {
      allLocations.add(resource);
    }
  }
  for (  Resource resource : sharedCommonLocation) {
    if (resource.exists()) {
      allLocations.add(resource);
    }
  }
  for (  Resource resource : sharedPropertiesLocation) {
    if (resource.exists()) {
      allLocations.add(resource);
    }
  }
  for (  Resource resource : commonLocation) {
    if (resource.exists()) {
      allLocations.add(resource);
    }
  }
  for (  Resource resource : propertiesLocation) {
    if (resource.exists()) {
      allLocations.add(resource);
    }
  }
  if (LOG.isDebugEnabled()) {
    Properties props=new Properties();
    for (    Resource resource : allLocations) {
      if (resource.exists()) {
        props=new Properties(props);
        props.load(resource.getInputStream());
        for (        Entry<Object,Object> entry : props.entrySet()) {
          LOG.debug("Read " + entry.getKey() + " as "+ entry.getValue());
        }
      }
 else {
        LOG.debug("Unable to locate resource: " + resource.getFilename());
      }
    }
  }
  setLocations(allLocations.toArray(new Resource[]{}));
}
