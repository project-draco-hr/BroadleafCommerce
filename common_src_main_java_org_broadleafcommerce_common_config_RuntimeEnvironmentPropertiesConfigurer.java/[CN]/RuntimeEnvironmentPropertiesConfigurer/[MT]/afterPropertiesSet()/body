{
  if (environments == null || environments.size() == 0) {
    environments=defaultEnvironments;
  }
  Set<Resource> combinedLocations=new LinkedHashSet<Resource>();
  if (!CollectionUtils.isEmpty(overridableProperyLocations)) {
    combinedLocations.addAll(overridableProperyLocations);
  }
  if (!CollectionUtils.isEmpty(propertyLocations)) {
    combinedLocations.addAll(propertyLocations);
  }
  propertyLocations=combinedLocations;
  if (!environments.contains(defaultEnvironment)) {
    throw new AssertionError("Default environment '" + defaultEnvironment + "' not listed in environment list");
  }
  if (keyResolver == null) {
    keyResolver=new SystemPropertyRuntimeEnvironmentKeyResolver();
  }
  String environment=determineEnvironment();
  ArrayList<Resource> allLocations=new ArrayList<Resource>();
  Set<Set<Resource>> testLocations=new LinkedHashSet<Set<Resource>>();
  testLocations.add(propertyLocations);
  testLocations.add(defaultPropertyLocations);
  for (  Resource resource : createBroadleafResource()) {
    if (resource.exists()) {
      allLocations.add(resource);
    }
  }
  for (  Set<Resource> locations : testLocations) {
    for (    Resource resource : createSharedCommonResource(locations)) {
      if (resource.exists()) {
        allLocations.add(resource);
      }
    }
    for (    Resource resource : createSharedPropertiesResource(environment,locations)) {
      if (resource.exists()) {
        allLocations.add(resource);
      }
    }
    for (    Resource resource : createCommonResource(locations)) {
      if (resource.exists()) {
        allLocations.add(resource);
      }
    }
    for (    Resource resource : createPropertiesResource(environment,locations)) {
      if (resource.exists()) {
        allLocations.add(resource);
      }
    }
  }
  Resource sharedPropertyOverride=createSharedOverrideResource();
  if (sharedPropertyOverride != null) {
    allLocations.add(sharedPropertyOverride);
  }
  Resource propertyOverride=createOverrideResource();
  if (propertyOverride != null) {
    allLocations.add(propertyOverride);
  }
  Properties props=new Properties();
  for (  Resource resource : allLocations) {
    if (resource.exists()) {
      if (((resource.equals(sharedPropertyOverride) || resource.equals(propertyOverride))) || LOG.isTraceEnabled()) {
        props=new Properties(props);
        props.load(resource.getInputStream());
        for (        Entry<Object,Object> entry : props.entrySet()) {
          if (resource.equals(sharedPropertyOverride) || resource.equals(propertyOverride)) {
            logger.support("Read " + entry.getKey() + " from "+ resource.getFilename());
          }
 else {
            LOG.trace("Read " + entry.getKey() + " from "+ resource.getFilename());
          }
        }
      }
    }
 else {
      LOG.debug("Unable to locate resource: " + resource.getFilename());
    }
  }
  setLocations(allLocations.toArray(new Resource[]{}));
}
