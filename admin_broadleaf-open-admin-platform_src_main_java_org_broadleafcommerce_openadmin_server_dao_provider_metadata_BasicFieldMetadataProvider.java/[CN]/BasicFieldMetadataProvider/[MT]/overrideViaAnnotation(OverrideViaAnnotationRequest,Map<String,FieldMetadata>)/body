{
  if (!canHandleAnnotationOverride(overrideViaAnnotationRequest,metadata)) {
    return FieldProviderResponse.NOT_HANDLED;
  }
  Map<String,AdminPresentationOverride> presentationOverrides=new LinkedHashMap<String,AdminPresentationOverride>();
  Map<String,AdminPresentationToOneLookupOverride> presentationToOneLookupOverrides=new LinkedHashMap<String,AdminPresentationToOneLookupOverride>();
  Map<String,AdminPresentationDataDrivenEnumerationOverride> presentationDataDrivenEnumerationOverrides=new LinkedHashMap<String,AdminPresentationDataDrivenEnumerationOverride>();
  AdminPresentationOverrides myOverrides=overrideViaAnnotationRequest.getRequestedEntity().getAnnotation(AdminPresentationOverrides.class);
  if (myOverrides != null) {
    for (    AdminPresentationOverride myOverride : myOverrides.value()) {
      presentationOverrides.put(myOverride.name(),myOverride);
    }
    for (    AdminPresentationToOneLookupOverride myOverride : myOverrides.toOneLookups()) {
      presentationToOneLookupOverrides.put(myOverride.name(),myOverride);
    }
    for (    AdminPresentationDataDrivenEnumerationOverride myOverride : myOverrides.dataDrivenEnums()) {
      presentationDataDrivenEnumerationOverrides.put(myOverride.name(),myOverride);
    }
  }
  for (  String propertyName : presentationOverrides.keySet()) {
    for (    String key : metadata.keySet()) {
      if (StringUtils.isEmpty(propertyName) || key.startsWith(propertyName)) {
        buildAdminPresentationOverride(overrideViaAnnotationRequest.getPrefix(),overrideViaAnnotationRequest.getParentExcluded(),metadata,presentationOverrides,propertyName,key,overrideViaAnnotationRequest.getDynamicEntityDao());
      }
    }
  }
  for (  String propertyName : presentationToOneLookupOverrides.keySet()) {
    for (    String key : metadata.keySet()) {
      if (key.startsWith(propertyName)) {
        buildAdminPresentationToOneLookupOverride(metadata,presentationToOneLookupOverrides,propertyName,key);
      }
    }
  }
  for (  String propertyName : presentationDataDrivenEnumerationOverrides.keySet()) {
    for (    String key : metadata.keySet()) {
      if (key.startsWith(propertyName)) {
        buildAdminPresentationDataDrivenEnumerationOverride(metadata,presentationDataDrivenEnumerationOverrides,propertyName,key,overrideViaAnnotationRequest.getDynamicEntityDao());
      }
    }
  }
  AdminPresentationMergeOverrides myMergeOverrides=overrideViaAnnotationRequest.getRequestedEntity().getAnnotation(AdminPresentationMergeOverrides.class);
  if (myMergeOverrides != null) {
    for (    AdminPresentationMergeOverride override : myMergeOverrides.value()) {
      String propertyName=override.name();
      Map<String,FieldMetadata> loopMap=new HashMap<String,FieldMetadata>();
      loopMap.putAll(metadata);
      for (      Map.Entry<String,FieldMetadata> entry : loopMap.entrySet()) {
        if (entry.getKey().equals(propertyName) || StringUtils.isEmpty(propertyName)) {
          FieldMetadata targetMetadata=entry.getValue();
          if (targetMetadata instanceof BasicFieldMetadata) {
            BasicFieldMetadata serverMetadata=(BasicFieldMetadata)targetMetadata;
            if (serverMetadata.getTargetClass() != null) {
              try {
                Class<?> targetClass=Class.forName(serverMetadata.getTargetClass());
                Class<?> parentClass=null;
                if (serverMetadata.getOwningClass() != null) {
                  parentClass=Class.forName(serverMetadata.getOwningClass());
                }
                String fieldName=serverMetadata.getFieldName();
                Field field=overrideViaAnnotationRequest.getDynamicEntityDao().getFieldManager().getField(targetClass,fieldName);
                Map<String,FieldMetadata> temp=new HashMap<String,FieldMetadata>(1);
                temp.put(fieldName,serverMetadata);
                FieldInfo info;
                if (field != null) {
                  info=buildFieldInfo(field);
                }
 else {
                  info=new FieldInfo();
                  info.setName(fieldName);
                }
                FieldMetadataOverride fieldMetadataOverride=overrideMergeMetadata(override);
                if (serverMetadata.getExcluded() != null && serverMetadata.getExcluded() && (fieldMetadataOverride.getExcluded() == null || fieldMetadataOverride.getExcluded())) {
                  continue;
                }
                buildBasicMetadata(parentClass,targetClass,temp,info,fieldMetadataOverride,overrideViaAnnotationRequest.getDynamicEntityDao());
                serverMetadata=(BasicFieldMetadata)temp.get(fieldName);
                metadata.put(entry.getKey(),serverMetadata);
              }
 catch (              Exception e) {
                throw new RuntimeException(e);
              }
            }
          }
        }
      }
    }
  }
  return FieldProviderResponse.HANDLED;
}
