{
  BLCOperator operator=BLCOperator.valueOf(dataDTO.getGroupOperator());
  ArrayList<DataDTO> groups=dataDTO.getGroups();
  if (sb.length() != 0 && sb.charAt(sb.length() - 1) != '(' && groupOperator != null) {
    BLCOperator groupOp=BLCOperator.valueOf(groupOperator);
switch (groupOp) {
default :
      sb.append("&&");
    break;
case OR:
  sb.append("||");
}
}
if (groups.size() == 1) {
DataDTO criteria=groups.get(0);
if (criteria instanceof ExpressionDTO) {
buildExpression((ExpressionDTO)dataDTO,sb,entityKey,operator,fieldService);
}
}
 else {
boolean includeTopLevelParenthesis=false;
if (sb.length() != 0 || BLCOperator.NOT.equals(operator)) {
includeTopLevelParenthesis=true;
}
if (BLCOperator.NOT.equals(operator)) {
sb.append("!");
}
if (includeTopLevelParenthesis) sb.append("(");
for (DataDTO dto : groups) {
String operatorName=null;
if (operator != null) {
  operatorName=operator.name();
}
buildMVEL(dto,sb,entityKey,operatorName,fieldService);
}
if (includeTopLevelParenthesis) sb.append(")");
}
}
