{
  Order order=item.getOrder();
  if (order == null) {
    throw new OrderServiceException("The order item does not have an order associated with it. Check to make sure you're not adding an order item that belongs to a BundleOrderItem. BundleOrderItems cannot be split among fulfillment groups");
  }
  for (  FulfillmentGroup fg : order.getFulfillmentGroups()) {
    Iterator<FulfillmentGroupItem> itr=fg.getFulfillmentGroupItems().iterator();
    while (itr.hasNext()) {
      FulfillmentGroupItem fgItem=itr.next();
      if (fgItem.getOrderItem().equals(item)) {
        itr.remove();
        fulfillmentGroupItemDao.delete(fgItem);
      }
    }
  }
  if (fulfillmentGroup.getId() == null) {
    fulfillmentGroup=addFulfillmentGroupToOrder(order,fulfillmentGroup,priceOrder);
  }
  FulfillmentGroupItem fgi=createFulfillmentGroupItemFromOrderItem(item,fulfillmentGroup,quantity);
  fgi=fulfillmentGroupItemDao.save(fgi);
  fulfillmentGroup.addFulfillmentGroupItem(fgi);
  order=updateOrder(order,priceOrder);
  return fulfillmentGroup;
}
