{
  preValidateCartOperation(findOrderById(orderId));
  try {
    OrderItem oi=orderItemService.readOrderItemById(orderItemId);
    if (oi == null) {
      throw new WorkflowException(new ItemNotFoundException());
    }
    List<Long> childrenToRemove=new ArrayList<Long>();
    if (oi instanceof BundleOrderItem) {
      List<DiscreteOrderItem> bundledItems=((BundleOrderItem)oi).getDiscreteOrderItems();
      for (      DiscreteOrderItem doi : bundledItems) {
        findAllChildrenToRemove(childrenToRemove,doi);
      }
    }
 else {
      findAllChildrenToRemove(childrenToRemove,oi);
    }
    for (    Long childToRemove : childrenToRemove) {
      removeItemInternal(orderId,childToRemove,false);
    }
    return removeItemInternal(orderId,orderItemId,priceOrder);
  }
 catch (  WorkflowException e) {
    throw new RemoveFromCartException("Could not remove from cart",getCartOperationExceptionRootCause(e));
  }
}
