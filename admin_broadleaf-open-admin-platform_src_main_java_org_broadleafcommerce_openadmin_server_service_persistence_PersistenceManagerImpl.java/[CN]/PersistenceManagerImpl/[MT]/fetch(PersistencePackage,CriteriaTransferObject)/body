{
  for (  PersistenceManagerEventHandler handler : persistenceManagerEventHandlers) {
    PersistenceManagerEventHandlerResponse response=handler.preFetch(this,persistencePackage,cto);
    if (PersistenceManagerEventHandlerResponse.PersistenceManagerEventHandlerResponseStatus.HANDLED_BREAK == response.getStatus()) {
      break;
    }
  }
  for (  CustomPersistenceHandler handler : getCustomPersistenceHandlers()) {
    if (handler.canHandleFetch(persistencePackage)) {
      if (!handler.willHandleSecurity(persistencePackage)) {
        adminRemoteSecurityService.securityCheck(persistencePackage,EntityOperationType.FETCH);
      }
      DynamicResultSet results=handler.fetch(persistencePackage,cto,dynamicEntityDao,(RecordHelper)getCompatibleModule(OperationType.BASIC));
      return executePostFetchHandlers(persistencePackage,cto,new PersistenceResponse().withDynamicResultSet(results));
    }
  }
  adminRemoteSecurityService.securityCheck(persistencePackage,EntityOperationType.FETCH);
  PersistenceModule myModule=getCompatibleModule(persistencePackage.getPersistencePerspective().getOperationTypes().getFetchType());
  try {
    DynamicResultSet results=myModule.fetch(persistencePackage,cto);
    return executePostFetchHandlers(persistencePackage,cto,new PersistenceResponse().withDynamicResultSet(results));
  }
 catch (  ServiceException e) {
    if (e.getCause() instanceof NoPossibleResultsException) {
      DynamicResultSet drs=new DynamicResultSet(null,new Entity[]{},0);
      return executePostFetchHandlers(persistencePackage,cto,new PersistenceResponse().withDynamicResultSet(drs));
    }
    throw e;
  }
}
