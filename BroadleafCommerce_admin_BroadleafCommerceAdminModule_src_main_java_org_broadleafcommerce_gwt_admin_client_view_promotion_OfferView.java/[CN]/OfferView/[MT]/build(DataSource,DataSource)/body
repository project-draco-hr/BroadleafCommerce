{
  DataSource orderDataSource=additionalDataSources[0];
  final DataSource orderItemDataSource=additionalDataSources[1];
  DataSource fulfillmentGroupDataSource=additionalDataSources[2];
  DataSource customerDataSource=additionalDataSources[3];
  VLayout leftVerticalLayout=new VLayout(10);
  leftVerticalLayout.setHeight100();
  leftVerticalLayout.setWidth("30%");
  leftVerticalLayout.setShowResizeBar(true);
  listDisplay=new DynamicEntityListView(AdminModule.ADMINMESSAGES.promotionsListTitle(),entityDataSource,false,false);
  cloneButton=new ToolStripButton();
  cloneButton.setDisabled(true);
  cloneButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/double_arrow_right.png");
  cloneButton.setPrompt(AdminModule.ADMINMESSAGES.clonePromotionHelp());
  leftVerticalLayout.addMember(listDisplay);
  VLayout rightVerticalLayout=new VLayout();
  rightVerticalLayout.setHeight100();
  rightVerticalLayout.setWidth("70%");
  dynamicFormDisplay=new DynamicFormView(AdminModule.ADMINMESSAGES.promotionDetailsTitle(),entityDataSource);
  dynamicFormDisplay.getToolbar().addFill();
  advancedButton=new ToolStripButton(AdminModule.ADMINMESSAGES.advancedCriteriaButtonTitle());
  advancedButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/settings.png");
  advancedButton.setActionType(SelectionType.CHECKBOX);
  advancedButton.setDisabled(true);
  dynamicFormDisplay.getToolbar().addMember(advancedButton);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).setLayoutLeftMargin(10);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).setLayoutTopMargin(10);
  Label basicInformationLabel=new Label(AdminModule.ADMINMESSAGES.basicPromotionLabel());
  basicInformationLabel.setHeight(30);
  basicInformationLabel.setBackgroundColor("#eaeaea");
  basicInformationLabel.setStyleName("label-bold");
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(basicInformationLabel,0);
  VLayout restrictLayout=new VLayout();
  restrictLayout.setLayoutLeftMargin(10);
  Label restrictLabel=new Label(AdminModule.ADMINMESSAGES.restrictOnlyPromotionLabel());
  restrictLabel.setWrap(false);
  restrictLabel.setHeight(30);
  restrictLabel.setBackgroundColor("#eaeaea");
  restrictLabel.setStyleName("label-bold");
  restrictLayout.addMember(restrictLabel);
  restrictForm=new DynamicForm();
  restrictRuleRadio=new RadioGroupItem();
  restrictRuleRadio.setShowTitle(false);
  restrictRuleRadio.setWrap(false);
  restrictRuleRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> restrictMap=new LinkedHashMap<String,String>();
  restrictMap.put("YES",AdminModule.ADMINMESSAGES.yesRadioChoice());
  restrictMap.put("NO",AdminModule.ADMINMESSAGES.noRadioChoice());
  restrictRuleRadio.setValueMap(restrictMap);
  restrictForm.setFields(restrictRuleRadio);
  restrictLayout.addMember(restrictForm);
  restrictionSectionView=new SectionView(AdminModule.ADMINMESSAGES.advancedRestrictionsViewTitle());
  restrictionSectionView.setVisible(false);
  restrictionSectionView.setWidth("98%");
  restrictionSectionView.getContentLayout().addMember(restrictLayout);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(restrictionSectionView);
  VLayout customerLayout=new VLayout();
  customerLayout.setLayoutLeftMargin(10);
  HStack customerObtainHStack=new HStack(10);
  customerObtainHStack.setWidth100();
  customerObtainHStack.setHeight(30);
  Label customerObtainLabel=new Label(AdminModule.ADMINMESSAGES.customerObtainLabel());
  customerObtainLabel.setWrap(false);
  customerObtainLabel.setHeight(30);
  customerObtainLabel.setBackgroundColor("#eaeaea");
  customerObtainLabel.setStyleName("label-bold");
  customerObtainHStack.addMember(customerObtainLabel);
  VStack helpCustomerObtainVStack=new VStack();
  helpCustomerObtainVStack.setAlign(VerticalAlignment.CENTER);
  helpButtonType=new ImgButton();
  helpButtonType.setSrc(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/help.png");
  helpButtonType.setWidth(16);
  helpButtonType.setHeight(16);
  helpCustomerObtainVStack.addMember(helpButtonType);
  customerObtainHStack.addMember(helpCustomerObtainVStack);
  customerLayout.addMember(customerObtainHStack);
  customerObtainForm=new DynamicForm();
  customerObtainForm.setNumCols(4);
  deliveryTypeRadio=new RadioGroupItem();
  deliveryTypeRadio.setShowTitle(false);
  deliveryTypeRadio.setWrap(false);
  deliveryTypeRadio.setDisabled(true);
  deliveryTypeRadio.setDefaultValue("AUTOMATIC");
  LinkedHashMap<String,String> valueMap=new LinkedHashMap<String,String>();
  valueMap.put("AUTOMATIC",AdminModule.ADMINMESSAGES.deliveryTypeEnumAutomatic());
  valueMap.put("CODE",AdminModule.ADMINMESSAGES.deliveryTypeEnumCode());
  valueMap.put("MANUAL",AdminModule.ADMINMESSAGES.deliveryTypeEnumManual());
  deliveryTypeRadio.setValueMap(valueMap);
  codeField=new TextItem();
  codeField.setTitle(AdminModule.ADMINMESSAGES.offerCodeFieldTitle());
  codeField.setWrapTitle(false);
  codeField.setDisabled(true);
  customerObtainForm.setFields(deliveryTypeRadio,codeField);
  customerLayout.addMember(customerObtainForm);
  Label whichCustomerLabel=new Label(AdminModule.ADMINMESSAGES.whichCustomerLabel());
  whichCustomerLabel.setWrap(false);
  whichCustomerLabel.setHeight(30);
  whichCustomerLabel.setBackgroundColor("#eaeaea");
  whichCustomerLabel.setStyleName("label-bold");
  customerLayout.addMember(whichCustomerLabel);
  whichCustomerForm=new DynamicForm();
  customerRuleRadio=new RadioGroupItem();
  customerRuleRadio.setShowTitle(false);
  customerRuleRadio.setWrap(false);
  customerRuleRadio.setDisabled(true);
  customerRuleRadio.setDefaultValue("ALL");
  LinkedHashMap<String,String> valueMap3=new LinkedHashMap<String,String>();
  valueMap3.put("ALL",AdminModule.ADMINMESSAGES.allCustomerRadioChoice());
  valueMap3.put("CUSTOMER_RULE",AdminModule.ADMINMESSAGES.buildCustomerRadioChoice());
  customerRuleRadio.setValueMap(valueMap3);
  whichCustomerForm.setFields(customerRuleRadio);
  customerLayout.addMember(whichCustomerForm);
  rawCustomerForm=new DynamicForm();
  rawCustomerForm.setVisible(false);
  rawCustomerTextArea=new TextAreaItem();
  rawCustomerTextArea.setHeight(70);
  rawCustomerTextArea.setWidth("600");
  rawCustomerTextArea.setShowTitle(false);
  rawCustomerForm.setFields(rawCustomerTextArea);
  rawCustomerTextArea.setAttribute("dirty",false);
  customerLayout.addMember(rawCustomerForm);
  customerFilterBuilder=new FilterBuilder();
  customerFilterBuilder.setDataSource(customerDataSource);
  customerFilterBuilder.setFieldDataSource(new FieldDataSourceWrapper(customerDataSource));
  customerFilterBuilder.setVisible(false);
  customerFilterBuilder.setLayoutBottomMargin(10);
  customerFilterBuilder.setAllowEmpty(true);
  customerFilterBuilder.setValidateOnChange(false);
  customerLayout.addMember(customerFilterBuilder);
  customerLayout.setLayoutBottomMargin(10);
  SectionView sectionStack=new SectionView(AdminModule.ADMINMESSAGES.customerSectionViewTitle());
  sectionStack.setWidth("98%");
  sectionStack.getContentLayout().addMember(customerLayout);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(sectionStack);
  VLayout orderSectionLayout=new VLayout();
  orderSectionLayout.setLayoutLeftMargin(10);
  Label orderLabel=new Label(AdminModule.ADMINMESSAGES.orderSectionLabel());
  orderLabel.setWrap(false);
  orderLabel.setHeight(30);
  orderLabel.setBackgroundColor("#eaeaea");
  orderLabel.setStyleName("label-bold");
  orderSectionLayout.addMember(orderLabel);
  orderForm=new DynamicForm();
  orderRuleRadio=new RadioGroupItem();
  orderRuleRadio.setShowTitle(false);
  orderRuleRadio.setWrap(false);
  orderRuleRadio.setDisabled(true);
  orderRuleRadio.setDefaultValue("NONE");
  LinkedHashMap<String,String> orderMap=new LinkedHashMap<String,String>();
  orderMap.put("NONE",AdminModule.ADMINMESSAGES.noneOrderRadioChoice());
  orderMap.put("ORDER_RULE",AdminModule.ADMINMESSAGES.buildOrderRadioChoice());
  orderRuleRadio.setValueMap(orderMap);
  orderForm.setFields(orderRuleRadio);
  orderSectionLayout.addMember(orderForm);
  rawOrderForm=new DynamicForm();
  rawOrderForm.setVisible(false);
  rawOrderTextArea=new TextAreaItem();
  rawOrderTextArea.setHeight(70);
  rawOrderTextArea.setWidth("600");
  rawOrderTextArea.setShowTitle(false);
  rawOrderTextArea.setAttribute("dirty",false);
  rawOrderForm.setFields(rawOrderTextArea);
  orderSectionLayout.addMember(rawOrderForm);
  orderFilterBuilder=new FilterBuilder();
  orderFilterBuilder.setDataSource(orderDataSource);
  orderFilterBuilder.setFieldDataSource(new FieldDataSourceWrapper(orderDataSource));
  orderFilterBuilder.setVisible(false);
  orderFilterBuilder.setLayoutBottomMargin(10);
  orderFilterBuilder.setAllowEmpty(true);
  orderFilterBuilder.setValidateOnChange(false);
  orderSectionLayout.addMember(orderFilterBuilder);
  orderCombineLabel=new Label(AdminModule.ADMINMESSAGES.orderCombineLabel());
  orderCombineLabel.setVisible(false);
  orderCombineLabel.setWrap(false);
  orderCombineLabel.setHeight(30);
  orderCombineLabel.setBackgroundColor("#eaeaea");
  orderCombineLabel.setStyleName("label-bold");
  orderSectionLayout.addMember(orderCombineLabel);
  orderCombineForm=new DynamicForm();
  orderCombineForm.setVisible(false);
  orderCombineRuleRadio=new RadioGroupItem();
  orderCombineRuleRadio.setShowTitle(false);
  orderCombineRuleRadio.setWrap(false);
  orderCombineRuleRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> orderCombineMap=new LinkedHashMap<String,String>();
  orderCombineMap.put("YES",AdminModule.ADMINMESSAGES.yesRadioChoice());
  orderCombineMap.put("NO",AdminModule.ADMINMESSAGES.noRadioChoice());
  orderCombineRuleRadio.setValueMap(orderCombineMap);
  orderCombineForm.setFields(orderCombineRuleRadio);
  orderSectionLayout.addMember(orderCombineForm);
  SectionView sectionStack2=new SectionView(AdminModule.ADMINMESSAGES.orderQualificationSectionViewTitle());
  sectionStack2.setWidth("98%");
  sectionStack2.getContentLayout().addMember(orderSectionLayout);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(sectionStack2);
  VStack itemSectionLayout=new VStack();
  itemSectionLayout.setLayoutLeftMargin(10);
  orderItemCombineLabel=new Label(AdminModule.ADMINMESSAGES.orderItemCombineLabel());
  orderItemCombineLabel.setVisible(false);
  orderItemCombineLabel.setWrap(false);
  orderItemCombineLabel.setHeight(30);
  orderItemCombineLabel.setBackgroundColor("#eaeaea");
  orderItemCombineLabel.setStyleName("label-bold");
  itemSectionLayout.addMember(orderItemCombineLabel);
  orderItemCombineForm=new DynamicForm();
  orderItemCombineForm.setVisible(false);
  orderItemCombineRuleRadio=new RadioGroupItem();
  orderItemCombineRuleRadio.setShowTitle(false);
  orderItemCombineRuleRadio.setWrap(false);
  orderItemCombineRuleRadio.setDefaultValue("YES");
  LinkedHashMap<String,String> orderItemCombineMap=new LinkedHashMap<String,String>();
  orderItemCombineMap.put("YES",AdminModule.ADMINMESSAGES.yesRadioChoice());
  orderItemCombineMap.put("NO",AdminModule.ADMINMESSAGES.noRadioChoice());
  orderItemCombineRuleRadio.setValueMap(orderItemCombineMap);
  orderItemCombineForm.setFields(orderItemCombineRuleRadio);
  itemSectionLayout.addMember(orderItemCombineForm);
  bogoQuestionLayout=new VLayout();
  bogoQuestionLayout.setVisible(false);
  HStack hStackBogo=new HStack(10);
  hStackBogo.setWidth100();
  hStackBogo.setHeight(30);
  bogoQuestionLabel=new Label(AdminModule.ADMINMESSAGES.bogoQuestionLabel());
  bogoQuestionLabel.setWrap(false);
  bogoQuestionLabel.setHeight(30);
  bogoQuestionLabel.setBackgroundColor("#eaeaea");
  bogoQuestionLabel.setStyleName("label-bold");
  hStackBogo.addMember(bogoQuestionLabel);
  VStack helpButtonBogoStack=new VStack();
  helpButtonBogoStack.setAlign(VerticalAlignment.CENTER);
  helpButtonBogo=new ImgButton();
  helpButtonBogo.setSrc(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/help.png");
  helpButtonBogo.setWidth(16);
  helpButtonBogo.setHeight(16);
  helpButtonBogoStack.addMember(helpButtonBogo);
  hStackBogo.addMember(helpButtonBogoStack);
  bogoQuestionLayout.addMember(hStackBogo);
  stepBogoForm=new DynamicForm();
  bogoRadio=new RadioGroupItem();
  bogoRadio.setShowTitle(false);
  bogoRadio.setWrap(false);
  bogoRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMapBogo=new LinkedHashMap<String,String>();
  valueMapBogo.put("YES",AdminModule.ADMINMESSAGES.yesRadioChoice());
  valueMapBogo.put("NO",AdminModule.ADMINMESSAGES.noRadioChoice());
  bogoRadio.setValueMap(valueMapBogo);
  stepBogoForm.setFields(bogoRadio);
  bogoQuestionLayout.addMember(stepBogoForm);
  itemSectionLayout.addMember(bogoQuestionLayout);
  requiredItemsLayout=new VLayout();
  requiredItemsLayout.setVisible(false);
  requiredItemsLabel=new Label(AdminModule.ADMINMESSAGES.requiredItemsLabel());
  requiredItemsLabel.setWrap(false);
  requiredItemsLabel.setHeight(30);
  requiredItemsLabel.setBackgroundColor("#eaeaea");
  requiredItemsLabel.setStyleName("label-bold");
  requiredItemsLayout.addMember(requiredItemsLabel);
  orderItemLayout=new VLayout();
  orderItemLayout.setVisible(false);
  stepItemForm=new DynamicForm();
  itemRuleRadio=new RadioGroupItem();
  itemRuleRadio.setShowTitle(false);
  itemRuleRadio.setWrap(false);
  itemRuleRadio.setDefaultValue("NONE");
  LinkedHashMap<String,String> valueMapItem=new LinkedHashMap<String,String>();
  valueMapItem.put("NONE",AdminModule.ADMINMESSAGES.noneItemRadioChoice());
  valueMapItem.put("ITEM_RULE",AdminModule.ADMINMESSAGES.buildItemRadioChoice());
  itemRuleRadio.setValueMap(valueMapItem);
  stepItemForm.setFields(itemRuleRadio);
  orderItemLayout.addMember(stepItemForm);
  requiredItemsLayout.addMember(orderItemLayout);
  itemBuilderViews.add(new ItemBuilderView(orderItemDataSource,true));
  newItemBuilderLayout=new VLayout();
  newItemBuilderLayout.setVisible(false);
  HLayout buttonLayout=new HLayout();
  buttonLayout.setWidth100();
  buttonLayout.setAlign(Alignment.LEFT);
  buttonLayout.setHeight(30);
  buttonLayout.setLayoutTopMargin(15);
  addItemButton=new Button();
  addItemButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/actions/add.png");
  addItemButton.setTitle(AdminModule.ADMINMESSAGES.newItemRuleButtonTitle());
  addItemButton.setWidth(136);
  addItemButton.setWrap(false);
  buttonLayout.addMember(addItemButton);
  buttonLayout.setLayoutBottomMargin(10);
  newItemBuilderLayout.addMember(buttonLayout);
  itemBuilderContainerLayout=new VLayout();
  newItemBuilderLayout.addMember(itemBuilderContainerLayout);
  for (  ItemBuilderDisplay widget : itemBuilderViews) {
    itemBuilderContainerLayout.addMember((ItemBuilderView)widget);
  }
  requiredItemsLayout.addMember(newItemBuilderLayout);
  advancedItemCriteria=new VLayout();
  advancedItemCriteria.setVisible(false);
  newItemBuilderLayout.addMember(advancedItemCriteria);
  Label receiveFromAnotherPromoLabel=new Label(AdminModule.ADMINMESSAGES.receiveFromAnotherPromoLabel());
  receiveFromAnotherPromoLabel.setWrap(false);
  receiveFromAnotherPromoLabel.setHeight(30);
  receiveFromAnotherPromoLabel.setBackgroundColor("#eaeaea");
  advancedItemCriteria.addMember(receiveFromAnotherPromoLabel);
  receiveFromAnotherPromoForm=new DynamicForm();
  receiveFromAnotherPromoRadio=new RadioGroupItem();
  receiveFromAnotherPromoRadio.setShowTitle(false);
  receiveFromAnotherPromoRadio.setWrap(false);
  receiveFromAnotherPromoRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMap4=new LinkedHashMap<String,String>();
  valueMap4.put("YES",AdminModule.ADMINMESSAGES.yesRadioChoice());
  valueMap4.put("NO",AdminModule.ADMINMESSAGES.noRadioChoice());
  receiveFromAnotherPromoRadio.setValueMap(valueMap4);
  receiveFromAnotherPromoForm.setFields(receiveFromAnotherPromoRadio);
  advancedItemCriteria.addMember(receiveFromAnotherPromoForm);
  Label qualifiyForAnotherPromoLabel=new Label(AdminModule.ADMINMESSAGES.qualifiyForAnotherPromoLabel());
  qualifiyForAnotherPromoLabel.setWrap(false);
  qualifiyForAnotherPromoLabel.setHeight(30);
  qualifiyForAnotherPromoLabel.setBackgroundColor("#eaeaea");
  advancedItemCriteria.addMember(qualifiyForAnotherPromoLabel);
  qualifyForAnotherPromoForm=new DynamicForm();
  qualifyForAnotherPromoRadio=new RadioGroupItem();
  qualifyForAnotherPromoRadio.setShowTitle(false);
  qualifyForAnotherPromoRadio.setWrap(false);
  qualifyForAnotherPromoRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMap5=new LinkedHashMap<String,String>();
  valueMap5.put("YES",AdminModule.ADMINMESSAGES.yesRadioChoice());
  valueMap5.put("NO",AdminModule.ADMINMESSAGES.noRadioChoice());
  qualifyForAnotherPromoRadio.setValueMap(valueMap5);
  qualifyForAnotherPromoForm.setFields(qualifyForAnotherPromoRadio);
  advancedItemCriteria.addMember(qualifyForAnotherPromoForm);
  itemSectionLayout.addMember(requiredItemsLayout);
  itemSectionLayout.setLayoutBottomMargin(10);
  itemQualificationSectionView=new SectionView(AdminModule.ADMINMESSAGES.itemQualificationSectionTitle());
  itemQualificationSectionView.setWidth("98%");
  itemQualificationSectionView.getContentLayout().addMember(itemSectionLayout);
  itemQualificationSectionView.setVisible(false);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(itemQualificationSectionView);
  targetItemsLayout=new VLayout();
  targetItemsLayout.setLayoutLeftMargin(10);
  targetItemsLabel=new Label(AdminModule.ADMINMESSAGES.targetItemsLabel());
  targetItemsLabel.setWrap(false);
  targetItemsLabel.setHeight(30);
  targetItemsLabel.setBackgroundColor("#eaeaea");
  targetItemsLabel.setStyleName("label-bold");
  targetItemsLayout.addMember(targetItemsLabel);
  targetItemBuilder=new ItemBuilderView(orderItemDataSource,false);
  targetItemsLayout.addMember((ItemBuilderView)targetItemBuilder);
  targetItemsLayout.setLayoutBottomMargin(10);
  advancedItemCriteriaTarget=new VLayout();
  advancedItemCriteriaTarget.setVisible(false);
  targetItemsLayout.addMember(advancedItemCriteriaTarget);
  Label receiveFromAnotherPromoTargetLabel=new Label(AdminModule.ADMINMESSAGES.receiveFromAnotherPromoTargetLabel());
  receiveFromAnotherPromoTargetLabel.setWrap(false);
  receiveFromAnotherPromoTargetLabel.setHeight(30);
  receiveFromAnotherPromoTargetLabel.setBackgroundColor("#eaeaea");
  advancedItemCriteriaTarget.addMember(receiveFromAnotherPromoTargetLabel);
  receiveFromAnotherPromoTargetForm=new DynamicForm();
  receiveFromAnotherPromoTargetRadio=new RadioGroupItem();
  receiveFromAnotherPromoTargetRadio.setShowTitle(false);
  receiveFromAnotherPromoTargetRadio.setWrap(false);
  receiveFromAnotherPromoTargetRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMap6=new LinkedHashMap<String,String>();
  valueMap6.put("YES",AdminModule.ADMINMESSAGES.yesRadioChoice());
  valueMap6.put("NO",AdminModule.ADMINMESSAGES.noRadioChoice());
  receiveFromAnotherPromoTargetRadio.setValueMap(valueMap6);
  receiveFromAnotherPromoTargetForm.setFields(receiveFromAnotherPromoTargetRadio);
  advancedItemCriteriaTarget.addMember(receiveFromAnotherPromoTargetForm);
  Label qualifiyForAnotherPromoTargetLabel=new Label(AdminModule.ADMINMESSAGES.qualifiyForAnotherPromoTargetLabel());
  qualifiyForAnotherPromoTargetLabel.setWrap(false);
  qualifiyForAnotherPromoTargetLabel.setHeight(30);
  qualifiyForAnotherPromoTargetLabel.setBackgroundColor("#eaeaea");
  advancedItemCriteriaTarget.addMember(qualifiyForAnotherPromoTargetLabel);
  qualifyForAnotherPromoTargetForm=new DynamicForm();
  qualifyForAnotherPromoTargetRadio=new RadioGroupItem();
  qualifyForAnotherPromoTargetRadio.setShowTitle(false);
  qualifyForAnotherPromoTargetRadio.setWrap(false);
  qualifyForAnotherPromoTargetRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMap7=new LinkedHashMap<String,String>();
  valueMap7.put("YES",AdminModule.ADMINMESSAGES.yesRadioChoice());
  valueMap7.put("NO",AdminModule.ADMINMESSAGES.noRadioChoice());
  qualifyForAnotherPromoTargetRadio.setValueMap(valueMap7);
  qualifyForAnotherPromoTargetForm.setFields(qualifyForAnotherPromoTargetRadio);
  advancedItemCriteriaTarget.addMember(qualifyForAnotherPromoTargetForm);
  itemTargetSectionView=new SectionView(AdminModule.ADMINMESSAGES.itemTargetSectionTitle());
  itemTargetSectionView.setVisible(false);
  itemTargetSectionView.setWidth("98%");
  itemTargetSectionView.getContentLayout().addMember(targetItemsLayout);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(itemTargetSectionView);
  fgQuestionLayout=new VLayout();
  fgQuestionLayout.setLayoutLeftMargin(10);
  Label fgCombineLabel=new Label(AdminModule.ADMINMESSAGES.fgCombineLabel());
  fgCombineLabel.setWrap(false);
  fgCombineLabel.setHeight(30);
  fgCombineLabel.setBackgroundColor("#eaeaea");
  fgCombineLabel.setStyleName("label-bold");
  fgQuestionLayout.addMember(fgCombineLabel);
  fgCombineForm=new DynamicForm();
  fgCombineRuleRadio=new RadioGroupItem();
  fgCombineRuleRadio.setShowTitle(false);
  fgCombineRuleRadio.setWrap(false);
  fgCombineRuleRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMapCombineFG=new LinkedHashMap<String,String>();
  valueMapCombineFG.put("YES",AdminModule.ADMINMESSAGES.yesRadioChoice());
  valueMapCombineFG.put("NO",AdminModule.ADMINMESSAGES.noRadioChoice());
  fgCombineRuleRadio.setValueMap(valueMapCombineFG);
  fgCombineForm.setFields(fgCombineRuleRadio);
  fgQuestionLayout.addMember(fgCombineForm);
  stepFGLabel=new Label(AdminModule.ADMINMESSAGES.stepFGLabel());
  stepFGLabel.setWrap(false);
  stepFGLabel.setHeight(30);
  stepFGLabel.setBackgroundColor("#eaeaea");
  stepFGLabel.setStyleName("label-bold");
  fgQuestionLayout.addMember(stepFGLabel);
  stepFGForm=new DynamicForm();
  fgRuleRadio=new RadioGroupItem();
  fgRuleRadio.setShowTitle(false);
  fgRuleRadio.setWrap(false);
  fgRuleRadio.setDefaultValue("ALL");
  LinkedHashMap<String,String> valueMapFG=new LinkedHashMap<String,String>();
  valueMapFG.put("ALL",AdminModule.ADMINMESSAGES.allFGRadioChoice());
  valueMapFG.put("FG_RULE",AdminModule.ADMINMESSAGES.buildFGRadioChoice());
  fgRuleRadio.setValueMap(valueMapFG);
  stepFGForm.setFields(fgRuleRadio);
  fgQuestionLayout.addMember(stepFGForm);
  fulfillmentGroupFilterBuilder=new FilterBuilder();
  fulfillmentGroupFilterBuilder.setDataSource(fulfillmentGroupDataSource);
  fulfillmentGroupFilterBuilder.setFieldDataSource(new FieldDataSourceWrapper(fulfillmentGroupDataSource));
  fulfillmentGroupFilterBuilder.setVisible(false);
  fulfillmentGroupFilterBuilder.setAllowEmpty(true);
  fulfillmentGroupFilterBuilder.setValidateOnChange(false);
  fgQuestionLayout.addMember(fulfillmentGroupFilterBuilder);
  fgQuestionLayout.setLayoutBottomMargin(10);
  rawFGForm=new DynamicForm();
  rawFGForm.setVisible(false);
  rawFGTextArea=new TextAreaItem();
  rawFGTextArea.setHeight(70);
  rawFGTextArea.setWidth("600");
  rawFGTextArea.setShowTitle(false);
  rawFGTextArea.setAttribute("dirty",false);
  rawFGForm.setFields(rawFGTextArea);
  fgQuestionLayout.addMember(rawFGForm);
  fgSectionView=new SectionView(AdminModule.ADMINMESSAGES.fgSectionViewTitle());
  fgSectionView.setVisible(false);
  fgSectionView.setWidth("98%");
  fgSectionView.getContentLayout().addMember(fgQuestionLayout);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(fgSectionView);
  rightVerticalLayout.addMember(dynamicFormDisplay);
  addMember(leftVerticalLayout);
  addMember(rightVerticalLayout);
}
