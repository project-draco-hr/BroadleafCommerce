{
  Main.NON_MODAL_PROGRESS.startProgress();
  JavaScriptObject data=request.getData();
  final TreeNode record=new TreeNode(data);
  Entity entity=buildEntity(record);
  String componentId=request.getComponentId();
  if (componentId != null) {
    if (entity.getType() == null) {
      String type=((ListGrid)Canvas.getById(componentId)).getSelectedRecord().getAttribute("type");
      entity.setType(type);
    }
  }
  service.update(entity,foreignFields,additionalNonPersistentProperties,new EntityServiceAsyncCallback<Entity>(EntityOperationType.UPDATE,requestId,request,response){
    public void onSuccess(    Entity result){
      super.onSuccess(result);
      TreeNode myRecord=updateRecord(result,record,false);
      TreeNode[] recordList=new TreeNode[]{myRecord};
      response.setData(recordList);
      processResponse(requestId,response);
    }
  }
);
}
