{
  List<PageDTO> returnList=null;
  if (uri != null) {
    Locale languageOnlyLocale=findLanguageOnlyLocale(locale);
    BroadleafRequestContext context=BroadleafRequestContext.getBroadleafRequestContext();
    Long sandBox=context.getSandBox() == null ? null : context.getSandBox().getId();
    Long site=context.getSite() == null ? null : context.getSite().getId();
    String key=buildKey(sandBox,site,languageOnlyLocale,uri);
    key=key + "-" + secure;
    if (context.isProductionSandBox()) {
      returnList=getPageListFromCache(key);
    }
    if (returnList == null) {
      List<Page> pageList=pageDao.findPageByURI(uri);
      returnList=buildPageDTOList(pageList,secure);
      if (context.isProductionSandBox()) {
        Collections.sort(returnList,new BeanComparator("priority"));
        addPageListToCache(returnList,key);
      }
    }
  }
  PageDTO dto=evaluatePageRules(returnList,locale,ruleDTOs);
  if (dto.getId() != null) {
    Page page=findPageById(dto.getId());
    ExtensionResultHolder<PageDTO> newDTO=new ExtensionResultHolder<PageDTO>();
    extensionManager.getProxy().overridePageDto(newDTO,dto,page);
    if (newDTO.getResult() != null) {
      dto=newDTO.getResult();
    }
  }
  return dto;
}
