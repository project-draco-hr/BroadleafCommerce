{
  try {
    for (    CustomPersistenceHandler handler : persistenceManager.getCustomPersistenceHandlers()) {
      if (handler.canHandleAdd(persistencePackage)) {
        Entity response=handler.add(persistencePackage,persistenceManager.getDynamicEntityDao(),this);
        return response;
      }
    }
    Entity entity=persistencePackage.getEntity();
    PersistencePerspective persistencePerspective=persistencePackage.getPersistencePerspective();
    Class<?>[] entities=persistenceManager.getPolymorphicEntities(entity.getType()[0]);
    Map<String,FieldMetadata> mergedProperties=persistenceManager.getDynamicEntityDao().getMergedProperties(entity.getType()[0],entities,(ForeignKey)persistencePerspective.getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.FOREIGNKEY),persistencePerspective.getAdditionalNonPersistentProperties(),persistencePerspective.getAdditionalForeignKeys(),MergedPropertyType.PRIMARY,persistencePerspective.getPopulateToOneFields(),persistencePerspective.getIncludeFields(),persistencePerspective.getExcludeFields(),null,"");
    String idProperty=null;
    for (    String property : mergedProperties.keySet()) {
      if (mergedProperties.get(property).getFieldType().equals(SupportedFieldType.ID)) {
        idProperty=property;
        break;
      }
    }
    if (idProperty == null) {
      throw new RuntimeException("Could not find a primary key property in the passed entity with type: " + entity.getType());
    }
    Object primaryKey=null;
    try {
      primaryKey=getPrimaryKey(entity,mergedProperties);
    }
 catch (    Exception e) {
    }
    if (primaryKey == null) {
      Serializable instance=(Serializable)Class.forName(entity.getType()[0]).newInstance();
      instance=createPopulatedInstance(instance,entity,mergedProperties,false);
      instance=persistenceManager.getDynamicEntityDao().persist(instance);
      List<Serializable> entityList=new ArrayList<Serializable>();
      entityList.add(instance);
      return getRecords(mergedProperties,entityList,null,null)[0];
    }
 else {
      return update(persistencePackage,primaryKey);
    }
  }
 catch (  ServiceException e) {
    LOG.error("Problem adding new entity",e);
    throw e;
  }
catch (  Exception e) {
    LOG.error("Problem adding new entity",e);
    throw new ServiceException("Problem adding new entity : " + e.getMessage(),e);
  }
}
