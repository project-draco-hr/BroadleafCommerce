{
  Criteria relationshipCriteria=offerItemCriteriaDataSource.createRelationshipCriteria(offerItemCriteriaDataSource.getPrimaryKeyValue(selectedRecord));
  offerItemCriteriaDataSource.fetchData(relationshipCriteria,new DSCallback(){
    public void execute(    DSResponse response,    Object rawData,    DSRequest request){
      boolean isItemQualifierCriteria=false;
      if (response.getTotalRows() > 0) {
        for (        Record record : response.getData()) {
          if (Integer.parseInt(record.getAttribute("quantity")) > 0) {
            isItemQualifierCriteria=true;
            break;
          }
        }
      }
      if (isItemQualifierCriteria) {
        if (type.equals("ORDER_ITEM")) {
          initBogoRule("YES");
        }
 else {
          initItemRule("ITEM_RULE");
        }
        getDisplay().getBogoRadio().setValue("YES");
        getDisplay().getItemRuleRadio().setValue("ITEM_RULE");
        getDisplay().removeAllItemBuilders();
        for (        Record record : response.getData()) {
          if (Integer.parseInt(record.getAttribute("quantity")) > 0) {
            final ItemBuilderDisplay display=getDisplay().addItemBuilder(orderItemDataSource);
            presenter.bindItemBuilderEvents(display);
            display.getItemFilterBuilder().clearCriteria();
            display.setRecord(record);
            display.getItemQuantity().setValue(Integer.parseInt(record.getAttribute("quantity")));
            try {
              display.getItemFilterBuilder().setVisible(true);
              display.getRawItemForm().setVisible(false);
              AdvancedCriteria myCriteria=TRANSLATOR.createAdvancedCriteria(record.getAttribute("orderItemMatchRule"),orderItemDataSource);
              if (myCriteria != null) {
                display.getItemFilterBuilder().setCriteria(myCriteria);
              }
            }
 catch (            IncompatibleMVELTranslationException e) {
              GWT.log("Could not translate MVEL",e);
              BLCMain.MASTERVIEW.getStatus().setContents(AdminModule.ADMINMESSAGES.mvelTranslationProblem());
              display.setIncompatibleMVEL(true);
              display.getItemFilterBuilder().setVisible(false);
              display.getRawItemForm().setVisible(true);
              display.getRawItemTextArea().setValue(record.getAttribute("orderItemMatchRule"));
            }
            display.getRemoveButton().addClickHandler(new ClickHandler(){
              public void onClick(              ClickEvent event){
                getDisplay().removeItemBuilder(display);
              }
            }
);
          }
        }
      }
 else {
        if (type.equals("ORDER_ITEM")) {
          initBogoRule("NO");
        }
 else {
          initItemRule("NO");
        }
        getDisplay().getBogoRadio().setValue("NO");
        getDisplay().getItemRuleRadio().setValue("NO");
        getDisplay().removeAllItemBuilders();
        presenter.bindItemBuilderEvents(getDisplay().addItemBuilder(orderItemDataSource));
      }
    }
  }
);
  String offerItemQualifierRuleType=selectedRecord.getAttribute("offerItemQualifierRuleType");
  if (offerItemQualifierRuleType == null) {
    offerItemQualifierRuleType="NONE";
  }
  if (offerItemQualifierRuleType.equals("NONE")) {
    getDisplay().getQualifyForAnotherPromoRadio().setValue("NO");
    getDisplay().getReceiveFromAnotherPromoRadio().setValue("NO");
  }
 else   if (offerItemQualifierRuleType.equals("QUALIFIER")) {
    getDisplay().getQualifyForAnotherPromoRadio().setValue("YES");
    getDisplay().getReceiveFromAnotherPromoRadio().setValue("NO");
  }
 else   if (offerItemQualifierRuleType.equals("TARGET")) {
    getDisplay().getQualifyForAnotherPromoRadio().setValue("NO");
    getDisplay().getReceiveFromAnotherPromoRadio().setValue("YES");
  }
 else   if (offerItemQualifierRuleType.equals("QUALIFIER_TARGET")) {
    getDisplay().getQualifyForAnotherPromoRadio().setValue("YES");
    getDisplay().getReceiveFromAnotherPromoRadio().setValue("YES");
  }
  Boolean combinable=selectedRecord.getAttributeAsBoolean("combinableWithOtherOffers");
  if (combinable == null) {
    combinable=true;
  }
  getDisplay().getOrderItemCombineRuleRadio().setValue(combinable ? "YES" : "NO");
}
