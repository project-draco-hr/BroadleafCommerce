{
  try {
    List<DynamicResultSet> dynamicResultSetList=new ArrayList<DynamicResultSet>(15);
    List<PersistencePackage> persistencePackageList;
    boolean containsCache=false;
    if (METADATA_CACHE.containsKey(batchPersistencePackage)) {
      containsCache=true;
      persistencePackageList=new ArrayList<PersistencePackage>();
      for (      PersistencePackage persistencePackage : batchPersistencePackage.getPersistencePackages()) {
        exploitProtectionService.compareToken(persistencePackage.getCsrfToken());
        if (persistencePackage.getPersistencePerspective().getUseServerSideInspectionCache()) {
          checkResultSetList: {
            for (            DynamicResultSet dynamicResultSet : METADATA_CACHE.get(batchPersistencePackage).getDynamicResultSets()) {
              if (dynamicResultSet.getBatchId().equals(persistencePackage.getBatchId())) {
                dynamicResultSetList.add(dynamicResultSet);
                break checkResultSetList;
              }
            }
            throw new IllegalArgumentException("Unable to find a result for batchId(" + persistencePackage.getBatchId() + ") in cached batch result set.");
          }
        }
 else {
          persistencePackageList.add(persistencePackage);
        }
      }
    }
 else {
      persistencePackageList=Arrays.asList(batchPersistencePackage.getPersistencePackages());
    }
    for (    PersistencePackage persistencePackage : persistencePackageList) {
      DynamicResultSet resultSet=inspect(persistencePackage);
      resultSet.setBatchId(persistencePackage.getBatchId());
      dynamicResultSetList.add(resultSet);
    }
    Collections.sort(dynamicResultSetList,new Comparator<DynamicResultSet>(){
      @Override public int compare(      DynamicResultSet o1,      DynamicResultSet o2){
        return o1.getBatchId().compareTo(o2.getBatchId());
      }
    }
);
    BatchDynamicResultSet batchResults=new BatchDynamicResultSet();
    batchResults.setDynamicResultSets(dynamicResultSetList.toArray(new DynamicResultSet[dynamicResultSetList.size()]));
    if (!containsCache) {
      METADATA_CACHE.put(batchPersistencePackage,batchResults);
      return METADATA_CACHE.get(batchPersistencePackage);
    }
 else {
      return batchResults;
    }
  }
 catch (  IllegalArgumentException e) {
    LOG.error("Problem performing batch inspect",e);
    throw new ServiceException("Problem performing batch inspect",e);
  }
}
