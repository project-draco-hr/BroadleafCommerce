{
  AdminPresentationCollectionOverride override=presentationCollectionOverrides.get(propertyName);
  if (override != null) {
    AdminPresentationCollection annot=override.value();
    if (annot != null) {
      String testKey=prefix + key;
      if ((testKey.startsWith(propertyName + ".") || testKey.equals(propertyName)) && annot.excluded()) {
        FieldMetadata metadata=mergedProperties.get(key);
        if (LOG.isDebugEnabled()) {
          LOG.debug("buildAdminPresentationCollectionOverride:Excluding " + key + "because an override annotation declared "+ testKey+ "to be excluded");
        }
        metadata.setExcluded(true);
        return;
      }
      if ((testKey.startsWith(propertyName + ".") || testKey.equals(propertyName)) && !annot.excluded()) {
        FieldMetadata metadata=mergedProperties.get(key);
        if (!isParentExcluded) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("buildAdminPresentationCollectionOverride:Showing " + key + "because an override annotation declared "+ testKey+ " to not be excluded");
          }
          metadata.setExcluded(false);
        }
      }
      if (!(mergedProperties.get(key) instanceof BasicCollectionMetadata)) {
        return;
      }
      BasicCollectionMetadata serverMetadata=(BasicCollectionMetadata)mergedProperties.get(key);
      if (serverMetadata.getTargetClass() != null) {
        try {
          Class<?> targetClass=Class.forName(serverMetadata.getTargetClass());
          Class<?> parentClass=null;
          if (serverMetadata.getOwningClass() != null) {
            parentClass=Class.forName(serverMetadata.getOwningClass());
          }
          String fieldName=serverMetadata.getFieldName();
          Field field=dynamicEntityDao.getFieldManager().getField(targetClass,fieldName);
          FieldMetadataOverride localMetadata=constructBasicCollectionMetadataOverride(annot);
          Map<String,FieldMetadata> temp=new HashMap<String,FieldMetadata>(1);
          FieldInfo info=buildFieldInfo(field);
          buildCollectionMetadata(parentClass,targetClass,temp,info,localMetadata);
          BasicCollectionMetadata result=(BasicCollectionMetadata)temp.get(field.getName());
          result.setInheritedFromType(serverMetadata.getInheritedFromType());
          result.setAvailableToTypes(serverMetadata.getAvailableToTypes());
          mergedProperties.put(key,result);
          if (isParentExcluded) {
            if (LOG.isDebugEnabled()) {
              LOG.debug("buildAdminPresentationCollectionOverride:Excluding " + key + "because the parent was excluded");
            }
            serverMetadata.setExcluded(true);
          }
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
    }
  }
}
