{
  SearchQuery input=new SearchQuery();
  input.setQueryString(queryString);
  List<Product> products=null;
  products=searchService.performSearch(input.getQueryString());
  if (queryString.equals(originalQueryString)) {
    if (categoryId != null) {
      for (Iterator<Product> itr=products.iterator(); itr.hasNext(); ) {
        Product product=itr.next();
        if (!ArrayUtils.contains(categoryId,product.getDefaultCategory().getId())) {
          itr.remove();
        }
      }
    }
    if (minPrice != null && maxPrice != null) {
      Money minimumPrice=new Money(minPrice.replaceAll("[^0-9.]",""));
      Money maximumPrice=new Money(maxPrice.replaceAll("[^0-9.]",""));
      for (Iterator<Product> itr=products.iterator(); itr.hasNext(); ) {
        Product product=itr.next();
        boolean found=false;
        for (Iterator<Sku> skuItr=product.getSkus().iterator(); skuItr.hasNext(); ) {
          Sku sku=skuItr.next();
          if (sku.getSalePrice().lessThan(minimumPrice) || sku.getSalePrice().greaterThan(maximumPrice)) {
            continue;
          }
          found=true;
          break;
        }
        if (!found) {
          itr.remove();
        }
      }
    }
  }
  model.addAttribute("queryString",input.getQueryString());
  model.addAttribute("products",products);
  if (ajax == null || !ajax.booleanValue()) {
    return "search";
  }
 else {
    return "searchAjax";
  }
}
