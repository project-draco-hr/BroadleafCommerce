{
  Address address=fulfillmentGroup.getAddress();
  String state=address.getState().getAbbreviation();
  BigDecimal retailTotal=new BigDecimal(0);
  String feeType=feeTypeMapping.get(fulfillmentGroup.getMethod());
  String feeSubType=((feeSubTypeMapping.get(state) == null) ? feeSubTypeMapping.get("ALL") : feeSubTypeMapping.get(state));
  for (  FulfillmentGroupItem fulfillmentGroupItem : fulfillmentGroup.getFulfillmentGroupItems()) {
    BigDecimal price=(fulfillmentGroupItem.getRetailPrice() != null) ? fulfillmentGroupItem.getRetailPrice().getAmount() : null;
    if (price == null) {
      price=fulfillmentGroupItem.getOrderItem().getRetailPrice().getAmount();
    }
    retailTotal=retailTotal.add(price);
  }
  System.out.println("feeType: " + feeType + " feeSubType: "+ feeSubType+ " retailTotal: "+ retailTotal);
  ShippingRate sr=shippingRateDao.readShippingRateByFeeTypesUnityQty(feeType,feeSubType,retailTotal);
  BigDecimal shippingPrice=new BigDecimal(0);
  if (sr.getBandResultPercent().compareTo(0) > 0) {
    BigDecimal percent=new BigDecimal(sr.getBandResultPercent() * 100);
    shippingPrice=sr.getBandResultQuantity().add(sr.getBandResultQuantity().multiply(percent));
  }
 else {
    shippingPrice=sr.getBandResultQuantity();
  }
  fulfillmentGroup.setPrice(new Money(shippingPrice));
}
