{
  String mainClassName=getClassNameForSection(sectionKey);
  ClassMetadata mainMetadata=service.getClassMetadata(mainClassName);
  Property collectionProperty=mainMetadata.getPMap().get(collectionField);
  FieldMetadata md=collectionProperty.getMetadata();
  PersistencePackageRequest ppr=PersistencePackageRequest.fromMetadata(md);
  if (md instanceof BasicCollectionMetadata) {
    BasicCollectionMetadata fmd=(BasicCollectionMetadata)md;
    if (fmd.getAddMethodType().equals(AddMethodType.PERSIST)) {
      ClassMetadata collectionMetadata=service.getClassMetadata(ppr);
      EntityForm entityForm=formService.buildEntityForm(collectionMetadata);
      entityForm.getTabs().iterator().next().getIsVisible();
      model.addAttribute("entityForm",entityForm);
      model.addAttribute("viewType","modal/simpleAddEntity");
    }
 else {
      Entity[] rows=service.getRecords(ppr);
      ListGrid listGrid=formService.buildCollectionListGrid(id,rows,collectionProperty);
      model.addAttribute("listGrid",listGrid);
      model.addAttribute("viewType","modal/simpleSelectEntity");
    }
  }
 else   if (md instanceof AdornedTargetCollectionMetadata) {
    AdornedTargetCollectionMetadata fmd=(AdornedTargetCollectionMetadata)md;
    ppr.setOperationTypesOverride(null);
    ppr.setType(PersistencePackageRequest.Type.STANDARD);
    ClassMetadata collectionMetadata=service.getClassMetadata(ppr);
    Entity[] rows=service.getRecords(ppr);
    ListGrid listGrid=formService.buildMainListGrid(rows,collectionMetadata);
    listGrid.setSubCollectionFieldName(collectionField);
    EntityForm entityForm=formService.buildAdornedListForm(fmd,ppr.getAdornedList(),id);
    if (fmd.getMaintainedAdornedTargetFields().length > 0) {
      listGrid.setListGridType(ListGrid.Type.ADORNED_WITH_FORM);
    }
 else {
      listGrid.setListGridType(ListGrid.Type.ADORNED);
    }
    model.addAttribute("listGrid",listGrid);
    model.addAttribute("entityForm",entityForm);
    model.addAttribute("viewType","modal/adornedSelectEntity");
  }
 else   if (md instanceof MapMetadata) {
    MapMetadata fmd=(MapMetadata)md;
    ClassMetadata collectionMetadata=service.getClassMetadata(ppr);
    EntityForm entityForm=formService.buildMapForm(fmd,ppr.getMapStructure(),collectionMetadata,id);
    model.addAttribute("entityForm",entityForm);
    model.addAttribute("viewType","modal/mapAddEntity");
  }
  model.addAttribute("currentUrl",request.getRequestURL().toString());
  model.addAttribute("modalHeaderType","addCollectionItem");
  model.addAttribute("collectionProperty",collectionProperty);
  setModelAttributes(model,sectionKey);
  return "modules/modalContainer";
}
