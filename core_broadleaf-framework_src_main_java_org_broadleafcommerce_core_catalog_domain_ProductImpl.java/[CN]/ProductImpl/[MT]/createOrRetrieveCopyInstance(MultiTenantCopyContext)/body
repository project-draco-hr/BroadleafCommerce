{
  CreateResponse<G> createResponse=context.createOrRetrieveCopyInstance(this);
  if (createResponse.isAlreadyPopulated()) {
    return createResponse;
  }
  Product cloned=createResponse.getClone();
  cloned.setCanSellWithoutOptions(canSellWithoutOptions);
  cloned.setFeaturedProduct(isFeaturedProduct);
  cloned.setUrl(url);
  cloned.setUrlKey(urlKey);
  cloned.setManufacturer(manufacturer);
  cloned.setPromoMessage(promoMessage);
  if (defaultCategory != null) {
    cloned.setDefaultCategory(defaultCategory.createOrRetrieveCopyInstance(context).getClone());
  }
  cloned.setModel(model);
  if (defaultSku != null) {
    cloned.setDefaultSku(defaultSku.createOrRetrieveCopyInstance(context).getClone());
  }
  for (  Sku entry : additionalSkus) {
    Sku clonedEntry=entry.createOrRetrieveCopyInstance(context).getClone();
    cloned.getAdditionalSkus().add(clonedEntry);
  }
  for (  ProductOptionXref entry : productOptions) {
    ProductOptionXref clonedEntry=entry.createOrRetrieveCopyInstance(context).getClone();
    cloned.getProductOptionXrefs().add(clonedEntry);
  }
  for (  Map.Entry<String,ProductAttribute> entry : productAttributes.entrySet()) {
    ProductAttribute clonedEntry=entry.getValue().createOrRetrieveCopyInstance(context).getClone();
    cloned.getProductAttributes().put(entry.getKey(),clonedEntry);
  }
  return createResponse;
}
