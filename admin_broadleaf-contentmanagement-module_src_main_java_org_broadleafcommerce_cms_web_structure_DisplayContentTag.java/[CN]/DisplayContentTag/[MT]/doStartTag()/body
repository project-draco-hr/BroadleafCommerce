{
  HttpServletRequest request=(HttpServletRequest)pageContext.getRequest();
  Map<String,Object> mvelParameters=buildMvelParameters(request);
  SandBox currentSandbox=(SandBox)request.getAttribute(BroadleafProcessURLFilter.SANDBOX_VAR);
  initServices();
  List<StructuredContentDTO> contentItems;
  StructuredContentType structuredContentType=structuredContentService.findStructuredContentTypeByName(contentType);
  if (locale == null) {
    locale=(Locale)request.getAttribute(BroadleafProcessURLFilter.LOCALE_VAR);
  }
  int cnt=(count == null) ? Integer.MAX_VALUE : count;
  if (contentName == null || "".equals(contentName)) {
    contentItems=structuredContentService.lookupStructuredContentItemsByType(currentSandbox,structuredContentType,locale,cnt,mvelParameters,isSecure(request));
  }
 else {
    contentItems=structuredContentService.lookupStructuredContentItemsByName(currentSandbox,structuredContentType,contentName,locale,cnt,mvelParameters,isSecure(request));
  }
  pageContext.setAttribute(getNumResultsVar(),contentItems.size());
  if (contentItems.size() > 0) {
    List<Map<String,String>> contentItemFields=new ArrayList<Map<String,String>>();
    for (    StructuredContentDTO item : contentItems) {
      contentItemFields.add(item.getValues());
    }
    pageContext.setAttribute(contentItemVar,contentItemFields.get(0));
    pageContext.setAttribute(contentListVar,contentItemFields);
    pageContext.setAttribute("structuredContentList",contentItems);
    pageContext.setAttribute(numResultsVar,contentItems.size());
  }
 else {
    pageContext.setAttribute(contentItemVar,null);
    pageContext.setAttribute(contentListVar,null);
    pageContext.setAttribute("structuredContentList",null);
    pageContext.setAttribute(numResultsVar,0);
  }
  return EVAL_BODY_INCLUDE;
}
