{
  final String msg="Security Exception";
  SC.logWarn("Retrieving admin user (AbstractCallback.onSecurityException)...");
  java.util.logging.Logger.getLogger(getClass().toString()).warning("Retrieving admin user (AbstractCallback.onSecurityException)...");
  ;
  AppServices.SECURITY.getAdminUser(new AbstractCallback<AdminUser>(){
    @Override public void onSuccess(    AdminUser result){
      if (result == null) {
        logout(msg,exception);
      }
 else {
        SC.logWarn("Admin user found. Reporting calback exception (AbstractCallback.onSecurityException)...");
        java.util.logging.Logger.getLogger(getClass().toString()).warning("Admin user found. Reporting calback exception (AbstractCallback.onSecurityException)...");
        ;
        reportException(msg,exception);
        java.util.logging.Logger.getLogger(getClass().toString()).warning("Your Profile doesn't have the Capability necessary to perform this task.");
        ;
        String errorMsg=exception.getMessage();
        SC.warn(errorMsg);
        java.util.logging.Logger.getLogger(getClass().toString()).warning(errorMsg);
        ;
      }
    }
  }
);
}
