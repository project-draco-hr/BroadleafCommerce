{
  Order cart=CartState.getCart();
  if (cart != null) {
    try {
      Order order=orderService.removeItem(cart.getId(),itemId,priceOrder);
      order=orderService.save(order,priceOrder);
      OrderWrapper wrapper=(OrderWrapper)context.getBean(OrderWrapper.class.getName());
      wrapper.wrap(order,request);
      return wrapper;
    }
 catch (    PricingException e) {
      throw new WebApplicationException(e,Response.status(Response.Status.INTERNAL_SERVER_ERROR).type(MediaType.TEXT_PLAIN).entity("An error occured pricing the cart.").build());
    }
catch (    RemoveFromCartException e) {
      if (e.getCause() instanceof ItemNotFoundException) {
        throw new WebApplicationException(e,Response.status(Response.Status.NOT_FOUND).type(MediaType.TEXT_PLAIN).entity("Could not find order item id " + itemId).build());
      }
 else {
        throw new WebApplicationException(e,Response.status(Response.Status.INTERNAL_SERVER_ERROR).type(MediaType.TEXT_PLAIN).entity("An error occured removing the item to the cart.").build());
      }
    }
  }
  throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND).type(MediaType.TEXT_PLAIN).entity("Cart could not be found").build());
}
