{
  Customer customer=customerState.getCustomer(request);
  if (customer != null) {
    Order cart=cartService.findCartForCustomer(customer);
    if (cart != null) {
      OrderItem item=(OrderItem)CollectionUtils.find(cart.getOrderItems(),new BeanPropertyValueEqualsPredicate("id",itemId));
      item.setQuantity(quantity);
      try {
        cartService.updateItemQuantity(cart,item,priceOrder);
        Order order=cartService.save(cart,priceOrder);
        OrderWrapper wrapper=(OrderWrapper)context.getBean(OrderWrapper.class.getName());
        wrapper.wrap(order,request);
        return wrapper;
      }
 catch (      ItemNotFoundException e) {
        throw new WebApplicationException(Response.Status.NOT_FOUND);
      }
catch (      PricingException pe) {
        throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);
      }
    }
  }
  throw new WebApplicationException(Response.Status.NOT_FOUND);
}
