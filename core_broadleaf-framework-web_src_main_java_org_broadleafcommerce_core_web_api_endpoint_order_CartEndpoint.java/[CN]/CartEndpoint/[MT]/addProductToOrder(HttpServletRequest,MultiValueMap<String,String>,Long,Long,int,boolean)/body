{
  Order cart=CartState.getCart();
  if (cart == null || cart instanceof NullOrderImpl) {
    throw BroadleafWebServicesException.build(HttpStatus.NOT_FOUND.value()).addMessage(BroadleafWebServicesException.CART_NOT_FOUND);
  }
  try {
    HashMap<String,String> productOptions=getOptions(requestParams);
    OrderItemRequestDTO orderItemRequestDTO=new OrderItemRequestDTO();
    orderItemRequestDTO.setProductId(productId);
    orderItemRequestDTO.setCategoryId(categoryId);
    orderItemRequestDTO.setQuantity(quantity);
    if (productOptions.size() > 0) {
      orderItemRequestDTO.setItemAttributes(productOptions);
    }
    Order order=orderService.addItem(cart.getId(),orderItemRequestDTO,priceOrder);
    order=orderService.save(order,priceOrder);
    OrderWrapper wrapper=(OrderWrapper)context.getBean(OrderWrapper.class.getName());
    wrapper.wrapDetails(order,request);
    return wrapper;
  }
 catch (  PricingException e) {
    throw BroadleafWebServicesException.build(HttpStatus.INTERNAL_SERVER_ERROR.value(),null,null,e);
  }
catch (  AddToCartException e) {
    throw BroadleafWebServicesException.build(HttpStatus.INTERNAL_SERVER_ERROR.value(),null,null,e);
  }
}
