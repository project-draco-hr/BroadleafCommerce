{
  ReconstructCartResponse reconstructCartResponse=new ReconstructCartResponse();
  Order customerCart=orderService.findCartForCustomer(customer);
  if (customerCart != null) {
    List<OrderItem> itemsToRemove=new ArrayList<OrderItem>();
    for (    OrderItem orderItem : customerCart.getOrderItems()) {
      if (orderItem instanceof DiscreteOrderItem) {
        DiscreteOrderItem doi=(DiscreteOrderItem)orderItem;
        if (!checkActive(doi) || !checkInventory(doi) || !checkOtherValidity(orderItem)) {
          itemsToRemove.add(orderItem);
        }
      }
 else       if (orderItem instanceof BundleOrderItem) {
        BundleOrderItem bundleOrderItem=(BundleOrderItem)orderItem;
        for (        DiscreteOrderItem doi : bundleOrderItem.getDiscreteOrderItems()) {
          if (!checkActive(doi) || !checkInventory(doi) || !checkOtherValidity(orderItem)) {
            itemsToRemove.add(doi.getBundleOrderItem());
          }
        }
      }
    }
    for (    OrderItem orderItem : customerCart.getOrderItems()) {
      if (orderItem instanceof GiftWrapOrderItem) {
        for (        OrderItem wrappedItem : ((GiftWrapOrderItem)orderItem).getWrappedItems()) {
          if (itemsToRemove.contains(wrappedItem)) {
            itemsToRemove.add(orderItem);
            break;
          }
        }
      }
    }
    for (    OrderItem item : itemsToRemove) {
      orderService.removeItem(customerCart.getId(),item.getId(),false);
    }
    reconstructCartResponse.setRemovedItems(itemsToRemove);
    customerCart=orderService.save(customerCart,priceOrder);
  }
  reconstructCartResponse.setOrder(customerCart);
  return reconstructCartResponse;
}
