{
  MergeCartResponse mergeCartResponse=new MergeCartResponse();
  ReconstructCartResponse reconstructCartResponse=reconstructCart(customer,false);
  mergeCartResponse.setRemovedItems(reconstructCartResponse.getRemovedItems());
  Order customerCart=reconstructCartResponse.getOrder();
  if (anonymousCart != null && customerCart != null && anonymousCart.getId().equals(customerCart.getId())) {
    mergeCartResponse.setMerged(false);
  }
 else {
    mergeCartResponse.setMerged(customerCart != null && customerCart.getOrderItems().size() > 0);
  }
  if (anonymousCart != null && (customerCart == null || !customerCart.getId().equals(anonymousCart.getId()))) {
    if (customerCart != null && StringUtils.isBlank(customer.getEmailAddress())) {
      customerCart.setEmailAddress(customer.getEmailAddress());
    }
    if (anonymousCart != null && anonymousCart.getOrderItems() != null && !anonymousCart.getOrderItems().isEmpty()) {
      if (customerCart == null) {
        customerCart=orderService.createNewCartForCustomer(customer);
      }
      Map<OrderItem,OrderItem> oldNewItemMap=new HashMap<OrderItem,OrderItem>();
      customerCart=mergeRegularOrderItems(anonymousCart,mergeCartResponse,customerCart,oldNewItemMap);
      customerCart=mergeOfferCodes(anonymousCart,customerCart);
      customerCart=removeExpiredGiftWrapOrderItems(mergeCartResponse,customerCart,oldNewItemMap);
      customerCart=mergeGiftWrapOrderItems(mergeCartResponse,customerCart,oldNewItemMap);
      orderService.cancelOrder(anonymousCart);
      customerCart=orderService.save(customerCart,priceOrder);
    }
  }
  mergeCartResponse.setOrder(customerCart);
  return mergeCartResponse;
}
