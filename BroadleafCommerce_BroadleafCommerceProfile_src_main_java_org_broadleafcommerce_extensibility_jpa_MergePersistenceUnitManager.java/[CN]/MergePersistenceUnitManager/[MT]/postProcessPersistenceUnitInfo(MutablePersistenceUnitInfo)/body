{
  super.postProcessPersistenceUnitInfo(newPU);
  newPU.addJarFileUrl(newPU.getPersistenceUnitRootUrl());
  String persistenceUnitName=newPU.getPersistenceUnitName();
  MutablePersistenceUnitInfo temp=getMergedUnit(persistenceUnitName,newPU);
  final URL persistenceUnitRootUrl=newPU.getPersistenceUnitRootUrl();
  temp.setPersistenceUnitRootUrl(persistenceUnitRootUrl);
  List<String> managedClassNames=newPU.getManagedClassNames();
  for (  String managedClassName : managedClassNames) {
    if (!temp.getManagedClassNames().contains(managedClassName)) {
      temp.addManagedClassName(managedClassName);
    }
  }
  List<String> mappingFileNames=newPU.getMappingFileNames();
  for (  String mappingFileName : mappingFileNames) {
    if (!temp.getMappingFileNames().contains(mappingFileName)) {
      temp.addMappingFileName(mappingFileName);
    }
  }
  temp.setExcludeUnlistedClasses(newPU.excludeUnlistedClasses());
  for (  URL url : newPU.getJarFileUrls()) {
    if (!temp.getJarFileUrls().contains(url)) {
      temp.addJarFileUrl(url);
    }
  }
  temp.setJtaDataSource(newPU.getJtaDataSource());
  temp.setNonJtaDataSource(newPU.getNonJtaDataSource());
  if (temp.getProperties() == null) {
    temp.setProperties(newPU.getProperties());
  }
 else {
    Properties props=newPU.getProperties();
    if (props != null) {
      for (      Object key : props.keySet()) {
        temp.getProperties().setProperty((String)key,props.getProperty((String)key));
      }
    }
  }
  temp.setTransactionType(newPU.getTransactionType());
}
