{
  if (factory == null) {
    DefaultRPCServiceExporterFactory defaultFactory=new DefaultRPCServiceExporterFactory();
    defaultFactory.setResponseCompressionEnabled(responseCompressionEnabled);
    factory=defaultFactory;
  }
  Method scanForAnnotatedBeans=GWTHandler.class.getDeclaredMethod("scanForAnnotatedBeans",ApplicationContext.class);
  scanForAnnotatedBeans.setAccessible(true);
  scanForAnnotatedBeans.invoke(this,getApplicationContext());
  Method initServiceInstance=GWTHandler.class.getDeclaredMethod("initServiceInstance",RPCServiceExporter.class,Object.class,Class[].class);
  initServiceInstance.setAccessible(true);
  Field mapping=GWTHandler.class.getDeclaredField("_mapping");
  mapping.setAccessible(true);
  Map<String,Object> map=(Map<String,Object>)mapping.get(this);
  for (  Map.Entry<String,Object> entry : map.entrySet()) {
    RPCServiceExporter exporter=factory.create();
    if (getHandlerMap().get(entry.getKey()) == null) {
      registerHandler(entry.getKey(),initServiceInstance.invoke(this,exporter,entry.getValue(),ReflectionUtils.getExposedInterfaces(entry.getValue().getClass())));
    }
  }
}
