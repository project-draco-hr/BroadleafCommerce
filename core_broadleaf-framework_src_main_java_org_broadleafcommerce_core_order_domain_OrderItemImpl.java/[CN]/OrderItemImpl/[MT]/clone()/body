{
  OrderItemImpl clonedOrderItem;
  try {
    clonedOrderItem=(OrderItemImpl)Class.forName(this.getClass().getName()).newInstance();
    try {
      checkCloneable(clonedOrderItem);
    }
 catch (    CloneNotSupportedException e) {
      LOG.warn("Clone implementation missing in inheritance hierarchy outside of Broadleaf: " + clonedOrderItem.getClass().getName(),e);
    }
    if (candidateItemOffers != null) {
      for (      CandidateItemOffer candidate : candidateItemOffers) {
        CandidateItemOffer clone=candidate.clone();
        clone.setOrderItem(clonedOrderItem);
        clonedOrderItem.getCandidateItemOffers().add(clone);
      }
    }
    if (orderItemAttributeMap != null && !orderItemAttributeMap.isEmpty()) {
      for (      OrderItemAttribute attribute : orderItemAttributeMap.values()) {
        OrderItemAttribute clone=attribute.clone();
        clone.setOrderItem(clonedOrderItem);
        clonedOrderItem.getOrderItemAttributes().put(clone.getName(),clone);
      }
    }
    clonedOrderItem.setCategory(category);
    clonedOrderItem.setGiftWrapOrderItem(giftWrapOrderItem);
    clonedOrderItem.setName(name);
    clonedOrderItem.setOrder(order);
    clonedOrderItem.setOrderItemType(convertOrderItemType(orderItemType));
    clonedOrderItem.setPersonalMessage(personalMessage);
    clonedOrderItem.setQuantity(quantity);
    clonedOrderItem.retailPrice=retailPrice;
    clonedOrderItem.salePrice=salePrice;
    clonedOrderItem.discountsAllowed=discountsAllowed;
    clonedOrderItem.salePriceOverride=salePriceOverride;
    clonedOrderItem.retailPriceOverride=retailPriceOverride;
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  return clonedOrderItem;
}
