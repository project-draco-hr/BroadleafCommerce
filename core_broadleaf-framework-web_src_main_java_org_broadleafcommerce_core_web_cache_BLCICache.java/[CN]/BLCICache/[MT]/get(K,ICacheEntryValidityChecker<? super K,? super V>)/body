{
  incrementReportEntity(this.getCount);
  final CacheEntry<V> resultEntry=this.dataContainer.get(key);
  if (resultEntry == null) {
    incrementReportEntity(this.missCount);
    if (this.traceExecution) {
      this.logger.trace("[THYMELEAF][{}][{}][CACHE_MISS] Cache miss in cache \"{}\" for key \"{}\".",new Object[]{TemplateEngine.threadIndex(),this.name,this.name,key});
    }
    outputReportIfNeeded();
    return null;
  }
  final V resultValue=resultEntry.getValueIfStillValid(this.name,key,validityChecker,this.traceExecution,this.logger);
  if (resultValue == null) {
    final int newSize=this.dataContainer.remove(key);
    if (this.traceExecution) {
      this.logger.trace("[THYMELEAF][{}][{}][CACHE_REMOVE][{}] Removing cache entry in cache \"{}\" (Entry \"{}\" is not valid anymore). New size is {}.",new Object[]{TemplateEngine.threadIndex(),this.name,Integer.valueOf(newSize),this.name,key,Integer.valueOf(newSize)});
      this.logger.trace("[THYMELEAF][{}][{}][CACHE_MISS] Cache miss in cache \"{}\" for key \"{}\".",new Object[]{TemplateEngine.threadIndex(),this.name,this.name,key});
    }
    incrementReportEntity(this.missCount);
    outputReportIfNeeded();
    return null;
  }
  if (this.traceExecution) {
    this.logger.trace("[THYMELEAF][{}][{}][CACHE_HIT] Cache hit in cache \"{}\" for key \"{}\".",new Object[]{TemplateEngine.threadIndex(),this.name,this.name,key});
  }
  incrementReportEntity(this.hitCount);
  outputReportIfNeeded();
  return resultValue;
}
