{
  final CacheEntry<V> existing=this.container.putIfAbsent(key,value);
  if (existing == null) {
    if (this.sizeLimit) {
      final Object removedKey=this.fifo[this.fifoPointer];
      if (removedKey != null) {
        final CacheEntry<V> removed=this.container.remove(removedKey);
        if (removed != null) {
          final Integer newSize=Integer.valueOf(this.container.size());
          this.logger.trace("[THYMELEAF][{}][{}][CACHE_REMOVE][{}] Max size exceeded for cache \"{}\". Removing entry for key \"{}\". New size is {}.",new Object[]{TemplateEngine.threadIndex(),this.name,newSize,this.name,removedKey,newSize});
        }
      }
      this.fifo[this.fifoPointer]=key;
      this.fifoPointer=(this.fifoPointer + 1) % this.maxSize;
    }
  }
  return this.container.size();
}
