{
  Map<String,Object> responseMap=new HashMap<String,Object>();
  Map<String,String> properties=new HashMap<String,String>();
  properties.put("entityType",sectionKey);
  properties.put("entityId",id);
  StaticAsset staticAsset=staticAssetService.createStaticAssetFromFile(file,properties);
  staticAssetStorageService.createStaticAssetStorageFromFile(file,staticAsset);
  String staticAssetUrlPrefix=staticAssetService.getStaticAssetUrlPrefix();
  if (staticAssetUrlPrefix != null && !staticAssetUrlPrefix.startsWith("/")) {
    staticAssetUrlPrefix="/" + staticAssetUrlPrefix;
  }
  String assetUrl=staticAssetUrlPrefix + staticAsset.getFullUrl();
  responseMap.put("adminDisplayAssetUrl",request.getContextPath() + assetUrl);
  responseMap.put("assetUrl",assetUrl);
  if (staticAsset instanceof ImageStaticAssetImpl) {
    responseMap.put("image",Boolean.TRUE);
    responseMap.put("assetThumbnail",assetUrl + "?smallAdminThumbnail");
    responseMap.put("assetLarge",assetUrl + "?largeAdminThumbnail");
  }
 else {
    responseMap.put("image",Boolean.FALSE);
  }
  HttpHeaders responseHeaders=new HttpHeaders();
  responseHeaders.add("Content-Type","text/html; charset=utf-8");
  return new ResponseEntity<Map<String,Object>>(responseMap,responseHeaders,HttpStatus.OK);
}
