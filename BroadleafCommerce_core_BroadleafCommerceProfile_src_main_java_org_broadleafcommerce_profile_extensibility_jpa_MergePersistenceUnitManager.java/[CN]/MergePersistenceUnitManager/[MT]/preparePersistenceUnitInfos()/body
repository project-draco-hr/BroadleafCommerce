{
  super.preparePersistenceUnitInfos();
  try {
    List<Class<?>> managedClassList=new ArrayList<Class<?>>();
    for (    PersistenceUnitInfo pui : mergedPus.values()) {
      for (      BroadleafClassTransformer transformer : classTransformers) {
        try {
          pui.addTransformer(transformer);
        }
 catch (        IllegalStateException e) {
          LOG.warn("A BroadleafClassTransformer is configured for this persistence unit, but Spring reported a problem (likely that a LoadTimeWeaver is not registered). As a result, the Broadleaf Commerce ClassTransformer (" + transformer.getClass().getName() + ") is not being registered with the persistence unit.",e);
        }
      }
    }
    for (    PersistenceUnitInfo pui : mergedPus.values()) {
      for (      String managedClassName : pui.getManagedClassNames()) {
        Class<?> temp=Class.forName(managedClassName,true,getClass().getClassLoader());
        if (!managedClassList.contains(temp)) {
          managedClassList.add(temp);
        }
      }
    }
    if (BroadleafLoadTimeWeaver.isInstrumentationAvailable()) {
      if (BroadleafLoadTimeWeaver.getInstrumentation().isRetransformClassesSupported()) {
        List<Class<?>> filteredClasses=new ArrayList<Class<?>>();
        for (        Class<?> clazz : managedClassList) {
          if (BroadleafLoadTimeWeaver.getInstrumentation().isModifiableClass(clazz)) {
            filteredClasses.add(clazz);
          }
        }
        BroadleafLoadTimeWeaver.getInstrumentation().retransformClasses(filteredClasses.toArray(new Class[]{}));
      }
 else {
        LOG.warn("The JVM instrumentation is reporting that retransformation of classes is not supported. This feature is required for dependable class transformation with Broadleaf. Have you made sure to specify the broadleaf-instrument jar as a javaagent parameter for your JVM?");
      }
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
