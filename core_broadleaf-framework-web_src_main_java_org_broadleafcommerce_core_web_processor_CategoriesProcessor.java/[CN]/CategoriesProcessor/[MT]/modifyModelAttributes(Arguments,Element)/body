{
  String resultVar=element.getAttributeValue("resultVar");
  String parentCategory=element.getAttributeValue("parentCategory");
  String unparsedMaxResults=element.getAttributeValue("maxResults");
  if (extensionManager != null) {
    ExtensionResultHolder holder=new ExtensionResultHolder();
    ExtensionResultStatusType result=extensionManager.getProxy().findAllPossibleChildCategories(parentCategory,unparsedMaxResults,holder);
    if (ExtensionResultStatusType.HANDLED.equals(result)) {
      addToModel(arguments,resultVar,holder.getResult());
      return;
    }
  }
  List<Category> categories=catalogService.findCategoriesByName(parentCategory);
  if (categories != null && categories.size() > 0) {
    List<CategoryXref> subcategories=categories.get(0).getChildCategoryXrefs();
    List<Category> results=Collections.emptyList();
    if (subcategories != null && !subcategories.isEmpty()) {
      results=new ArrayList<Category>(subcategories.size());
      if (StringUtils.isNotEmpty(unparsedMaxResults)) {
        int maxResults=Integer.parseInt(unparsedMaxResults);
        if (subcategories.size() > maxResults) {
          subcategories=subcategories.subList(0,maxResults);
        }
      }
      for (      CategoryXref xref : subcategories) {
        results.add(xref.getSubCategory());
      }
    }
    addToModel(arguments,resultVar,results);
  }
}
