{
  Customer customer=CustomerState.getCustomer(request);
  if (customer != null) {
    Order cart=orderService.findCartForCustomer(customer);
    if (cart != null) {
      try {
        fulfillmentGroupService.removeAllFulfillmentGroupsFromOrder(cart,priceOrder);
        OrderWrapper wrapper=(OrderWrapper)context.getBean(OrderWrapper.class.getName());
        wrapper.wrap(cart,request);
        return wrapper;
      }
 catch (      PricingException e) {
        throw new WebApplicationException(e,Response.status(Response.Status.INTERNAL_SERVER_ERROR).type(MediaType.TEXT_PLAIN).entity("An error occured pricing the cart.").build());
      }
    }
    throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND).type(MediaType.TEXT_PLAIN).entity("Cart could not be found").build());
  }
  throw new WebApplicationException(Response.status(Response.Status.BAD_REQUEST).type(MediaType.TEXT_PLAIN).entity("Could not find customer associated with request. " + "Ensure that customer ID is passed in the request as header or request parameter : customerId").build());
}
