{
  Order cart=CartState.getCart();
  if (cart != null) {
    FulfillmentGroupItemRequest fulfillmentGroupItemRequest=wrapper.unwrap(request,context);
    if (fulfillmentGroupItemRequest.getOrderItem() != null) {
      FulfillmentGroup fulfillmentGroup=null;
      OrderItem orderItem=null;
      for (      FulfillmentGroup fg : cart.getFulfillmentGroups()) {
        if (fg.getId().equals(fulfillmentGroupId)) {
          fulfillmentGroup=fg;
        }
      }
      fulfillmentGroupItemRequest.setFulfillmentGroup(fulfillmentGroup);
      for (      OrderItem oi : cart.getOrderItems()) {
        if (oi.getId().equals(fulfillmentGroupItemRequest.getOrderItem().getId())) {
          orderItem=oi;
        }
      }
      fulfillmentGroupItemRequest.setOrderItem(orderItem);
      if (fulfillmentGroup != null && orderItem != null) {
        try {
          FulfillmentGroup fg=fulfillmentGroupService.addItemToFulfillmentGroup(fulfillmentGroupItemRequest,priceOrder);
          FulfillmentGroupWrapper fulfillmentGroupWrapper=(FulfillmentGroupWrapper)context.getBean(FulfillmentGroupWrapper.class.getName());
          fulfillmentGroupWrapper.wrapDetails(fg,request);
          return fulfillmentGroupWrapper;
        }
 catch (        PricingException e) {
          throw BroadleafWebServicesException.build(Response.Status.INTERNAL_SERVER_ERROR.getStatusCode(),null,null,e).addMessage(BroadleafWebServicesException.CART_PRICING_ERROR);
        }
      }
    }
  }
  throw BroadleafWebServicesException.build(Response.Status.NOT_FOUND.getStatusCode()).addMessage(BroadleafWebServicesException.CART_NOT_FOUND);
}
