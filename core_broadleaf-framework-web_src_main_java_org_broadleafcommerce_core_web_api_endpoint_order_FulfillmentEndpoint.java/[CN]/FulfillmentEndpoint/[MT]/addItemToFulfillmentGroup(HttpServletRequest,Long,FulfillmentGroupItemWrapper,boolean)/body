{
  Customer customer=customerState.getCustomer(request);
  if (customer != null) {
    Order cart=cartService.findCartForCustomer(customer);
    if (cart != null) {
      FulfillmentGroupItemRequest fulfillmentGroupItemRequest=wrapper.unwrap(request,context);
      if (fulfillmentGroupItemRequest.getOrderItem() != null) {
        FulfillmentGroup fulfillmentGroup=null;
        OrderItem orderItem=null;
        for (        FulfillmentGroup fg : cart.getFulfillmentGroups()) {
          if (fg.getId().equals(fulfillmentGroupId)) {
            fulfillmentGroup=fg;
          }
        }
        for (        OrderItem oi : cart.getOrderItems()) {
          if (oi.getId().equals(fulfillmentGroupItemRequest.getOrderItem().getId())) {
            orderItem=oi;
          }
        }
        if (fulfillmentGroup != null && orderItem != null) {
          try {
            cartService.addItemToFulfillmentGroup(orderItem,fulfillmentGroup,fulfillmentGroupItemRequest.getQuantity(),priceOrder);
          }
 catch (          PricingException e) {
            throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);
          }
        }
      }
    }
    throw new WebApplicationException(Response.Status.NOT_FOUND);
  }
  throw new WebApplicationException(Response.Status.BAD_REQUEST);
}
