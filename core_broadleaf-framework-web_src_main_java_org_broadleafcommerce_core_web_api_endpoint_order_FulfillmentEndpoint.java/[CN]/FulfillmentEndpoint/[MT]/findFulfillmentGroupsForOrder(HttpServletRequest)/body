{
  Customer customer=CustomerState.getCustomer(request);
  if (customer != null) {
    Order cart=orderService.findCartForCustomer(customer);
    if (cart != null && cart.getFulfillmentGroups() != null && !cart.getFulfillmentGroups().isEmpty()) {
      List<FulfillmentGroup> fulfillmentGroups=cart.getFulfillmentGroups();
      List<FulfillmentGroupWrapper> fulfillmentGroupWrappers=new ArrayList<FulfillmentGroupWrapper>();
      for (      FulfillmentGroup fulfillmentGroup : fulfillmentGroups) {
        FulfillmentGroupWrapper fulfillmentGroupWrapper=(FulfillmentGroupWrapper)context.getBean(FulfillmentGroupWrapper.class.getName());
        fulfillmentGroupWrapper.wrap(fulfillmentGroup,request);
        fulfillmentGroupWrappers.add(fulfillmentGroupWrapper);
      }
      return fulfillmentGroupWrappers;
    }
    throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND).type(MediaType.TEXT_PLAIN).entity("Cart could not be found").build());
  }
  throw new WebApplicationException(Response.status(Response.Status.BAD_REQUEST).type(MediaType.TEXT_PLAIN).entity("Could not find customer associated with request. " + "Ensure that customer ID is passed in the request as header or request parameter : customerId").build());
}
