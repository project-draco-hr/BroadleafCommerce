{
  DataSource customerDataSource=additionalDataSources[0];
  DataSource timeDataSource=additionalDataSources[1];
  DataSource requestDataSource=additionalDataSources[2];
  DataSource orderItemDataSource=additionalDataSources[3];
  DataSource productDataSource=additionalDataSources[4];
  VLayout leftVerticalLayout=new VLayout();
  leftVerticalLayout.setID("structureLeftVerticalLayout");
  leftVerticalLayout.setHeight100();
  leftVerticalLayout.setWidth("40%");
  leftVerticalLayout.setShowResizeBar(true);
  listDisplay=new DynamicEntityListView("",entityDataSource);
  listDisplay.getGrid().setHoverMoveWithMouse(true);
  listDisplay.getGrid().setCanHover(true);
  listDisplay.getGrid().setShowHover(true);
  listDisplay.getGrid().setHoverOpacity(75);
  listDisplay.getGrid().setHoverCustomizer(new HoverCustomizer(){
    @Override public String hoverHTML(    Object value,    ListGridRecord record,    int rowNum,    int colNum){
      if (record.getAttribute("lockedFlag") != null && record.getAttributeAsBoolean("lockedFlag")) {
        return BLCMain.getMessageManager().replaceKeys(BLCMain.getMessageManager().getString("lockedMessage"),new String[]{"userName","date"},new String[]{record.getAttribute("auditable.updatedBy.name"),record.getAttribute("auditable.dateUpdated")});
      }
      return null;
    }
  }
);
  leftVerticalLayout.addMember(listDisplay);
  dynamicFormDisplay=new DynamicFormView("",entityDataSource);
  addMember(leftVerticalLayout);
  TabSet topTabSet=new TabSet();
  topTabSet.setID("scTopTabSet");
  topTabSet.setTabBarPosition(Side.TOP);
  topTabSet.setPaneContainerOverflow(Overflow.HIDDEN);
  topTabSet.setWidth("50%");
  topTabSet.setHeight100();
  topTabSet.setPaneMargin(0);
  Tab detailsTab=new Tab(BLCMain.getMessageManager().getString("scDetailsTabTitle"));
  detailsTab.setID("scDetailsTab");
  detailsTab.setPane(dynamicFormDisplay);
  topTabSet.addTab(detailsTab);
  Tab rulesTab=new Tab(BLCMain.getMessageManager().getString("scRulesTabTitle"));
  rulesTab.setID("scRulesTab");
  VLayout rulesLayout=new VLayout();
  rulesLayout.setHeight100();
  rulesLayout.setWidth100();
  rulesLayout.setBackgroundColor("#eaeaea");
  rulesLayout.setOverflow(Overflow.AUTO);
  structuredContentToolBar=new ToolStrip();
  structuredContentToolBar.setHeight(20);
  structuredContentToolBar.setWidth100();
  structuredContentToolBar.addSpacer(6);
  structuredContentSaveButton=new ToolStripButton();
  structuredContentSaveButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/save.png");
  structuredContentToolBar.addButton(structuredContentSaveButton);
  structuredContentSaveButton.setDisabled(true);
  structuredContentRefreshButton=new ToolStripButton();
  structuredContentRefreshButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/refresh.png");
  structuredContentToolBar.addButton(structuredContentRefreshButton);
  structuredContentToolBar.addSpacer(6);
  rulesLayout.addMember(structuredContentToolBar);
  VLayout innerLayout=new VLayout();
  innerLayout.setHeight100();
  innerLayout.setWidth100();
  innerLayout.setBackgroundColor("#eaeaea");
  innerLayout.setLayoutMargin(20);
  Label customerLabel=new Label();
  customerLabel.setContents(BLCMain.getMessageManager().getString("scCustomerRule"));
  customerLabel.setHeight(20);
  innerLayout.addMember(customerLabel);
  customerFilterBuilder=new FilterBuilder();
  customerFilterBuilder.setDataSource(customerDataSource);
  customerFilterBuilder.setFieldDataSource(new FieldDataSourceWrapper(customerDataSource));
  customerFilterBuilder.setLayoutBottomMargin(20);
  customerFilterBuilder.setAllowEmpty(true);
  customerFilterBuilder.setValidateOnChange(false);
  innerLayout.addMember(customerFilterBuilder);
  Label timeLabel=new Label();
  timeLabel.setContents(BLCMain.getMessageManager().getString("scTimeRule"));
  timeLabel.setHeight(20);
  innerLayout.addMember(timeLabel);
  timeFilterBuilder=new FilterBuilder();
  timeFilterBuilder.setDataSource(timeDataSource);
  timeFilterBuilder.setFieldDataSource(new FieldDataSourceWrapper(timeDataSource));
  timeFilterBuilder.setLayoutBottomMargin(20);
  timeFilterBuilder.setAllowEmpty(true);
  timeFilterBuilder.setValidateOnChange(false);
  innerLayout.addMember(timeFilterBuilder);
  Label requestLabel=new Label();
  requestLabel.setContents(BLCMain.getMessageManager().getString("scRequestRule"));
  requestLabel.setHeight(20);
  innerLayout.addMember(requestLabel);
  requestFilterBuilder=new FilterBuilder();
  requestFilterBuilder.setDataSource(requestDataSource);
  requestFilterBuilder.setFieldDataSource(new FieldDataSourceWrapper(requestDataSource));
  requestFilterBuilder.setLayoutBottomMargin(20);
  requestFilterBuilder.setAllowEmpty(true);
  requestFilterBuilder.setValidateOnChange(false);
  innerLayout.addMember(requestFilterBuilder);
  Label productLabel=new Label();
  productLabel.setContents(BLCMain.getMessageManager().getString("scProductRule"));
  productLabel.setHeight(20);
  innerLayout.addMember(productLabel);
  productFilterBuilder=new FilterBuilder();
  productFilterBuilder.setDataSource(customerDataSource);
  productFilterBuilder.setFieldDataSource(new FieldDataSourceWrapper(productDataSource));
  productFilterBuilder.setLayoutBottomMargin(20);
  productFilterBuilder.setAllowEmpty(true);
  productFilterBuilder.setValidateOnChange(false);
  innerLayout.addMember(productFilterBuilder);
  Label orderItemLabel=new Label();
  orderItemLabel.setContents(BLCMain.getMessageManager().getString("scOrderItemRule"));
  orderItemLabel.setHeight(20);
  innerLayout.addMember(orderItemLabel);
  itemBuilderViews.add(new ItemBuilderView(orderItemDataSource,true));
  newItemBuilderLayout=new VLayout();
  HLayout buttonLayout=new HLayout();
  buttonLayout.setID("offerButtonLayout");
  buttonLayout.setWidth100();
  buttonLayout.setAlign(Alignment.LEFT);
  buttonLayout.setHeight(30);
  addItemButton=new Button();
  addItemButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/actions/add.png");
  addItemButton.setTitle(BLCMain.getMessageManager().getString("newItemRuleButtonTitle"));
  addItemButton.setWidth(136);
  addItemButton.setWrap(false);
  buttonLayout.addMember(addItemButton);
  buttonLayout.setLayoutBottomMargin(10);
  newItemBuilderLayout.addMember(buttonLayout);
  itemBuilderContainerLayout=new VLayout();
  newItemBuilderLayout.addMember(itemBuilderContainerLayout);
  for (  ItemBuilderDisplay widget : itemBuilderViews) {
    itemBuilderContainerLayout.addMember((ItemBuilderView)widget);
  }
  innerLayout.addMember(newItemBuilderLayout);
  rulesLayout.addMember(innerLayout);
  rulesTab.setPane(rulesLayout);
  topTabSet.addTab(rulesTab);
  addMember(topTabSet);
}
