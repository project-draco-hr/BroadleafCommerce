{
  final OrderItem item=orderItemDao.create(OrderItemType.BASIC);
  item.setName(itemRequest.getItemName());
  item.setQuantity(itemRequest.getQuantity());
  item.setOrder(itemRequest.getOrder());
  if (itemRequest.getSalePriceOverride() != null) {
    item.setSalePriceOverride(Boolean.TRUE);
    item.setSalePrice(itemRequest.getSalePriceOverride());
  }
  if (itemRequest.getRetailPriceOverride() != null) {
    item.setRetailPriceOverride(Boolean.TRUE);
    item.setRetailPrice(itemRequest.getRetailPriceOverride());
  }
  if (itemRequest.getItemAttributes() != null && !itemRequest.getItemAttributes().isEmpty()) {
    Map<String,OrderItemAttribute> attributeMap=new HashMap<String,OrderItemAttribute>();
    OrderItemAttribute orderItemAttribute;
    Iterator it=itemRequest.getItemAttributes().entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry pair=(Map.Entry)it.next();
      orderItemAttribute=new OrderItemAttributeImpl();
      orderItemAttribute.setName(pair.getKey().toString());
      orderItemAttribute.setValue(pair.getValue().toString());
      orderItemAttribute.setOrderItem(item);
      attributeMap.put(pair.getKey().toString(),orderItemAttribute);
      it.remove();
    }
    item.setOrderItemAttributes(attributeMap);
  }
  return item;
}
