{
  if (skuIds == null || skuIds.size() == 0) {
    return null;
  }
  if (skuIds.size() > 100) {
    logger.warn("Not recommended to use the readSkusByIds method for long lists of skuIds, since " + "Hibernate is required to transform the distinct results. The list of requested" + "sku ids was (" + skuIds.size() + ") in length.");
  }
  CriteriaBuilder builder=em.getCriteriaBuilder();
  CriteriaQuery<Sku> criteria=builder.createQuery(Sku.class);
  Root<SkuImpl> sku=criteria.from(SkuImpl.class);
  criteria.select(sku);
  criteria.where(sku.get("id").as(Long.class).in(sandBoxHelper.mergeCloneIds(SkuImpl.class,skuIds.toArray(new Long[skuIds.size()]))));
  if (!dialectHelper.isOracle() && !dialectHelper.isSqlServer()) {
    criteria.distinct(true);
  }
  TypedQuery<Sku> query=em.createQuery(criteria);
  query.setHint(QueryHints.HINT_CACHEABLE,true);
  query.setHint(QueryHints.HINT_CACHE_REGION,"query.Catalog");
  return query.getResultList();
}
