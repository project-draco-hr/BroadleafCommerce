{
  String key=FilterTypeEnum.GAUSSIANBLUR.toString().toLowerCase();
  if (!containsMyFilterParams(key,parameterMap)) {
    return null;
  }
  Operation operation=new Operation();
  operation.setName(key);
  String factor=parameterMap.get(key + "-factor");
  operation.setFactor(factor == null ? null : Double.valueOf(factor));
  UnmarshalledParameter kernelSize=new UnmarshalledParameter();
  String kernelSizeApplyFactor=parameterMap.get(key + "-kernel-size-apply-factor");
  kernelSize.setApplyFactor(kernelSizeApplyFactor == null ? false : Boolean.valueOf(kernelSizeApplyFactor));
  kernelSize.setName("kernel-size");
  kernelSize.setType(ParameterTypeEnum.INT.toString());
  kernelSize.setValue(parameterMap.get(key + "-kernel-size-amount"));
  UnmarshalledParameter numOfPasses=new UnmarshalledParameter();
  String numOfPassesApplyFactor=parameterMap.get(key + "-num-passes-apply-factor");
  numOfPasses.setApplyFactor(numOfPassesApplyFactor == null ? false : Boolean.valueOf(numOfPassesApplyFactor));
  numOfPasses.setName("num-passes");
  numOfPasses.setType(ParameterTypeEnum.INT.toString());
  numOfPasses.setValue(parameterMap.get(key + "-num-passes-amount"));
  operation.setParameters(new UnmarshalledParameter[]{kernelSize,numOfPasses});
  return operation;
}
