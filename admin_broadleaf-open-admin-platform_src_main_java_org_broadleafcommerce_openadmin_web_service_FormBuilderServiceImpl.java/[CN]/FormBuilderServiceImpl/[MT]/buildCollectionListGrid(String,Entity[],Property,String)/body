{
  FieldMetadata fmd=field.getMetadata();
  PersistencePackageRequest ppr=PersistencePackageRequest.fromMetadata(fmd);
  ClassMetadata cmd=adminEntityService.getClassMetadata(ppr);
  List<Field> headerFields=new ArrayList<Field>();
  ListGrid.Type type=null;
  boolean editable=false;
  if (fmd instanceof BasicFieldMetadata) {
    for (    Property p : cmd.getProperties()) {
      if (p.getMetadata() instanceof BasicFieldMetadata) {
        BasicFieldMetadata md=(BasicFieldMetadata)p.getMetadata();
        if (md.isProminent() != null && md.isProminent()) {
          Field hf=new Field().withName(p.getName()).withFriendlyName(fmd.getFriendlyName());
          headerFields.add(hf);
        }
      }
    }
    type=ListGrid.Type.TO_ONE;
  }
 else   if (fmd instanceof BasicCollectionMetadata) {
    for (    Property p : cmd.getProperties()) {
      if (p.getMetadata() instanceof BasicFieldMetadata) {
        BasicFieldMetadata md=(BasicFieldMetadata)p.getMetadata();
        if (md.isProminent() != null && md.isProminent()) {
          Field hf=new Field().withName(p.getName()).withFriendlyName(md.getFriendlyName());
          headerFields.add(hf);
        }
      }
    }
    type=ListGrid.Type.BASIC;
    if (((BasicCollectionMetadata)fmd).getAddMethodType().equals(AddMethodType.PERSIST)) {
      editable=true;
    }
  }
 else   if (fmd instanceof AdornedTargetCollectionMetadata) {
    AdornedTargetCollectionMetadata atcmd=(AdornedTargetCollectionMetadata)fmd;
    for (    String fieldName : atcmd.getGridVisibleFields()) {
      Property p=cmd.getPMap().get(fieldName);
      Field hf=new Field().withName(p.getName()).withFriendlyName(p.getMetadata().getFriendlyName());
      headerFields.add(hf);
    }
    type=ListGrid.Type.ADORNED;
    if (((AdornedTargetCollectionMetadata)fmd).getMaintainedAdornedTargetFields().length > 0) {
      editable=true;
    }
  }
 else   if (fmd instanceof MapMetadata) {
    MapMetadata mmd=(MapMetadata)fmd;
    Property p2=cmd.getPMap().get("key");
    Field hf=new Field().withName(p2.getName()).withFriendlyName(p2.getMetadata().getFriendlyName());
    headerFields.add(hf);
    for (    Property p : cmd.getProperties()) {
      if (p.getMetadata() instanceof BasicFieldMetadata) {
        BasicFieldMetadata md=(BasicFieldMetadata)p.getMetadata();
        if (md.getTargetClass().equals(mmd.getValueClassName())) {
          if (md.isProminent() != null && md.isProminent()) {
            hf=new Field().withName(p.getName()).withFriendlyName(md.getFriendlyName());
            headerFields.add(hf);
          }
        }
      }
    }
    type=ListGrid.Type.MAP;
    editable=true;
  }
  ListGrid listGrid=createListGrid(cmd.getCeilingType(),headerFields,type,entities,sectionKey);
  listGrid.setSubCollectionFieldName(field.getName());
  listGrid.setFriendlyName(field.getMetadata().getFriendlyName());
  if (StringUtils.isEmpty(listGrid.getFriendlyName())) {
    listGrid.setFriendlyName(field.getName());
  }
  listGrid.setContainingEntityId(containingEntityId);
  listGrid.setEditable(editable);
  return listGrid;
}
