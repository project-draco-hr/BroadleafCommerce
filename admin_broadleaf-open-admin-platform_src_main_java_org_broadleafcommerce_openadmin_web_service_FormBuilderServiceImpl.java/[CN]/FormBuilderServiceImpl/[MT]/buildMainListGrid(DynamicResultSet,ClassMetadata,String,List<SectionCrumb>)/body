{
  List<Field> headerFields=new ArrayList<Field>();
  ListGrid.Type type=ListGrid.Type.MAIN;
  String idProperty="id";
  for (  Property p : cmd.getProperties()) {
    if (p.getMetadata() instanceof BasicFieldMetadata) {
      BasicFieldMetadata fmd=(BasicFieldMetadata)p.getMetadata();
      if (SupportedFieldType.ID.equals(fmd.getFieldType())) {
        idProperty=fmd.getName();
      }
      if (fmd.isProminent() != null && fmd.isProminent() && !ArrayUtils.contains(getGridHiddenVisibilities(),fmd.getVisibility())) {
        Field hf=createHeaderField(p,fmd);
        headerFields.add(hf);
      }
    }
  }
  ListGrid listGrid=createListGrid(cmd.getCeilingType(),headerFields,type,drs,sectionKey,0,idProperty,null,sectionCrumbs);
  if (CollectionUtils.isNotEmpty(listGrid.getHeaderFields())) {
    listGrid.getHeaderFields().iterator().next().setMainEntityLink(true);
  }
 else {
    String message="There are no listgrid header fields configured for the class " + cmd.getCeilingType();
    message+="Please mark some @AdminPresentation fields with 'prominent = true'";
    LOG.error(message);
  }
  return listGrid;
}
