{
  final Resource[] response=new Resource[1];
  transUtil.runOptionalTransactionalOperation(new StreamCapableTransactionalOperationAdapter(){
    @Override public void execute() throws Throwable {
      Element e=getGeneratedResourceCache().get(path);
      Resource r=null;
      if (e == null) {
        statisticsService.addCacheStat(CacheStatType.GENERATED_RESOURCE_CACHE_HIT_RATE.toString(),false);
      }
 else {
        statisticsService.addCacheStat(CacheStatType.GENERATED_RESOURCE_CACHE_HIT_RATE.toString(),true);
      }
      boolean shouldGenerate=false;
      if (e == null || e.getObjectValue() == null) {
        shouldGenerate=true;
      }
 else       if (e.getObjectValue() instanceof GeneratedResource && isCachedResourceExpired((GeneratedResource)e.getObjectValue(),path,locations)) {
        shouldGenerate=true;
      }
 else {
        r=(Resource)e.getObjectValue();
      }
      if (shouldGenerate) {
        r=getFileContents(path,locations);
        e=new Element(path,r);
        getGeneratedResourceCache().put(e);
      }
      response[0]=r;
    }
  }
,RuntimeException.class,!TransactionSynchronizationManager.hasResource(((JpaTransactionManager)transUtil.getTransactionManager()).getEntityManagerFactory()));
  return response[0];
}
