{
  CombinedPaymentContextSeed seed=((PaymentContext)context).getSeedData();
  Map<PaymentInfo,Referenced> infos=seed.getInfos();
  Iterator<PaymentInfo> itr=infos.keySet().iterator();
  while (itr.hasNext()) {
    PaymentInfo info=itr.next();
    if (info.getType().equals(BLCPaymentInfoType.GIFT_CARD)) {
switch (seed.getActionType()) {
case AUTHORIZE:
        bankAccountService.authorize(info,(BankAccountPaymentInfo)infos.get(info));
      break;
case AUTHORIZEANDDEBIT:
    bankAccountService.authorizeAndDebit(info,(BankAccountPaymentInfo)infos.get(info));
  break;
case CREDIT:
bankAccountService.credit(info,(BankAccountPaymentInfo)infos.get(info));
break;
case DEBIT:
bankAccountService.debit(info,(BankAccountPaymentInfo)infos.get(info));
break;
case VOID:
bankAccountService.voidPayment(info,(BankAccountPaymentInfo)infos.get(info));
break;
default :
throw new PaymentException("Module does not support payment type of: " + seed.getActionType().toString());
}
}
}
return context;
}
