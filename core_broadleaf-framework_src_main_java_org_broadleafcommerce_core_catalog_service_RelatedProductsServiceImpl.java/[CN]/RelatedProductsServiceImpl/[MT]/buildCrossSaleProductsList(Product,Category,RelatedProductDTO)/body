{
  List<? extends PromotableProduct> crossSaleProducts=null;
  if (product != null) {
    if (relatedProductDTO.isCumulativeResults()) {
      crossSaleProducts=product.getCumulativeCrossSaleProducts();
    }
 else {
      crossSaleProducts=product.getCrossSaleProducts();
    }
  }
 else   if (category != null) {
    if (relatedProductDTO.isCumulativeResults()) {
      crossSaleProducts=category.getCumulativeCrossSaleProducts();
    }
 else {
      crossSaleProducts=category.getCrossSaleProducts();
    }
  }
  removeCurrentProductFromReturnList(product,crossSaleProducts);
  crossSaleProducts=removeDuplicatesFromList(crossSaleProducts);
  return resizeList(crossSaleProducts,relatedProductDTO.getQuantity());
}
