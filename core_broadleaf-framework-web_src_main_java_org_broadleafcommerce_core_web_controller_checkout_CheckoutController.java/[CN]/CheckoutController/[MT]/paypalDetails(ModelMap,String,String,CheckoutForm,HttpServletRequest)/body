{
  try {
    List<NameValuePair> nvps=new ArrayList<NameValuePair>();
    Order order=retrieveCartOrder(request,model);
    nvps.add(new NameValuePair("TOKEN",token));
    String resp=setHttpClient(order,"details",nvps);
    if (resp.contains("ACK=Success") || resp.contains("ACK=SuccessWithWarning")) {
      String firstName=getResponseValue(resp,"FIRSTNAME");
      String lastName=getResponseValue(resp,"LASTNAME");
      String email=getResponseValue(resp,"EMAIL");
      fillCheckoutForm(checkoutForm,resp);
      checkoutForm.getShippingAddress().setFirstName(firstName);
      checkoutForm.getShippingAddress().setLastName(lastName);
      order.getCustomer().setFirstName(firstName);
      order.getCustomer().setLastName(lastName);
      order.getCustomer().setEmailAddress(email.replaceAll("%40","@").replaceAll("%2e","."));
      List<FulfillmentGroup> groups=order.getFulfillmentGroups();
      if (groups.size() < 1) {
        return "redirect:/basket/currentCart.htm";
      }
      FulfillmentGroup group=groups.get(0);
      group.setOrder(order);
      group.setAddress(checkoutForm.getShippingAddress());
      group.setShippingPrice(order.getTotalShipping());
      model.addAttribute("order",retrieveCartOrder(request,model));
      model.addAttribute("token",token);
      model.addAttribute("payerID",payerID);
      return "checkout/checkoutReview";
    }
 else {
      return resp.substring(resp.indexOf("ERRORCODE"));
    }
  }
 catch (  Exception e) {
    System.out.println(e);
    return "";
  }
}
