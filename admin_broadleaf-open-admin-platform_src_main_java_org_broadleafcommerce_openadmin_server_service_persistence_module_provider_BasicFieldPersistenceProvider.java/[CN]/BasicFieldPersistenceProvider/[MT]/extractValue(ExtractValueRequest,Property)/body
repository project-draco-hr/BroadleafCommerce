{
  if (!canHandleExtraction(extractValueRequest,property)) {
    return FieldProviderResponse.NOT_HANDLED;
  }
  try {
    if (extractValueRequest.getRequestedValue() != null) {
      String val=null;
      if (extractValueRequest.getMetadata().getForeignKeyCollection()) {
        ((BasicFieldMetadata)property.getMetadata()).setFieldType(extractValueRequest.getMetadata().getFieldType());
      }
 else       if (extractValueRequest.getMetadata().getFieldType().equals(SupportedFieldType.BOOLEAN) && extractValueRequest.getRequestedValue() instanceof Character) {
        val=(extractValueRequest.getRequestedValue().equals('Y')) ? "true" : "false";
      }
 else       if (Date.class.isAssignableFrom(extractValueRequest.getRequestedValue().getClass())) {
        val=extractValueRequest.getDataFormatProvider().getSimpleDateFormatter().format((Date)extractValueRequest.getRequestedValue());
      }
 else       if (Timestamp.class.isAssignableFrom(extractValueRequest.getRequestedValue().getClass())) {
        val=extractValueRequest.getDataFormatProvider().getSimpleDateFormatter().format(new Date(((Timestamp)extractValueRequest.getRequestedValue()).getTime()));
      }
 else       if (Calendar.class.isAssignableFrom(extractValueRequest.getRequestedValue().getClass())) {
        val=extractValueRequest.getDataFormatProvider().getSimpleDateFormatter().format(((Calendar)extractValueRequest.getRequestedValue()).getTime());
      }
 else       if (Double.class.isAssignableFrom(extractValueRequest.getRequestedValue().getClass())) {
        val=extractValueRequest.getDataFormatProvider().getDecimalFormatter().format(extractValueRequest.getRequestedValue());
      }
 else       if (BigDecimal.class.isAssignableFrom(extractValueRequest.getRequestedValue().getClass())) {
        val=extractValueRequest.getDataFormatProvider().getDecimalFormatter().format(extractValueRequest.getRequestedValue());
      }
 else       if (extractValueRequest.getMetadata().getForeignKeyClass() != null) {
        try {
          val=extractValueRequest.getFieldManager().getFieldValue(extractValueRequest.getRequestedValue(),extractValueRequest.getMetadata().getForeignKeyProperty()).toString();
          String entityName=null;
          if (extractValueRequest.getRequestedValue() instanceof AdminMainEntity) {
            entityName=((AdminMainEntity)extractValueRequest.getRequestedValue()).getMainEntityName();
          }
          Object temp=null;
          if (!StringUtils.isEmpty(extractValueRequest.getMetadata().getForeignKeyDisplayValueProperty())) {
            String nameProperty=extractValueRequest.getMetadata().getForeignKeyDisplayValueProperty();
            try {
              temp=extractValueRequest.getFieldManager().getFieldValue(extractValueRequest.getRequestedValue(),nameProperty);
            }
 catch (            FieldNotAvailableException e) {
            }
          }
          if (temp == null && StringUtils.isEmpty(entityName)) {
            try {
              temp=extractValueRequest.getFieldManager().getFieldValue(extractValueRequest.getRequestedValue(),"name");
            }
 catch (            FieldNotAvailableException e) {
            }
          }
          if (temp != null) {
            extractValueRequest.setDisplayVal(temp.toString());
          }
 else           if (!StringUtils.isEmpty(entityName)) {
            extractValueRequest.setDisplayVal(entityName);
          }
        }
 catch (        FieldNotAvailableException e) {
          throw new IllegalArgumentException(e);
        }
      }
 else {
        val=extractValueRequest.getRequestedValue().toString();
      }
      property.setValue(val);
      property.setDisplayValue(extractValueRequest.getDisplayVal());
    }
  }
 catch (  IllegalAccessException e) {
    throw new PersistenceException(e);
  }
  return FieldProviderResponse.HANDLED;
}
