{
  final PersistencePerspective persistencePerspective=new PersistencePerspective();
  if (useServerSideInspectionCache != null) {
    persistencePerspective.setUseServerSideInspectionCache(useServerSideInspectionCache);
  }
  final List<DataSourceModule> dataSourceModuleList=new ArrayList<DataSourceModule>();
  dataSourceModuleList.add(new BasicClientEntityModule(foreignKey.getForeignKeyClass(),persistencePerspective,AppServices.DYNAMIC_ENTITY));
  DataSourceModule[] modules=new DataSourceModule[dataSourceModuleList.size()];
  modules=dataSourceModuleList.toArray(modules);
  CustomCriteriaListGridDataSource dataSource=new CustomCriteriaListGridDataSource(name,persistencePerspective,AppServices.DYNAMIC_ENTITY,modules);
  if (customCriteria != null && customCriteria.length > 0) {
    dataSource.setUseForAdd(true);
    dataSource.setUseForFetch(true);
    dataSource.setUseForInspect(true);
    dataSource.setUseForRemove(true);
    dataSource.setUseForUpdate(true);
    dataSource.setCustomCriteria(customCriteria);
  }
  dataSource.buildFields(null,false,cb);
}
