{
  CreateResponse<G> createResponse=context.createOrRetrieveCopyInstance(this);
  if (createResponse.isAlreadyPopulated()) {
    return createResponse;
  }
  Category cloned=createResponse.getClone();
  cloned.setActiveEndDate(activeEndDate);
  cloned.setActiveStartDate(activeStartDate);
  cloned.setFulfillmentType(getFulfillmentType());
  cloned.setTaxCode(taxCode);
  cloned.setUrl(url);
  cloned.setUrlKey(urlKey);
  cloned.setOverrideGeneratedUrl(getOverrideGeneratedUrl());
  cloned.setName(name);
  cloned.setLongDescription(longDescription);
  cloned.setInventoryType(getInventoryType());
  cloned.setExternalId(externalId);
  cloned.setDisplayTemplate(displayTemplate);
  cloned.setDescription(description);
  cloned.setAllParentCategoryXrefs(allParentCategoryXrefs);
  cloned.setDefaultParentCategory(defaultParentCategory);
  for (  CategoryXref entry : allChildCategoryXrefs) {
    CategoryXref clonedEntry=entry.createOrRetrieveCopyInstance(context).getClone();
    clonedEntry.setCategory(cloned);
    cloned.getAllChildCategoryXrefs().add(clonedEntry);
  }
  for (  FeaturedProduct entry : featuredProducts) {
    FeaturedProduct clonedEntry=entry.createOrRetrieveCopyInstance(context).getClone();
    clonedEntry.setCategory(cloned);
    cloned.getFeaturedProducts().add(clonedEntry);
  }
  for (  RelatedProduct entry : crossSaleProducts) {
    CrossSaleProductImpl clonedEntry=((CrossSaleProductImpl)entry).createOrRetrieveCopyInstance(context).getClone();
    clonedEntry.setCategory(cloned);
    cloned.getCrossSaleProducts().add(clonedEntry);
  }
  for (  RelatedProduct entry : upSaleProducts) {
    UpSaleProductImpl clonedEntry=((UpSaleProductImpl)entry).createOrRetrieveCopyInstance(context).getClone();
    clonedEntry.setCategory(cloned);
    cloned.getUpSaleProducts().add(clonedEntry);
  }
  for (  CategoryProductXref entry : allProductXrefs) {
    CategoryProductXref clonedEntry=entry.createOrRetrieveCopyInstance(context).getClone();
    clonedEntry.setCategory(cloned);
    cloned.getActiveProductXrefs().add(clonedEntry);
  }
  for (  Map.Entry<String,CategoryAttribute> entry : categoryAttributes.entrySet()) {
    CategoryAttribute clonedEntry=entry.getValue().createOrRetrieveCopyInstance(context).getClone();
    clonedEntry.setCategory(cloned);
    cloned.getCategoryAttributes().add(clonedEntry);
    cloned.getCategoryAttributesMap().put(entry.getKey(),clonedEntry);
  }
  for (  CategorySearchFacet entry : searchFacets) {
    CategorySearchFacet clonedEntry=entry.createOrRetrieveCopyInstance(context).getClone();
    clonedEntry.setCategory(cloned);
    cloned.getSearchFacets().add(clonedEntry);
  }
  for (  CategoryExcludedSearchFacet entry : excludedSearchFacets) {
    CategoryExcludedSearchFacet clonedEntry=entry.createOrRetrieveCopyInstance(context).getClone();
    clonedEntry.setCategory(cloned);
    cloned.getExcludedSearchFacets().add(clonedEntry);
  }
  for (  Map.Entry<String,Media> entry : categoryMedia.entrySet()) {
    MediaImpl clonedEntry=((MediaImpl)entry.getValue()).createOrRetrieveCopyInstance(context).getClone();
    cloned.getCategoryMedia().put(entry.getKey(),clonedEntry);
  }
  return createResponse;
}
