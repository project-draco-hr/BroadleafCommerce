{
  SortedSet<CategorySearchFacet> sortedFacets=new TreeSet<CategorySearchFacet>(facetComparator);
  sortedFacets.addAll(getSearchFacets());
  SortedSet<CategorySearchFacet> sortedParentFacets=new TreeSet<CategorySearchFacet>(facetComparator);
  for (  Category category : getAllParentCategories()) {
    sortedParentFacets.addAll(category.getCumulativeSearchFacets());
  }
  CollectionUtils.filter(sortedParentFacets,new Predicate(){
    @Override public boolean evaluate(    Object arg){
      CategorySearchFacet csf=(CategorySearchFacet)arg;
      return !getExcludedSearchFacets().contains(csf.getSearchFacet());
    }
  }
);
  List<CategorySearchFacet> facets=new ArrayList<CategorySearchFacet>();
  facets.addAll(sortedFacets);
  facets.addAll(sortedParentFacets);
  return facets;
}
