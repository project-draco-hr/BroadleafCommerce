{
  List<CategorySearchFacet> returnFacets=new ArrayList<CategorySearchFacet>();
  returnFacets.addAll(getSearchFacets());
  Collections.sort(returnFacets,facetPositionComparator);
  List<CategorySearchFacet> parentFacets=null;
  if (defaultParentCategory != null) {
    parentFacets=defaultParentCategory.getCumulativeSearchFacets();
    CollectionUtils.filter(parentFacets,new Predicate(){
      @Override public boolean evaluate(      Object arg){
        CategorySearchFacet csf=(CategorySearchFacet)arg;
        return !getExcludedSearchFacets().contains(csf.getSearchFacet());
      }
    }
);
  }
  if (parentFacets != null) {
    returnFacets.addAll(parentFacets);
  }
  return returnFacets;
}
