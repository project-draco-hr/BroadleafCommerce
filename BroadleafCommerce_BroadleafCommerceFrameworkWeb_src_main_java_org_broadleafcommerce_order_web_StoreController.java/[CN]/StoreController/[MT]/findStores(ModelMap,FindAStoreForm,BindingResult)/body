{
  Address searchAddress=new AddressImpl();
  searchAddress.setAddressLine1(findAStoreForm.getAddressLine1());
  searchAddress.setAddressLine2(findAStoreForm.getAddressLine2());
  searchAddress.setCity(findAStoreForm.getCity());
  searchAddress.setState(findAStoreForm.getState());
  searchAddress.setPostalCode(findAStoreForm.getPostalCode());
  searchAddress.setCountry(findAStoreForm.getCountry());
  if (findAStoreForm.getPostalCode() == null || "".equals(findAStoreForm.getPostalCode()) || "".equals(findAStoreForm.getDistance()) || findAStoreForm.getPostalCode().length() != 5) {
    model.addAttribute("errorMessage","Please enter a valid zip/postal code and distance.");
    return showStores(model);
  }
  findAStoreForm.setStoreDistanceMap(storeService.findStoresByAddress(searchAddress,Double.parseDouble(findAStoreForm.getDistance())));
  if (findAStoreForm.getStoreDistanceMap().size() == 0) {
    model.addAttribute("errorMessage","No stores found in your area.");
  }
  model.addAttribute("stateList",stateService.findStates());
  model.addAttribute("countryList",countryService.findCountries());
  model.addAttribute("findAStoreForm",findAStoreForm);
  return "storeLocator/findAStore";
}
