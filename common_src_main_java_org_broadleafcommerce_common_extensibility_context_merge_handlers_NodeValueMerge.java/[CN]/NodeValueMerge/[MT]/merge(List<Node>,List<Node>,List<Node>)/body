{
  if (CollectionUtils.isEmpty(nodeList1) || CollectionUtils.isEmpty(nodeList2)) {
    return null;
  }
  Node node1=nodeList1.get(0);
  Node node2=nodeList2.get(0);
  String[] items1=node1.getNodeValue().split(getRegEx());
  String[] items2=node2.getNodeValue().split(getRegEx());
  Set<String> finalItems=new LinkedHashSet<String>();
  for (  String anItems1 : items1) {
    finalItems.add(anItems1.trim());
  }
  for (  String anItems2 : items2) {
    finalItems.add(anItems2.trim());
  }
  StringBuilder sb=new StringBuilder();
  Iterator<String> itr=finalItems.iterator();
  while (itr.hasNext()) {
    sb.append(itr.next());
    if (itr.hasNext()) {
      sb.append(getDelimiter());
    }
  }
  node1.setNodeValue(sb.toString());
  node2.setNodeValue(sb.toString());
  Node[] response=new Node[nodeList2.size()];
  for (int j=0; j < response.length; j++) {
    response[j]=nodeList2.get(j);
  }
  return response;
}
