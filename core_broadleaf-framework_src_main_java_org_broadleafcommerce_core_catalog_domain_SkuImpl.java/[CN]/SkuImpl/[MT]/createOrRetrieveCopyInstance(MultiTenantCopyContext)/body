{
  CreateResponse<G> createResponse=context.createOrRetrieveCopyInstance(this);
  if (createResponse.isAlreadyPopulated()) {
    return createResponse;
  }
  Sku cloned=createResponse.getClone();
  cloned.setRetailPrice(getRetailPrice());
  cloned.setSalePrice(getSalePrice());
  cloned.setName(name);
  cloned.setActiveEndDate(activeEndDate);
  cloned.setActiveStartDate(activeStartDate);
  cloned.setCurrency(currency);
  cloned.setQuantityAvailable(quantityAvailable);
  cloned.setDescription(description);
  cloned.setDimension(dimension);
  cloned.setDiscountable(isDiscountable());
  cloned.setDisplayTemplate(displayTemplate);
  cloned.setExternalId(externalId);
  cloned.setTaxable(isTaxable());
  cloned.setTaxCode(taxCode);
  cloned.setUrlKey(urlKey);
  cloned.setInventoryType(getInventoryType());
  cloned.setFulfillmentType(getFulfillmentType());
  cloned.setIsMachineSortable(isMachineSortable);
  cloned.setLongDescription(longDescription);
  cloned.setUpc(upc);
  if (product != null) {
    cloned.setDefaultProduct(product.createOrRetrieveCopyInstance(context).getClone());
  }
  if (product != null) {
    cloned.setProduct(product.createOrRetrieveCopyInstance(context).getClone());
  }
  for (  Map.Entry<String,SkuAttribute> entry : skuAttributes.entrySet()) {
    SkuAttribute clonedEntry=entry.getValue().createOrRetrieveCopyInstance(context).getClone();
    cloned.getSkuAttributes().put(entry.getKey(),clonedEntry);
  }
  for (  SkuProductOptionValueXref entry : productOptionValueXrefs) {
    SkuProductOptionValueXref clonedEntry=entry.createOrRetrieveCopyInstance(context).getClone();
    cloned.getProductOptionValueXrefs().add(clonedEntry);
  }
  for (  Map.Entry<String,SkuMediaXref> entry : skuMedia.entrySet()) {
    SkuMediaXrefImpl clonedEntry=((SkuMediaXrefImpl)entry.getValue()).createOrRetrieveCopyInstance(context).getClone();
    cloned.getSkuMediaXref().put(entry.getKey(),clonedEntry);
  }
  for (  FulfillmentOption entry : excludedFulfillmentOptions) {
    FulfillmentOption clonedEntry=entry.createOrRetrieveCopyInstance(context).getClone();
    cloned.getExcludedFulfillmentOptions().add(clonedEntry);
  }
  for (  Map.Entry<FulfillmentOption,BigDecimal> entry : fulfillmentFlatRates.entrySet()) {
    FulfillmentOption clonedEntry=entry.getKey().createOrRetrieveCopyInstance(context).getClone();
    cloned.getFulfillmentFlatRates().put(clonedEntry,entry.getValue());
  }
  return createResponse;
}
