{
  Money returnPrice=null;
  if (SkuPricingConsiderationContext.hasDynamicPricing()) {
    if (dynamicPrices != null) {
      returnPrice=dynamicPrices.getSalePrice();
    }
 else {
      DefaultDynamicSkuPricingInvocationHandler handler=new DefaultDynamicSkuPricingInvocationHandler(this);
      Sku proxy=(Sku)Proxy.newProxyInstance(getClass().getClassLoader(),getClass().getInterfaces(),handler);
      dynamicPrices=SkuPricingConsiderationContext.getSkuPricingService().getSkuPrices(proxy,SkuPricingConsiderationContext.getSkuPricingConsiderationContext());
      returnPrice=dynamicPrices.getSalePrice();
    }
  }
 else {
    if (salePrice != null) {
      returnPrice=new Money(salePrice,Money.defaultCurrency());
    }
  }
  if (returnPrice == null && hasDefaultSku()) {
    returnPrice=lookupDefaultSku().getSalePrice();
  }
  Money optionValueAdjustments=null;
  if (dynamicPrices != null) {
    optionValueAdjustments=dynamicPrices.getPriceAdjustment();
  }
 else {
    optionValueAdjustments=getProductOptionValueAdjustments();
  }
  if (optionValueAdjustments == null) {
  }
 else {
    returnPrice=salePrice == null ? optionValueAdjustments : optionValueAdjustments.add(returnPrice);
  }
  return returnPrice;
}
