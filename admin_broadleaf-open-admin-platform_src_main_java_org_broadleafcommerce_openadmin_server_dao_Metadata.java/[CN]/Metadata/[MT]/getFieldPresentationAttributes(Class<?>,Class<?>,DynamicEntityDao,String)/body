{
  Map<String,FieldMetadata> attributes=new HashMap<String,FieldMetadata>();
  Field[] fields=dynamicEntityDao.getAllFields(targetClass);
  for (  Field field : fields) {
    AdminPresentation annot=field.getAnnotation(AdminPresentation.class);
    AdminPresentationCollection annotColl=field.getAnnotation(AdminPresentationCollection.class);
    AdminPresentationAdornedTargetCollection adornedTargetCollection=field.getAnnotation(AdminPresentationAdornedTargetCollection.class);
    AdminPresentationMap map=field.getAnnotation(AdminPresentationMap.class);
    FieldInfo info=buildFieldInfo(field);
    if (annot != null) {
      FieldMetadataOverride override=constructBasicMetadataOverride(annot,field.getAnnotation(AdminPresentationToOneLookup.class),field.getAnnotation(AdminPresentationDataDrivenEnumeration.class));
      buildBasicMetadata(parentClass,targetClass,attributes,info,override,dynamicEntityDao);
    }
 else     if (annotColl != null) {
      FieldMetadataOverride override=constructBasicCollectionMetadataOverride(annotColl);
      buildCollectionMetadata(parentClass,targetClass,attributes,info,override);
    }
 else     if (adornedTargetCollection != null) {
      FieldMetadataOverride override=constructAdornedTargetCollectionMetadataOverride(adornedTargetCollection);
      buildAdornedTargetCollectionMetadata(parentClass,targetClass,attributes,info,override,dynamicEntityDao);
    }
 else     if (map != null) {
      if (!ArrayUtils.isEmpty(map.mapDisplayFields())) {
        for (        AdminPresentationMapField mapField : map.mapDisplayFields()) {
          FieldMetadataOverride override=constructBasicMetadataOverride(mapField.fieldPresentation(),null,null);
          override.setFriendlyName(mapField.fieldName().friendlyKeyName());
          FieldInfo myInfo=new FieldInfo();
          myInfo.setName(field.getName() + "/" + mapField.fieldName().keyName());
          buildBasicMetadata(parentClass,targetClass,attributes,myInfo,override,dynamicEntityDao);
          setClassOwnership(parentClass,targetClass,attributes,myInfo);
        }
      }
      if (ArrayUtils.isEmpty(map.mapDisplayFields()) || map.allowMapFieldOverflowPresentation()) {
        FieldMetadataOverride override=constructMapMetadataOverride(map);
        buildMapMetadata(parentClass,targetClass,attributes,info,override,dynamicEntityDao,prefix);
      }
    }
 else {
      BasicFieldMetadata metadata=new BasicFieldMetadata();
      metadata.setName(field.getName());
      metadata.setExcluded(false);
      attributes.put(field.getName(),metadata);
    }
    setClassOwnership(parentClass,targetClass,attributes,info);
  }
  return attributes;
}
