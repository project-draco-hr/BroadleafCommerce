{
  AdminPresentationMapOverride override=presentationMapOverrides.get(propertyName);
  if (override != null) {
    AdminPresentationMap annot=override.value();
    if (annot != null) {
      String testKey=prefix + key;
      if ((testKey.startsWith(propertyName + ".") || testKey.equals(propertyName)) && annot.excluded()) {
        FieldMetadata metadata=mergedProperties.get(key);
        metadata.setExcluded(true);
        return;
      }
      if ((testKey.startsWith(propertyName + ".") || testKey.equals(propertyName)) && !annot.excluded()) {
        FieldMetadata metadata=mergedProperties.get(key);
        if (!isParentExcluded) {
          metadata.setExcluded(false);
        }
      }
      MapMetadata metadata=(MapMetadata)mergedProperties.get(key);
      metadata.setFriendlyName(annot.friendlyName());
      metadata.setSecurityLevel(annot.securityLevel());
      metadata.setMutable(!annot.readOnly());
      metadata.setOrder(annot.order());
      metadata.setTargetElementId(annot.targetUIElementId());
      metadata.setDataSourceName(annot.dataSourceName());
      metadata.setCustomCriteria(annot.customCriteria());
      if (!StringUtils.isEmpty(annot.configurationKey())) {
        metadata.getPersistencePerspective().setConfigurationKey(annot.configurationKey());
      }
      if (!void.class.equals(annot.keyClass())) {
        ((MapStructure)metadata.getPersistencePerspective().getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.MAPSTRUCTURE)).setKeyClassName(annot.keyClass().getName());
      }
      ((MapStructure)metadata.getPersistencePerspective().getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.MAPSTRUCTURE)).setKeyPropertyFriendlyName(annot.keyPropertyFriendlyName());
      if (!void.class.equals(annot.valueClass())) {
        ((MapStructure)metadata.getPersistencePerspective().getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.MAPSTRUCTURE)).setValueClassName(annot.valueClass().getName());
      }
      if (annot.isSimpleValue() != UnspecifiedBooleanType.UNSPECIFIED) {
        metadata.setSimpleValue(annot.isSimpleValue() == UnspecifiedBooleanType.TRUE);
      }
      if (metadata.isSimpleValue()) {
        ((MapStructure)metadata.getPersistencePerspective().getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.MAPSTRUCTURE)).setDeleteValueEntity(annot.deleteEntityUponRemove());
      }
      if (!metadata.isSimpleValue()) {
        ((SimpleValueMapStructure)metadata.getPersistencePerspective().getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.MAPSTRUCTURE)).setValuePropertyFriendlyName(annot.valuePropertyFriendlyName());
      }
      metadata.setMediaField(annot.mediaField());
      if (!ArrayUtils.isEmpty(annot.keys())) {
        String[][] keys=new String[annot.keys().length][2];
        int j=0;
        for (        AdminPresentationMapKey mapKey : annot.keys()) {
          keys[j][0]=mapKey.keyName();
          keys[j][1]=mapKey.friendlyKeyName();
          j++;
        }
        metadata.setKeys(keys);
      }
      if (!void.class.equals(annot.mapKeyOptionEntityClass())) {
        metadata.setMapKeyOptionEntityClass(annot.mapKeyOptionEntityClass().getName());
      }
      metadata.setMapKeyOptionEntityDisplayField(annot.mapKeyOptionEntityDisplayField());
      metadata.setMapKeyOptionEntityValueField(annot.mapKeyOptionEntityValueField());
    }
  }
}
