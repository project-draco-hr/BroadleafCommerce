{
  Boolean classAnnotatedPopulateManyToOneFields=null;
  for (int i=entities.length - 1; i >= 0; i--) {
    AdminPresentationClass adminPresentationClass=entities[i].getAnnotation(AdminPresentationClass.class);
    if (adminPresentationClass != null && adminPresentationClass.populateToOneFields() != PopulateToOneFieldsEnum.NOT_SPECIFIED) {
      classAnnotatedPopulateManyToOneFields=adminPresentationClass.populateToOneFields() == PopulateToOneFieldsEnum.TRUE;
      break;
    }
  }
  Map<String,FieldMetadata> mergedProperties=propertyBuilder.execute(classAnnotatedPopulateManyToOneFields);
  for (int i=entities.length - 1; i >= 0; i--) {
    boolean handled=false;
    for (    MetadataProvider metadataProvider : metadataProviders) {
      boolean response=metadataProvider.overrideViaAnnotation(new OverrideViaAnnotationRequest(entities[i],isParentExcluded,dynamicEntityDao,prefix),mergedProperties);
      if (response) {
        handled=true;
      }
    }
    if (!handled) {
      defaultMetadataProvider.overrideViaAnnotation(new OverrideViaAnnotationRequest(entities[i],isParentExcluded,dynamicEntityDao,prefix),mergedProperties);
    }
  }
  ((DefaultMetadataProvider)defaultMetadataProvider).overrideExclusionsFromXml(new OverrideViaXmlRequest(configurationKey,ceilingEntityFullyQualifiedClassname,prefix,isParentExcluded,dynamicEntityDao),mergedProperties);
  boolean handled=false;
  for (  MetadataProvider metadataProvider : metadataProviders) {
    boolean response=metadataProvider.overrideViaXml(new OverrideViaXmlRequest(configurationKey,ceilingEntityFullyQualifiedClassname,prefix,isParentExcluded,dynamicEntityDao),mergedProperties);
    if (response) {
      handled=true;
    }
  }
  if (!handled) {
    defaultMetadataProvider.overrideViaXml(new OverrideViaXmlRequest(configurationKey,ceilingEntityFullyQualifiedClassname,prefix,isParentExcluded,dynamicEntityDao),mergedProperties);
  }
  return mergedProperties;
}
