{
  Map<String,FieldMetadataOverride> overrides=getTargetedOverride(configurationKey,ceilingEntityFullyQualifiedClassname);
  if (overrides != null) {
    for (    String propertyName : overrides.keySet()) {
      final FieldMetadataOverride localMetadata=overrides.get(propertyName);
      for (      String key : mergedProperties.keySet()) {
        if (key.equals(propertyName)) {
          try {
            if (mergedProperties.get(key) instanceof AdornedTargetCollectionMetadata) {
              AdornedTargetCollectionMetadata serverMetadata=(AdornedTargetCollectionMetadata)mergedProperties.get(key);
              if (serverMetadata.getTargetClass() != null) {
                Class<?> targetClass=Class.forName(serverMetadata.getTargetClass());
                String fieldName=serverMetadata.getFieldName();
                Field field=dynamicEntityDao.getFieldManager().getField(targetClass,fieldName);
                Map<String,FieldMetadata> temp=new HashMap<String,FieldMetadata>(1);
                temp.put(field.getName(),serverMetadata);
                buildAdornedTargetCollectionMetadata(targetClass,temp,field,localMetadata);
                serverMetadata=(AdornedTargetCollectionMetadata)temp.get(field.getName());
                mergedProperties.put(key,serverMetadata);
                if (isParentExcluded) {
                  serverMetadata.setExcluded(true);
                }
              }
            }
          }
 catch (          Exception e) {
            throw new RuntimeException(e);
          }
        }
      }
    }
  }
}
