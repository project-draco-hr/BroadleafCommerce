{
  Order order=context.getSeedData().getOrder();
  for (  OrderPayment payment : order.getPayments()) {
    for (    PaymentTransaction tx : payment.getTransactions()) {
      if (!tx.getConfirmed()) {
        if (paymentGatewayConfiguration == null || paymentGatewayConfiguration.getTransactionConfirmationService() == null) {
          String msg="There are unconfirmed payment transactions on this payment but no payment gateway" + " configuration or transaction confirmation service configured";
          LOG.error(msg);
          throw new CheckoutException(msg,context.getSeedData());
        }
 else {
          PaymentResponseDTO response=paymentGatewayConfiguration.getTransactionConfirmationService().confirmTransaction(orderToPaymentRequestService.translatePaymentTransaction(tx.getAmount(),tx));
          if (response.isSuccessful()) {
          }
        }
      }
    }
  }
  Money paymentSum=new Money(BigDecimal.ZERO);
  for (  OrderPayment payment : order.getPayments()) {
    paymentSum=paymentSum.add(payment.getSuccessfulTransactionAmountForType(PaymentTransactionType.AUTHORIZE)).add(payment.getSuccessfulTransactionAmountForType(PaymentTransactionType.AUTHORIZE_AND_CAPTURE));
  }
  if (paymentSum.lessThan(order.getTotal())) {
    throw new IllegalArgumentException("There are not enough payments to pay for the total order. The sum of " + "the payments is " + paymentSum.getAmount().toPlainString() + " and the order total is "+ order.getTotal().getAmount().toPlainString());
  }
  return context;
}
