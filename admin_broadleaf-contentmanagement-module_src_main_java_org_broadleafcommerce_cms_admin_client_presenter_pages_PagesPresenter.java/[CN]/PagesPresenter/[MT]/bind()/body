{
  super.bind();
  getSaveButtonHandlerRegistration().removeHandler();
  formPresenter.getRefreshButtonHandlerRegistration().removeHandler();
  refreshButtonHandlerRegistration=getDisplay().getDynamicFormDisplay().getRefreshButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().getForm().reset();
      FormOnlyView legacyForm=(FormOnlyView)((FormOnlyView)getDisplay().getDynamicFormDisplay().getFormOnlyDisplay()).getMember("pageTemplateForm");
      if (legacyForm != null) {
        legacyForm.getForm().reset();
      }
      for (      FormItem formItem : legacyForm.getForm().getFields()) {
        if (formItem instanceof CanvasItem) {
          ((HTMLTextItem)formItem).setHTMLValue((legacyForm.getForm().getValue(formItem.getFieldName())) != null ? legacyForm.getForm().getValue(formItem.getFieldName()).toString() : "");
        }
      }
      getDisplay().getDynamicFormDisplay().getSaveButton().disable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().disable();
    }
  }
);
  saveButtonHandlerRegistration=getDisplay().getDynamicFormDisplay().getSaveButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        DSRequest requestProperties=new DSRequest();
        try {
          requestProperties.setAttribute("dirtyValues",getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().getForm().getChangedValues());
        }
 catch (        Exception e) {
          Logger.getLogger(this.getClass().toString()).log(Level.WARNING,"ignore, usually thown in gwt-run mode",e);
        }
        getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().getForm().saveData(new DSCallback(){
          @Override public void execute(          DSResponse response,          Object rawData,          DSRequest request){
            if (response.getStatus() != RPCResponse.STATUS_FAILURE) {
              final String newId=response.getAttribute("newId");
              FormOnlyView legacyForm=(FormOnlyView)((FormOnlyView)getDisplay().getDynamicFormDisplay().getFormOnlyDisplay()).getMember("pageTemplateForm");
              final DynamicForm form=legacyForm.getForm();
              for (              FormItem formItem : form.getFields()) {
                if (formItem instanceof HTMLTextItem) {
                  form.setValue(formItem.getFieldName(),((HTMLTextItem)formItem).getHTMLValue());
                }
              }
              PageTemplateFormListDataSource dataSource=(PageTemplateFormListDataSource)form.getDataSource();
              dataSource.setCustomCriteria(new String[]{"constructForm",newId});
              form.saveData(new DSCallback(){
                @Override public void execute(                DSResponse response,                Object rawData,                DSRequest request){
                  if (response.getStatus() != RPCResponse.STATUS_FAILURE) {
                    getDisplay().getDynamicFormDisplay().getSaveButton().disable();
                    getDisplay().getDynamicFormDisplay().getRefreshButton().disable();
                    if (!currentPageId.equals(newId)) {
                      Record myRecord=getDisplay().getListDisplay().getGrid().getResultSet().find("id",currentPageId);
                      if (myRecord != null) {
                        myRecord.setAttribute("id",newId);
                        currentPageRecord=myRecord;
                        currentPageId=newId;
                      }
 else {
                        String primaryKey=getDisplay().getListDisplay().getGrid().getDataSource().getPrimaryKeyFieldName();
                        getDisplay().getListDisplay().getGrid().getDataSource().fetchData(new Criteria(primaryKey,newId),new DSCallback(){
                          @Override public void execute(                          DSResponse response,                          Object rawData,                          DSRequest request){
                            getDisplay().getListDisplay().getGrid().clearCriteria();
                            getDisplay().getListDisplay().getGrid().setData(response.getData());
                            getDisplay().getListDisplay().getGrid().selectRecord(0);
                          }
                        }
);
                        SC.say(BLCMain.getMessageManager().getString("criteriaDoesNotMatch"));
                      }
                    }
                    getDisplay().getListDisplay().getGrid().selectRecord(getDisplay().getListDisplay().getGrid().getRecordIndex(currentPageRecord));
                  }
                }
              }
);
            }
          }
        }
,requestProperties);
      }
    }
  }
);
  display.getListDisplay().getGrid().addFetchDataHandler(new FetchDataHandler(){
    @Override public void onFilterData(    FetchDataEvent event){
      destroyTemplateForm();
    }
  }
);
}
