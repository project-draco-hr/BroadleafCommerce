{
  PaymentResponseDTO responseDTO=new PaymentResponseDTO(PaymentType.CREDIT_CARD).rawResponse(webResponsePrintService.printRequest(request));
  Map<String,String[]> paramMap=request.getParameterMap();
  Money amount=Money.ZERO;
  if (paramMap.containsKey(NullPaymentGatewayConstants.TRANSACTION_AMT)) {
    String amt=paramMap.get(NullPaymentGatewayConstants.TRANSACTION_AMT)[0];
    amount=new Money(amt);
  }
  boolean approved=false;
  if (paramMap.containsKey(NullPaymentGatewayConstants.RESULT_SUCCESS)) {
    String[] msg=paramMap.get(NullPaymentGatewayConstants.RESULT_SUCCESS);
    if (ArrayUtils.contains(msg,"true")) {
      approved=true;
    }
  }
  PaymentTransactionType type=PaymentTransactionType.AUTHORIZE_AND_CAPTURE;
  if (!configurationService.isPerformAuthorizeAndCapture()) {
    type=PaymentTransactionType.AUTHORIZE;
  }
  responseDTO.successful(approved).amount(amount).paymentTransactionType(type).orderId(paramMap.get(NullPaymentGatewayConstants.ORDER_ID)[0]).responseMap(NullPaymentGatewayConstants.RESULT_MESSAGE,paramMap.get(NullPaymentGatewayConstants.RESULT_MESSAGE)[0]).creditCard().creditCardHolderName(paramMap.get(NullPaymentGatewayConstants.CREDIT_CARD_NAME)[0]).creditCardLastFour(paramMap.get(NullPaymentGatewayConstants.CREDIT_CARD_LAST_FOUR)[0]).creditCardType(paramMap.get(NullPaymentGatewayConstants.CREDIT_CARD_TYPE)[0]).creditCardExpDate(paramMap.get(NullPaymentGatewayConstants.CREDIT_CARD_EXP_DATE)[0]).done();
  return responseDTO;
}
