{
  if (addMetadataFromFieldTypeRequest.getPresentationAttribute() != null) {
    if (addMetadataFromFieldTypeRequest.getExplicitType() != null && addMetadataFromFieldTypeRequest.getExplicitType() != SupportedFieldType.UNKNOWN && addMetadataFromFieldTypeRequest.getExplicitType() != SupportedFieldType.BOOLEAN && addMetadataFromFieldTypeRequest.getExplicitType() != SupportedFieldType.INTEGER && addMetadataFromFieldTypeRequest.getExplicitType() != SupportedFieldType.DATE && addMetadataFromFieldTypeRequest.getExplicitType() != SupportedFieldType.STRING && addMetadataFromFieldTypeRequest.getExplicitType() != SupportedFieldType.MONEY && addMetadataFromFieldTypeRequest.getExplicitType() != SupportedFieldType.DECIMAL && addMetadataFromFieldTypeRequest.getExplicitType() != SupportedFieldType.FOREIGN_KEY && addMetadataFromFieldTypeRequest.getExplicitType() != SupportedFieldType.ADDITIONAL_FOREIGN_KEY) {
      metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),addMetadataFromFieldTypeRequest.getExplicitType(),addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
    }
 else     if (addMetadataFromFieldTypeRequest.getExplicitType() != null && addMetadataFromFieldTypeRequest.getExplicitType() == SupportedFieldType.BOOLEAN || addMetadataFromFieldTypeRequest.getReturnedClass().equals(Boolean.class) || addMetadataFromFieldTypeRequest.getReturnedClass().equals(Character.class)) {
      metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.BOOLEAN,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
    }
 else     if (addMetadataFromFieldTypeRequest.getExplicitType() != null && addMetadataFromFieldTypeRequest.getExplicitType() == SupportedFieldType.INTEGER || addMetadataFromFieldTypeRequest.getReturnedClass().equals(Byte.class) || addMetadataFromFieldTypeRequest.getReturnedClass().equals(Short.class) || addMetadataFromFieldTypeRequest.getReturnedClass().equals(Integer.class) || addMetadataFromFieldTypeRequest.getReturnedClass().equals(Long.class)) {
      if (addMetadataFromFieldTypeRequest.getRequestedPropertyName().equals(addMetadataFromFieldTypeRequest.getIdProperty())) {
        metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.ID,SupportedFieldType.INTEGER,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
      }
 else {
        metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.INTEGER,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
      }
    }
 else     if (addMetadataFromFieldTypeRequest.getExplicitType() != null && addMetadataFromFieldTypeRequest.getExplicitType() == SupportedFieldType.DATE || addMetadataFromFieldTypeRequest.getReturnedClass().equals(Calendar.class) || addMetadataFromFieldTypeRequest.getReturnedClass().equals(Date.class) || addMetadataFromFieldTypeRequest.getReturnedClass().equals(Timestamp.class)) {
      metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.DATE,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
    }
 else     if (addMetadataFromFieldTypeRequest.getExplicitType() != null && addMetadataFromFieldTypeRequest.getExplicitType() == SupportedFieldType.STRING || addMetadataFromFieldTypeRequest.getReturnedClass().equals(String.class)) {
      if (addMetadataFromFieldTypeRequest.getRequestedPropertyName().equals(addMetadataFromFieldTypeRequest.getIdProperty())) {
        metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.ID,SupportedFieldType.STRING,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
      }
 else {
        metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.STRING,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
      }
    }
 else     if (addMetadataFromFieldTypeRequest.getExplicitType() != null && addMetadataFromFieldTypeRequest.getExplicitType() == SupportedFieldType.MONEY || addMetadataFromFieldTypeRequest.getReturnedClass().equals(Money.class)) {
      metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.MONEY,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
    }
 else     if (addMetadataFromFieldTypeRequest.getExplicitType() != null && addMetadataFromFieldTypeRequest.getExplicitType() == SupportedFieldType.DECIMAL || addMetadataFromFieldTypeRequest.getReturnedClass().equals(Double.class) || addMetadataFromFieldTypeRequest.getReturnedClass().equals(BigDecimal.class)) {
      metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.DECIMAL,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
    }
 else     if (addMetadataFromFieldTypeRequest.getExplicitType() != null && addMetadataFromFieldTypeRequest.getExplicitType() == SupportedFieldType.FOREIGN_KEY || addMetadataFromFieldTypeRequest.getForeignField() != null && addMetadataFromFieldTypeRequest.isPropertyForeignKey()) {
      ClassMetadata foreignMetadata;
      String foreignKeyClass;
      String lookupDisplayProperty;
      if (addMetadataFromFieldTypeRequest.getForeignField() == null) {
        Class<?>[] entities=addMetadataFromFieldTypeRequest.getDynamicEntityDao().getAllPolymorphicEntitiesFromCeiling(addMetadataFromFieldTypeRequest.getType().getReturnedClass());
        foreignMetadata=addMetadataFromFieldTypeRequest.getDynamicEntityDao().getSessionFactory().getClassMetadata(entities[entities.length - 1]);
        foreignKeyClass=entities[entities.length - 1].getName();
        lookupDisplayProperty=((BasicFieldMetadata)addMetadataFromFieldTypeRequest.getPresentationAttribute()).getLookupDisplayProperty();
        if (StringUtils.isEmpty(lookupDisplayProperty) && AdminMainEntity.class.isAssignableFrom(entities[entities.length - 1])) {
          lookupDisplayProperty=AdminMainEntity.MAIN_ENTITY_NAME_PROPERTY;
        }
        if (StringUtils.isEmpty(lookupDisplayProperty)) {
          lookupDisplayProperty="name";
        }
      }
 else {
        try {
          foreignMetadata=addMetadataFromFieldTypeRequest.getDynamicEntityDao().getSessionFactory().getClassMetadata(Class.forName(addMetadataFromFieldTypeRequest.getForeignField().getForeignKeyClass()));
          foreignKeyClass=addMetadataFromFieldTypeRequest.getForeignField().getForeignKeyClass();
          lookupDisplayProperty=addMetadataFromFieldTypeRequest.getForeignField().getDisplayValueProperty();
          if (StringUtils.isEmpty(lookupDisplayProperty) && AdminMainEntity.class.isAssignableFrom(Class.forName(foreignKeyClass))) {
            lookupDisplayProperty=AdminMainEntity.MAIN_ENTITY_NAME_PROPERTY;
          }
          if (StringUtils.isEmpty(lookupDisplayProperty)) {
            lookupDisplayProperty="name";
          }
        }
 catch (        ClassNotFoundException e) {
          throw new RuntimeException(e);
        }
      }
      Class<?> foreignResponseType=foreignMetadata.getIdentifierType().getReturnedClass();
      if (foreignResponseType.equals(String.class)) {
        metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.FOREIGN_KEY,SupportedFieldType.STRING,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
      }
 else {
        metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.FOREIGN_KEY,SupportedFieldType.INTEGER,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
      }
      ((BasicFieldMetadata)metadata.get(addMetadataFromFieldTypeRequest.getRequestedPropertyName())).setForeignKeyProperty(foreignMetadata.getIdentifierPropertyName());
      ((BasicFieldMetadata)metadata.get(addMetadataFromFieldTypeRequest.getRequestedPropertyName())).setForeignKeyClass(foreignKeyClass);
      ((BasicFieldMetadata)metadata.get(addMetadataFromFieldTypeRequest.getRequestedPropertyName())).setForeignKeyDisplayValueProperty(lookupDisplayProperty);
    }
 else     if (addMetadataFromFieldTypeRequest.getExplicitType() != null && addMetadataFromFieldTypeRequest.getExplicitType() == SupportedFieldType.ADDITIONAL_FOREIGN_KEY || addMetadataFromFieldTypeRequest.getAdditionalForeignFields() != null && addMetadataFromFieldTypeRequest.getAdditionalForeignKeyIndexPosition() >= 0) {
      if (!addMetadataFromFieldTypeRequest.getType().isEntityType()) {
        throw new IllegalArgumentException("Only ManyToOne and OneToOne fields can be marked as a " + "SupportedFieldType of ADDITIONAL_FOREIGN_KEY");
      }
      ClassMetadata foreignMetadata;
      String foreignKeyClass;
      String lookupDisplayProperty;
      if (addMetadataFromFieldTypeRequest.getAdditionalForeignKeyIndexPosition() < 0) {
        Class<?>[] entities=addMetadataFromFieldTypeRequest.getDynamicEntityDao().getAllPolymorphicEntitiesFromCeiling(addMetadataFromFieldTypeRequest.getType().getReturnedClass());
        foreignMetadata=addMetadataFromFieldTypeRequest.getDynamicEntityDao().getSessionFactory().getClassMetadata(entities[entities.length - 1]);
        foreignKeyClass=entities[entities.length - 1].getName();
        lookupDisplayProperty=((BasicFieldMetadata)addMetadataFromFieldTypeRequest.getPresentationAttribute()).getLookupDisplayProperty();
        if (StringUtils.isEmpty(lookupDisplayProperty) && AdminMainEntity.class.isAssignableFrom(entities[entities.length - 1])) {
          lookupDisplayProperty=AdminMainEntity.MAIN_ENTITY_NAME_PROPERTY;
        }
        if (StringUtils.isEmpty(lookupDisplayProperty)) {
          lookupDisplayProperty="name";
        }
      }
 else {
        try {
          foreignMetadata=addMetadataFromFieldTypeRequest.getDynamicEntityDao().getSessionFactory().getClassMetadata(Class.forName(addMetadataFromFieldTypeRequest.getAdditionalForeignFields()[addMetadataFromFieldTypeRequest.getAdditionalForeignKeyIndexPosition()].getForeignKeyClass()));
          foreignKeyClass=addMetadataFromFieldTypeRequest.getAdditionalForeignFields()[addMetadataFromFieldTypeRequest.getAdditionalForeignKeyIndexPosition()].getForeignKeyClass();
          lookupDisplayProperty=addMetadataFromFieldTypeRequest.getAdditionalForeignFields()[addMetadataFromFieldTypeRequest.getAdditionalForeignKeyIndexPosition()].getDisplayValueProperty();
          if (StringUtils.isEmpty(lookupDisplayProperty) && AdminMainEntity.class.isAssignableFrom(Class.forName(foreignKeyClass))) {
            lookupDisplayProperty=AdminMainEntity.MAIN_ENTITY_NAME_PROPERTY;
          }
          if (StringUtils.isEmpty(lookupDisplayProperty)) {
            lookupDisplayProperty="name";
          }
        }
 catch (        ClassNotFoundException e) {
          throw new RuntimeException(e);
        }
      }
      Class<?> foreignResponseType=foreignMetadata.getIdentifierType().getReturnedClass();
      if (foreignResponseType.equals(String.class)) {
        metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.ADDITIONAL_FOREIGN_KEY,SupportedFieldType.STRING,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
      }
 else {
        metadata.put(addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getDynamicEntityDao().getMetadata().getFieldMetadata(addMetadataFromFieldTypeRequest.getPrefix(),addMetadataFromFieldTypeRequest.getRequestedPropertyName(),addMetadataFromFieldTypeRequest.getComponentProperties(),SupportedFieldType.ADDITIONAL_FOREIGN_KEY,SupportedFieldType.INTEGER,addMetadataFromFieldTypeRequest.getType(),addMetadataFromFieldTypeRequest.getTargetClass(),addMetadataFromFieldTypeRequest.getPresentationAttribute(),addMetadataFromFieldTypeRequest.getMergedPropertyType(),addMetadataFromFieldTypeRequest.getDynamicEntityDao()));
      }
      ((BasicFieldMetadata)metadata.get(addMetadataFromFieldTypeRequest.getRequestedPropertyName())).setForeignKeyProperty(foreignMetadata.getIdentifierPropertyName());
      ((BasicFieldMetadata)metadata.get(addMetadataFromFieldTypeRequest.getRequestedPropertyName())).setForeignKeyClass(foreignKeyClass);
      ((BasicFieldMetadata)metadata.get(addMetadataFromFieldTypeRequest.getRequestedPropertyName())).setForeignKeyDisplayValueProperty(lookupDisplayProperty);
    }
    return FieldProviderResponse.HANDLED;
  }
  return FieldProviderResponse.NOT_HANDLED;
}
