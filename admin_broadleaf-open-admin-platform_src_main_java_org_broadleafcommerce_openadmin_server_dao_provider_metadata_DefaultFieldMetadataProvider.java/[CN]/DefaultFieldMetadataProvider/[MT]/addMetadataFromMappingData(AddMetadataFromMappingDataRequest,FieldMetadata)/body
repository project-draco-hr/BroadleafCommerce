{
  BasicFieldMetadata fieldMetadata=(BasicFieldMetadata)metadata;
  fieldMetadata.setFieldType(addMetadataFromMappingDataRequest.getType());
  fieldMetadata.setSecondaryType(addMetadataFromMappingDataRequest.getSecondaryType());
  if (addMetadataFromMappingDataRequest.getRequestedEntityType() != null && !addMetadataFromMappingDataRequest.getRequestedEntityType().isCollectionType()) {
    Column column=null;
    for (    Property property : addMetadataFromMappingDataRequest.getComponentProperties()) {
      if (property.getName().equals(addMetadataFromMappingDataRequest.getPropertyName())) {
        Object columnObject=property.getColumnIterator().next();
        if (columnObject instanceof Column) {
          column=(Column)columnObject;
        }
        break;
      }
    }
    if (column != null) {
      fieldMetadata.setLength(column.getLength());
      fieldMetadata.setScale(column.getScale());
      fieldMetadata.setPrecision(column.getPrecision());
      fieldMetadata.setRequired(!column.isNullable());
      fieldMetadata.setUnique(column.isUnique());
    }
    fieldMetadata.setForeignKeyCollection(false);
  }
 else {
    fieldMetadata.setForeignKeyCollection(true);
  }
  fieldMetadata.setMutable(true);
  fieldMetadata.setMergedPropertyType(addMetadataFromMappingDataRequest.getMergedPropertyType());
  if (SupportedFieldType.BROADLEAF_ENUMERATION.equals(addMetadataFromMappingDataRequest.getType())) {
    try {
      setupBroadleafEnumeration(fieldMetadata.getBroadleafEnumeration(),fieldMetadata,addMetadataFromMappingDataRequest.getDynamicEntityDao());
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
  return FieldProviderResponse.HANDLED;
}
