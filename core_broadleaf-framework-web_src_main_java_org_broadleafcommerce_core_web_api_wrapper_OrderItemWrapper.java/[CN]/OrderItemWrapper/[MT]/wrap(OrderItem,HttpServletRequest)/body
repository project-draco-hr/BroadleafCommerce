{
  this.id=model.getId();
  this.name=model.getName();
  this.quantity=model.getQuantity();
  this.retailPrice=model.getRetailPrice();
  this.salePrice=model.getSalePrice();
  if (model.getCategory() != null) {
    CategoryWrapper categoryWrapper=(CategoryWrapper)context.getBean(CategoryWrapper.class.getName());
    categoryWrapper.wrap(model.getCategory(),request);
    this.category=categoryWrapper;
  }
  this.orderId=model.getOrder().getId();
  Map<String,OrderItemAttribute> itemAttributes=model.getOrderItemAttributes();
  if (itemAttributes != null && !itemAttributes.isEmpty()) {
    this.orderItemAttributes=new ArrayList<OrderItemAttributeWrapper>();
    Set<String> keys=itemAttributes.keySet();
    for (    String key : keys) {
      OrderItemAttributeWrapper orderItemAttributeWrapper=(OrderItemAttributeWrapper)context.getBean(OrderItemAttributeWrapper.class.getName());
      orderItemAttributeWrapper.wrap(itemAttributes.get(key),request);
      this.orderItemAttributes.add(orderItemAttributeWrapper);
    }
  }
  if (!model.getOrderItemPriceDetails().isEmpty()) {
    for (    OrderItemPriceDetail orderItemPriceDetail : model.getOrderItemPriceDetails()) {
      OrderItemPriceDetailWrapper orderItemPriceDetailWrapper=(OrderItemPriceDetailWrapper)context.getBean(OrderItemPriceDetailWrapper.class.getName());
      orderItemPriceDetailWrapper.wrap(orderItemPriceDetail,request);
      this.orderItemPriceDetails.add(orderItemPriceDetailWrapper);
    }
  }
  if (model instanceof DiscreteOrderItem) {
    DiscreteOrderItem doi=(DiscreteOrderItem)model;
    SkuWrapper skuWrapper=(SkuWrapper)context.getBean(SkuWrapper.class.getName());
    skuWrapper.wrap(doi.getSku(),request);
    this.sku=skuWrapper;
    ProductWrapper productWrapper=(ProductWrapper)context.getBean(ProductWrapper.class.getName());
    productWrapper.wrap(doi.getProduct(),request);
    this.product=productWrapper;
  }
}
