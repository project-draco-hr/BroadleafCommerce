{
  StructuredContent structuredContent=(StructuredContent)root;
  Map<String,StructuredContentFieldXref> structuredContentFieldMap=structuredContent.getStructuredContentFieldXrefs();
  Entity entity=new Entity();
  entity.setType(new String[]{StructuredContentType.class.getName()});
  List<Property> propertiesList=new ArrayList<Property>();
  for (  FieldGroup fieldGroup : structuredContent.getStructuredContentType().getStructuredContentFieldTemplate().getFieldGroups()) {
    for (    FieldDefinition def : fieldGroup.getFieldDefinitions()) {
      Property property=new Property();
      property.setName(def.getName());
      String value=null;
      if (!MapUtils.isEmpty(structuredContentFieldMap)) {
        StructuredContentFieldXref structuredContentFieldXref=structuredContentFieldMap.get(def.getName());
        if (structuredContentFieldXref != null) {
          StructuredContentField structuredContentField=structuredContentFieldXref.getStructuredContentField();
          if (structuredContentField != null) {
            value=structuredContentField.getValue();
          }
        }
      }
      property.setValue(value);
      if (!CollectionUtils.isEmpty(dirtyFields) && dirtyFields.contains(property.getName())) {
        property.setIsDirty(true);
      }
      propertiesList.add(property);
    }
  }
  if (includeId) {
    Property property=new Property();
    propertiesList.add(property);
    property.setName("id");
    property.setValue(String.valueOf(structuredContent.getId()));
  }
  entity.setProperties(propertiesList.toArray(new Property[]{}));
  return entity;
}
