{
  String collectionField="additionalSkus";
  String mainClassName=getClassNameForSection(SECTION_KEY);
  ClassMetadata mainMetadata=service.getClassMetadata(getSectionPersistencePackageRequest(mainClassName));
  Property collectionProperty=mainMetadata.getPMap().get(collectionField);
  FieldMetadata md=collectionProperty.getMetadata();
  PersistencePackageRequest ppr=PersistencePackageRequest.fromMetadata(md);
  ClassMetadata collectionMetadata=service.getClassMetadata(ppr);
  if (collectionMetadata.getCeilingType().equals(SkuImpl.class.getName())) {
    collectionMetadata.setCeilingType(Sku.class.getName());
  }
  Entity entity=service.getRecord(ppr,collectionItemId,collectionMetadata,true);
  Map<String,DynamicResultSet> subRecordsMap=service.getRecordsForAllSubCollections(ppr,entity);
  EntityForm entityForm=formService.createEntityForm(collectionMetadata,entity,subRecordsMap);
  entityForm.removeAction(DefaultEntityFormActions.DELETE);
  for (  ListGrid lg : entityForm.getAllListGrids()) {
    lg.setSectionKey("org.broadleafcommerce.core.catalog.domain.Sku");
  }
  removeRequiredValidation(entityForm);
  model.addAttribute("entityForm",entityForm);
  model.addAttribute("viewType","modal/simpleEditEntity");
  model.addAttribute("currentUrl",request.getRequestURL().toString());
  model.addAttribute("modalHeaderType","updateCollectionItem");
  model.addAttribute("collectionProperty",collectionProperty);
  setModelAttributes(model,SECTION_KEY);
  return "modules/modalContainer";
}
