{
  String collectionField="additionalSkus";
  String mainClassName=getClassNameForSection(SECTION_KEY);
  List<SectionCrumb> sectionCrumbs=getSectionCrumbs(request,SECTION_KEY,id);
  ClassMetadata mainMetadata=service.getClassMetadata(getSectionPersistencePackageRequest(mainClassName,sectionCrumbs,pathVars)).getDynamicResultSet().getClassMetaData();
  Property collectionProperty=mainMetadata.getPMap().get(collectionField);
  FieldMetadata md=collectionProperty.getMetadata();
  PersistencePackageRequest ppr=PersistencePackageRequest.fromMetadata(md,sectionCrumbs).withCustomCriteria(new String[]{id});
  ClassMetadata collectionMetadata=service.getClassMetadata(ppr).getDynamicResultSet().getClassMetaData();
  if (collectionMetadata.getCeilingType().equals(SkuImpl.class.getName())) {
    collectionMetadata.setCeilingType(Sku.class.getName());
  }
  Entity entity=service.getRecord(ppr,collectionItemId,collectionMetadata,true).getDynamicResultSet().getRecords()[0];
  Map<String,DynamicResultSet> subRecordsMap=service.getRecordsForAllSubCollections(ppr,entity,sectionCrumbs);
  if (entityForm == null) {
    entityForm=formService.createEntityForm(collectionMetadata,entity,subRecordsMap,sectionCrumbs);
  }
 else {
    entityForm.clearFieldsMap();
    formService.populateEntityForm(collectionMetadata,entity,subRecordsMap,entityForm,sectionCrumbs);
    entityForm.removeAllActions();
  }
  entityForm.removeAction(DefaultEntityFormActions.DELETE);
  for (  ListGrid lg : entityForm.getAllListGrids()) {
    lg.setSectionKey("org.broadleafcommerce.core.catalog.domain.Sku");
    lg.setSectionCrumbs(sectionCrumbs);
  }
  model.addAttribute("entityForm",entityForm);
  model.addAttribute("viewType","modal/simpleEditEntity");
  model.addAttribute("currentUrl",request.getRequestURL().toString());
  model.addAttribute("modalHeaderType","updateCollectionItem");
  model.addAttribute("collectionProperty",collectionProperty);
  setModelAttributes(model,SECTION_KEY);
  return "modules/modalContainer";
}
