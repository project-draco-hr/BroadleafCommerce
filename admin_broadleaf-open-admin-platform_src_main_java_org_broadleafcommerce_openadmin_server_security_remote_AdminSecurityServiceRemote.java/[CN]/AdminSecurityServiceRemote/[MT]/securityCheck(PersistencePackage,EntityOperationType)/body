{
  Set<String> ceilingNames=new HashSet<String>();
  ceilingNames.add(persistencePackage.getSecurityCeilingEntityFullyQualifiedClassname());
  if (!ArrayUtils.isEmpty(persistencePackage.getSectionCrumbs())) {
    ceilingNames.addAll(CollectionUtils.transform(Arrays.asList(persistencePackage.getSectionCrumbs()),new Transformer(){
      @Override public Object transform(      Object o){
        return ((SectionCrumb)o).getSectionIdentifier();
      }
    }
));
  }
  Entity entity=persistencePackage.getEntity();
  GlobalValidationResult globalValidationResult=null;
  if (operationType.equals(EntityOperationType.UPDATE)) {
    globalValidationResult=rowLevelSecurityService.validateUpdateRequest(getPersistentAdminUser(),entity,persistencePackage);
  }
 else   if (operationType.equals(EntityOperationType.REMOVE)) {
    globalValidationResult=rowLevelSecurityService.validateRemoveRequest(getPersistentAdminUser(),entity,persistencePackage);
  }
  if (globalValidationResult != null) {
    if (!globalValidationResult.isValid()) {
      if (StringUtils.isEmpty(globalValidationResult.getErrorMessage())) {
        entity.addGlobalValidationError("rowLevelSecurityFailed");
      }
 else {
        entity.addGlobalValidationErrors(globalValidationResult.getErrorMessages());
      }
      throw new ValidationException(entity,"Row level security check failed for " + operationType);
    }
  }
  securityCheck(ceilingNames.toArray(new String[ceilingNames.size()]),operationType);
}
