{
  if (fieldNames.length > 0) {
    resetProminenceOnly(fieldNames);
  }
  String[] sortedFieldNames=new String[fieldNames.length];
  for (int j=0; j < fieldNames.length; j++) {
    sortedFieldNames[j]=fieldNames[j];
  }
  Arrays.sort(sortedFieldNames);
  DataSourceField[] fields=getFields();
  int j=0;
  List<DataSourceField> prominentFields=new ArrayList<DataSourceField>();
  for (  DataSourceField field : fields) {
    if (field.getAttributeAsBoolean("prominent")) {
      prominentFields.add(field);
    }
  }
  int availableSlots=fieldNames.length == 0 ? 4 : fieldNames.length;
  DetailViewerField[] gridFields=new DetailViewerField[availableSlots];
  for (  DataSourceField field : prominentFields) {
    gridFields[j]=new DetailViewerField(field.getName(),field.getTitle());
    if (field.getType().equals(FieldType.IMAGE)) {
      gridFields[j].setImageURLPrefix("");
    }
    j++;
    availableSlots--;
  }
  for (  DataSourceField field : fields) {
    if (!prominentFields.contains(field) && availableSlots > 0) {
      gridFields[j]=new DetailViewerField(field.getName(),field.getTitle());
      if (field.getType().equals(FieldType.IMAGE)) {
        gridFields[j].setImageURLPrefix("");
      }
      availableSlots--;
    }
  }
  ((TileGrid)getAssociatedGrid()).setFields(gridFields);
}
