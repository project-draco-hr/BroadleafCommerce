{
  List<String> mapFieldKeys=new ArrayList<String>();
  String mapProperty=mapStructure.getMapProperty();
  for (  Map.Entry<String,FieldMetadata> entry : ceilingMergedProperties.entrySet()) {
    if (entry.getKey().startsWith(mapProperty + FieldManager.MAPFIELDSEPARATOR)) {
      mapFieldKeys.add(entry.getKey().substring(entry.getKey().indexOf(FieldManager.MAPFIELDSEPARATOR) + FieldManager.MAPFIELDSEPARATOR.length(),entry.getKey().length()));
    }
  }
  Collections.sort(mapFieldKeys);
  FieldManager fieldManager=getFieldManager();
  Map map;
  try {
    map=(Map)fieldManager.getFieldValue(record,mapProperty);
  }
 catch (  FieldNotAvailableException e) {
    throw new IllegalArgumentException(e);
  }
  List<Entity> entities=new ArrayList<Entity>(map.size());
  for (  Object key : map.keySet()) {
    if (key instanceof String && mapFieldKeys.contains(key)) {
      continue;
    }
    entities.add(getMapRecord(record.getClass().getName(),(Serializable)map.get(key),mapStructure,valueMergedProperties,symbolicIdProperty,key));
  }
  return entities.toArray(new Entity[entities.size()]);
}
