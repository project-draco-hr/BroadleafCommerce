{
  Entity entityItem=new Entity();
  entityItem.setType(new String[]{ceilingClass});
  List<Property> props=new ArrayList<Property>();
  Property propertyItem=new Property();
  propertyItem.setName(mapStructure.getKeyPropertyName());
  props.add(propertyItem);
  String strVal;
  if (Date.class.isAssignableFrom(key.getClass())) {
    strVal=getSimpleDateFormatter().format((Date)key);
  }
 else   if (Timestamp.class.isAssignableFrom(key.getClass())) {
    strVal=getSimpleDateFormatter().format(new Date(((Timestamp)key).getTime()));
  }
 else   if (Calendar.class.isAssignableFrom(key.getClass())) {
    strVal=getSimpleDateFormatter().format(((Calendar)key).getTime());
  }
 else   if (Double.class.isAssignableFrom(key.getClass())) {
    strVal=getDecimalFormatter().format(key);
  }
 else   if (BigDecimal.class.isAssignableFrom(key.getClass())) {
    strVal=getDecimalFormatter().format(key);
  }
 else {
    strVal=key.toString();
  }
  propertyItem.setValue(strVal);
  extractPropertiesFromPersistentEntity(valueMergedProperties,valueInstance,props);
  if (symbolicIdProperty != null) {
    props.add(symbolicIdProperty);
  }
  Property[] properties=new Property[props.size()];
  properties=props.toArray(properties);
  entityItem.setProperties(properties);
  return entityItem;
}
