{
  BLCOperator operator=null;
  if (dataDTO instanceof ExpressionDTO) {
    operator=BLCOperator.valueOf(((ExpressionDTO)dataDTO).getOperator());
  }
 else {
    operator=BLCOperator.valueOf(dataDTO.getGroupOperator());
  }
  ArrayList<DataDTO> groups=dataDTO.getGroups();
  if (sb.length() != 0 && sb.charAt(sb.length() - 1) != '(' && groupOperator != null) {
    BLCOperator groupOp=BLCOperator.valueOf(groupOperator);
switch (groupOp) {
default :
      sb.append("&&");
    break;
case OR:
  sb.append("||");
}
}
if (dataDTO instanceof ExpressionDTO) {
buildExpression((ExpressionDTO)dataDTO,sb,entityKey,operator,fieldService);
}
 else {
boolean includeTopLevelParenthesis=false;
if (sb.length() != 0 || BLCOperator.NOT.equals(operator)) {
includeTopLevelParenthesis=true;
}
if (BLCOperator.NOT.equals(operator)) {
sb.append("!");
}
if (includeTopLevelParenthesis) sb.append("(");
for (DataDTO dto : groups) {
buildMVEL(dto,sb,entityKey,dataDTO.getGroupOperator(),fieldService);
}
if (includeTopLevelParenthesis) sb.append(")");
}
}
