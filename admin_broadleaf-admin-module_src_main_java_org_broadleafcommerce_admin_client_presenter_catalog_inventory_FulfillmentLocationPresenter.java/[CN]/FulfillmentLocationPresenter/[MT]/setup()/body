{
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("fulfillmentLocationDS",new FulfillmentLocationDataSourceFactory(),new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource top){
      setupDisplayItems(top);
      ((ListGridDataSource)top).setupGridFields(new String[]{},new Boolean[]{});
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("inventoryDS",new InventoryDataSourceFactory(),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource result){
      inventoryPresenter=new InventoryPresenter(getDisplay().getInventoryDisplay(),BLCMain.getMessageManager().getString("newInventory"));
      inventoryPresenter.setDataSource((CustomCriteriaListGridDataSource)result,new String[]{"sku.id","sku.name","quantityAvailable","quantityOnHand"},new Boolean[]{false,false,false,false});
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("skuDS",new InventorySkuDataSourceFactory(),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource result){
      ListGridDataSource ds=(ListGridDataSource)result;
      ds.resetPermanentFieldVisibility("id","name","productOptionList");
      ds.getField("id").setAttribute("order",1);
      DynamicEntityDataSource dataSource=getPresenterSequenceSetupManager().getDataSource("inventoryDS");
      dataSource.getFormItemCallbackHandlerManager().addSearchFormItemCallback("sku",new EntitySearchDialog(ds),"Sku",null,null,null,dataSource);
    }
  }
));
}
