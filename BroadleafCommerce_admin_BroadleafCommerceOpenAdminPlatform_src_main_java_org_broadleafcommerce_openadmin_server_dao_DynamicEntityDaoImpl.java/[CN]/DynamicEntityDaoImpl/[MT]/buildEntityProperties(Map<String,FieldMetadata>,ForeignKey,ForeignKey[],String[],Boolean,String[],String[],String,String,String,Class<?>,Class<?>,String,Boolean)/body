{
  Class<?>[] polymorphicEntities=getAllPolymorphicEntitiesFromCeiling(returnedClass);
  Map<String,FieldMetadata> newFields=getMergedPropertiesRecursively(ceilingEntityFullyQualifiedClassname,polymorphicEntities,foreignField,additionalNonPersistentProperties,additionalForeignFields,MergedPropertyType.PRIMARY,populateManyToOneFields,includeFields,excludeFields,configurationKey,prefix + propertyName + ".",isParentExcluded);
  for (  FieldMetadata newMetadata : newFields.values()) {
    newMetadata.setInheritedFromType(targetClass.getName());
    newMetadata.setAvailableToTypes(new String[]{targetClass.getName()});
  }
  Map<String,FieldMetadata> convertedFields=new HashMap<String,FieldMetadata>();
  for (  String key : newFields.keySet()) {
    convertedFields.put(propertyName + "." + key,newFields.get(key));
  }
  fields.putAll(convertedFields);
}
