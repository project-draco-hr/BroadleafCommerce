{
  if (POLYMORPHIC_ENTITY_CACHE.get(ceilingClass) == null) {
    List<Class<?>> entities=new ArrayList<Class<?>>();
    for (    Object item : getSessionFactory().getAllClassMetadata().values()) {
      ClassMetadata metadata=(ClassMetadata)item;
      Class<?> mappedClass=metadata.getMappedClass(EntityMode.POJO);
      if (mappedClass != null && ceilingClass.isAssignableFrom(mappedClass)) {
        entities.add(mappedClass);
      }
    }
    Class<?>[] sortedEntities=new Class<?>[entities.size()];
    sortedEntities=entities.toArray(sortedEntities);
    Arrays.sort(sortedEntities,new Comparator<Class<?>>(){
      public int compare(      Class<?> o1,      Class<?> o2){
        if (o1.equals(o2)) {
          return 0;
        }
 else         if (o1.isAssignableFrom(o2)) {
          return 1;
        }
        return -1;
      }
    }
);
    POLYMORPHIC_ENTITY_CACHE.put(ceilingClass,sortedEntities);
  }
  return (Class<?>[])POLYMORPHIC_ENTITY_CACHE.get(ceilingClass);
}
