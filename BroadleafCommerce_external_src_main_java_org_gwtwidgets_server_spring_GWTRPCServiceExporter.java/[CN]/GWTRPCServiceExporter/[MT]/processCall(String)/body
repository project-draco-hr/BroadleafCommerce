{
  try {
    RPCRequest rpcRequest=RPC.decodeRequest(payload,null,this);
    onAfterRequestDeserialized(rpcRequest);
    Method targetMethod=getMethodToInvoke(rpcRequest.getMethod());
    Object[] targetParameters=rpcRequest.getParameters();
    try {
      return invokeMethodOnService(service,targetMethod,targetParameters,rpcRequest);
    }
 catch (    IllegalArgumentException e) {
      return handleIllegalArgumentException(e,service,targetMethod,rpcRequest);
    }
catch (    IllegalAccessException e) {
      return handleIllegalAccessException(e,service,targetMethod,rpcRequest);
    }
catch (    InvocationTargetException e) {
      return handleInvocationTargetException(e,service,targetMethod,rpcRequest);
    }
catch (    UndeclaredThrowableException e) {
      return handleUndeclaredThrowableException(e,service,targetMethod,rpcRequest);
    }
catch (    Exception e) {
      return handleServiceException(e,service,targetMethod,rpcRequest);
    }
  }
 catch (  IncompatibleRemoteServiceException e) {
    return handleIncompatibleRemoteServiceException(e);
  }
catch (  Exception e) {
    return handleExporterProcessingException(e);
  }
}
