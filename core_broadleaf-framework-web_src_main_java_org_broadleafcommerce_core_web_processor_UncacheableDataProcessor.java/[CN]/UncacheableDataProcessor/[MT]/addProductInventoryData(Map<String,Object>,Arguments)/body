{
  List<Long> outOfStockProducts=new ArrayList<Long>();
  List<Long> outOfStockSkus=new ArrayList<Long>();
  Set<Product> products=(Set<Product>)((Map<String,Object>)arguments.getExpressionEvaluationRoot()).get("blcAllDisplayedProducts");
  if (products != null) {
    for (    Product product : products) {
      if (product.getDefaultSku() != null) {
        Boolean qtyAvailable=inventoryService.isAvailable(product.getDefaultSku(),1);
        if (qtyAvailable != null && !qtyAvailable) {
          outOfStockProducts.add(product.getId());
        }
      }
    }
  }
 else {
    Set<Sku> skus=(Set<Sku>)((Map<String,Object>)arguments.getExpressionEvaluationRoot()).get("blcAllDisplayedSkus");
    if (skus != null) {
      Map<Sku,Integer> inventoryAvailable=inventoryService.retrieveQuantitiesAvailable(skus);
      for (      Map.Entry<Sku,Integer> entry : inventoryAvailable.entrySet()) {
        if (entry.getValue() == null || entry.getValue() < 1) {
          outOfStockSkus.add(entry.getKey().getId());
        }
      }
    }
  }
  attrMap.put("outOfStockProducts",outOfStockProducts);
  attrMap.put("outOfStockSkus",outOfStockSkus);
}
