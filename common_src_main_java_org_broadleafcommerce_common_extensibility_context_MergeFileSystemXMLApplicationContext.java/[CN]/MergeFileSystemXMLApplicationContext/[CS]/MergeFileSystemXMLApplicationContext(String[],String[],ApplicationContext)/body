{
  super(parent);
  ResourceInputStream[] sources;
  ResourceInputStream[] patches;
  try {
    sources=new ResourceInputStream[sourceLocations.length];
    for (int j=0; j < sourceLocations.length; j++) {
      File temp=new File(sourceLocations[j]);
      sources[j]=new ResourceInputStream(new BufferedInputStream(new FileInputStream(temp)),sourceLocations[j]);
    }
    patches=new ResourceInputStream[patchLocations.length];
    for (int j=0; j < patches.length; j++) {
      File temp=new File(patchLocations[j]);
      sources[j]=new ResourceInputStream(new BufferedInputStream(new FileInputStream(temp)),patchLocations[j]);
    }
  }
 catch (  FileNotFoundException e) {
    throw new FatalBeanException("Unable to merge context files",e);
  }
  ImportProcessor importProcessor=new ImportProcessor(this);
  try {
    sources=importProcessor.processImports(sources);
    patches=importProcessor.processImports(patches);
  }
 catch (  MergeException e) {
    throw new FatalBeanException("Unable to merge source and patch locations",e);
  }
  this.configResources=new MergeApplicationContextXmlConfigResource().getConfigResources(sources,patches);
  refresh();
}
