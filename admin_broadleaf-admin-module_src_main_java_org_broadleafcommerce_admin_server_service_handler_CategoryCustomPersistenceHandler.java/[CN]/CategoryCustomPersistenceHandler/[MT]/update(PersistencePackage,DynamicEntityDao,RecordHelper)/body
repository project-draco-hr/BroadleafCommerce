{
  Entity entity=persistencePackage.getEntity();
  try {
    PersistencePerspective persistencePerspective=persistencePackage.getPersistencePerspective();
    Map<String,FieldMetadata> adminProperties=helper.getSimpleMergedProperties(Category.class.getName(),persistencePerspective);
    Object primaryKey=helper.getPrimaryKey(entity,adminProperties);
    Category adminInstance=(Category)dynamicEntityDao.retrieve(Class.forName(entity.getType()[0]),primaryKey);
    adminInstance=(Category)helper.createPopulatedInstance(adminInstance,entity,adminProperties,false);
    adminInstance=dynamicEntityDao.merge(adminInstance);
    boolean handled=false;
    if (extensionManager != null) {
      ExtensionResultStatusType result=extensionManager.getProxy().manageParentCategoryForUpdate(persistencePackage,adminInstance);
      handled=ExtensionResultStatusType.NOT_HANDLED != result;
    }
    if (!handled) {
      Category existingDefaultParentCategory=getExistingDefaultParentCategory(adminInstance);
      if (isDefaultCategoryLegacyMode() || adminInstance.getAllParentCategoryXrefs().isEmpty()) {
        setupXref(adminInstance,existingDefaultParentCategory);
      }
 else {
        adminInstance.getAllParentCategoryXrefs().get(0).setCategory(existingDefaultParentCategory);
      }
    }
    return helper.getRecord(adminProperties,adminInstance,null,null);
  }
 catch (  Exception e) {
    throw new ServiceException("Unable to update entity for " + entity.getType()[0],e);
  }
}
