{
  previewClickHandlerRegistration=display.getPreviewButton().addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        ListGridRecord[] records=display.getGrid().getSelection();
        previewSelection(records);
      }
    }
  }
);
  refreshClickHandlerRegistration=display.getRefreshButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        invalidateMyCache();
      }
    }
  }
);
  revertRejectAllClickHandlerRegistration=display.getRevertRejectAllButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        if (BLCMain.currentViewKey.equals("userSandBox")) {
          ((CustomCriteriaListGridDataSource)getPresenterSequenceSetupManager().getDataSource("sandBoxItemDS")).setCustomCriteria(new String[]{BLCMain.currentViewKey,"revertRejectAll","","","standard"});
          setStartState();
          display.getGrid().invalidateCache();
        }
 else {
          COMMENT_DIALOG.launch("Enter a rejection comment",new CommentCallback(){
            @Override public void comment(            String comment){
              ((CustomCriteriaListGridDataSource)getPresenterSequenceSetupManager().getDataSource("sandBoxItemDS")).setCustomCriteria(new String[]{BLCMain.currentViewKey,"revertRejectAll","",comment,"standard"});
              setStartState();
              display.getGrid().invalidateCache();
            }
          }
);
        }
      }
    }
  }
);
  revertRejectSelectionClickHandlerRegistration=display.getRevertRejectSelectionButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        if (BLCMain.currentViewKey.equals("userSandBox")) {
          ((CustomCriteriaListGridDataSource)getPresenterSequenceSetupManager().getDataSource("sandBoxItemDS")).setCustomCriteria(new String[]{BLCMain.currentViewKey,"revertRejectSelected",getSelectedRecords(),"","standard"});
          setStartState();
          display.getGrid().invalidateCache();
        }
 else {
          COMMENT_DIALOG.launch("Enter a rejection comment",new CommentCallback(){
            @Override public void comment(            String comment){
              ((CustomCriteriaListGridDataSource)getPresenterSequenceSetupManager().getDataSource("sandBoxItemDS")).setCustomCriteria(new String[]{BLCMain.currentViewKey,"revertRejectSelected",getSelectedRecords(),comment,"standard"});
              setStartState();
              display.getGrid().invalidateCache();
            }
          }
);
        }
      }
    }
  }
);
  selectionChangedHandlerRegistration=display.getGrid().addSelectionChangedHandler(new SelectionChangedHandler(){
    public void onSelectionChanged(    SelectionEvent event){
      ListGridRecord selectedRecord=event.getSelectedRecord();
      if (event.getState() && selectedRecord != null) {
        if (!selectedRecord.equals(lastSelectedRecord)) {
          display.getRevertRejectSelectionButton().enable();
          display.getPromoteSelectionButton().enable();
          display.getPreviewButton().enable();
        }
      }
    }
  }
);
  promoteAllClickHandlerRegistration=display.getPromoteAllButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        COMMENT_DIALOG.launch("Enter a promotion comment",new CommentCallback(){
          @Override public void comment(          String comment){
            ((CustomCriteriaListGridDataSource)getPresenterSequenceSetupManager().getDataSource("sandBoxItemDS")).setCustomCriteria(new String[]{BLCMain.currentViewKey,"promoteAll","",comment,"standard"});
            setStartState();
            display.getGrid().invalidateCache();
            Timer timer=new Timer(){
              public void run(){
                invalidateOtherCache();
              }
            }
;
            timer.schedule(1000);
          }
        }
);
      }
    }
  }
);
  promoteSelectionClickHandlerRegistration=display.getPromoteSelectionButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        COMMENT_DIALOG.launch("Enter a promotion comment",new CommentCallback(){
          @Override public void comment(          String comment){
            ((CustomCriteriaListGridDataSource)getPresenterSequenceSetupManager().getDataSource("sandBoxItemDS")).setCustomCriteria(new String[]{BLCMain.currentViewKey,"promoteSelected",getSelectedRecords(),comment,"standard"});
            setStartState();
            display.getGrid().invalidateCache();
            Timer timer=new Timer(){
              public void run(){
                invalidateOtherCache();
              }
            }
;
            timer.schedule(1000);
          }
        }
);
      }
    }
  }
);
  display.getGrid().addDataArrivedHandler(new DataArrivedHandler(){
    @Override public void onDataArrived(    DataArrivedEvent event){
      if (event.getEndRow() > event.getStartRow()) {
        enable();
      }
    }
  }
);
}
