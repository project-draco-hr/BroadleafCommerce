{
  boolean eol=false;
  int startPos=0;
  if (segment.startsWith(GROUPSTARTCHAR)) {
    startPos=1;
  }
  while (!eol) {
    int subgroupStartIndex=segment.indexOf(GROUPSTARTCHAR,startPos);
    if (subgroupStartIndex >= 0) {
      compilePhrases(segment.substring(startPos,subgroupStartIndex).trim(),myGroup);
      int subgroupEndIndex=findGroupEndIndex(segment,subgroupStartIndex);
      Group subGroup=new Group();
      myGroup.setSubGroup(subGroup);
      parseGroups(subGroup,segment.substring(subgroupStartIndex,subgroupEndIndex).trim());
      if (segment.endsWith(GROUPENDCHAR)) {
        eol=true;
      }
 else {
        startPos=subgroupEndIndex + 1;
      }
    }
 else {
      segment=segment.substring(startPos,segment.length());
      if (segment.startsWith(GROUPENDCHAR)) {
        segment=segment.substring(1,segment.length());
      }
      if (segment.endsWith(GROUPENDCHAR)) {
        segment=segment.substring(0,segment.length() - 1);
      }
      compilePhrases(segment.trim(),myGroup);
      eol=true;
    }
  }
}
