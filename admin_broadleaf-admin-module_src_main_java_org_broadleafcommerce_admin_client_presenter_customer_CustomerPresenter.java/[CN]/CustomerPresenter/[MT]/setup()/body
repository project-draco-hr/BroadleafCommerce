{
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("customerDS",new CustomerListDataSourceFactory(),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource top){
      setupDisplayItems(top);
      ((ListGridDataSource)top).setupGridFields(new String[]{"username","firstName","lastName","emailAddress"},new Boolean[]{true,true,true,true});
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("challengeQuestionDS",new ChallengeQuestionListDataSourceFactory(),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource result){
      ((ListGridDataSource)result).resetPermanentFieldVisibility("question");
      final EntitySearchDialog challengeQuestionSearchView=new EntitySearchDialog((ListGridDataSource)result,true);
      getPresenterSequenceSetupManager().getDataSource("customerDS").getFormItemCallbackHandlerManager().addSearchFormItemCallback("challengeQuestion",challengeQuestionSearchView,BLCMain.getMessageManager().getString("challengeQuestionSearchPrompt"),display.getDynamicFormDisplay());
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("localeDS",new LocaleListDataSourceFactory(),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource result){
      ((ListGridDataSource)result).resetPermanentFieldVisibility("friendlyName");
      final EntitySearchDialog localeSearchView=new EntitySearchDialog((ListGridDataSource)result,true);
      getPresenterSequenceSetupManager().getDataSource("customerDS").getFormItemCallbackHandlerManager().addSearchFormItemCallback("customerLocale",localeSearchView,BLCMain.getMessageManager().getString("localeSearchPrompt"),display.getDynamicFormDisplay());
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("countryDS",new CountryListDataSourceFactory(),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource result){
      ((ListGridDataSource)result).resetPermanentFieldVisibility("abbreviation","name");
      EntitySearchDialog countrySearchView=new EntitySearchDialog((ListGridDataSource)result,true);
      library.put("countrySearchView",countrySearchView);
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("stateDS",new StateListDataSourceFactory(),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource result){
      ((ListGridDataSource)result).resetPermanentFieldVisibility("abbreviation","name");
      EntitySearchDialog stateSearchView=new EntitySearchDialog((ListGridDataSource)result,true);
      library.put("stateSearchView",stateSearchView);
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("customerAddressDS",new CustomerAddressDataSourceFactory(),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource result){
      customerAddressPresenter=new CreateBasedListStructurePresenter(getDisplay().getCustomerAddressDisplay(),BLCMain.getMessageManager().getString("newCustomerAddressTitle"));
      customerAddressPresenter.setDataSource((ListGridDataSource)result,new String[]{"addressName","address.addressLine1","address.city","address.state.name","address.postalCode"},new Boolean[]{true,true,true,true,true});
      ((DynamicEntityDataSource)result).getFormItemCallbackHandlerManager().addSearchFormItemCallback("address.country",(EntitySearchDialog)library.get("countrySearchView"),BLCMain.getMessageManager().getString("countrySearchPrompt"),display.getDynamicFormDisplay());
      ((DynamicEntityDataSource)result).getFormItemCallbackHandlerManager().addSearchFormItemCallback("address.state",(EntitySearchDialog)library.get("stateSearchView"),BLCMain.getMessageManager().getString("stateSearchPrompt"),display.getDynamicFormDisplay());
    }
  }
));
}
