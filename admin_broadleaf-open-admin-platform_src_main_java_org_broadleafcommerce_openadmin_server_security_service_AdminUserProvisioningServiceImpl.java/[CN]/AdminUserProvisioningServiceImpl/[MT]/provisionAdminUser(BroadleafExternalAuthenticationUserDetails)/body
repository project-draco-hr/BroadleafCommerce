{
  HashSet<String> newRoles=new HashSet<String>();
  if (roleNameSubstitutions != null && !roleNameSubstitutions.isEmpty()) {
    for (    GrantedAuthority authority : details.getAuthorities()) {
      if (roleNameSubstitutions.containsKey(authority.getAuthority())) {
        String[] roles=roleNameSubstitutions.get(authority.getAuthority());
        for (        String role : roles) {
          newRoles.add(role.trim());
        }
      }
 else {
        newRoles.add(authority.getAuthority());
      }
    }
  }
 else {
    for (    GrantedAuthority authority : details.getAuthorities()) {
      newRoles.add(authority.getAuthority());
    }
  }
  HashSet<GrantedAuthority> newAuthorities=new HashSet<GrantedAuthority>();
  for (  String perm : AdminSecurityService.DEFAULT_PERMISSIONS) {
    newAuthorities.add(new SimpleGrantedAuthority(perm));
  }
  HashSet<AdminRole> grantedRoles=new HashSet<AdminRole>();
  List<AdminRole> adminRoles=securityService.readAllAdminRoles();
  if (adminRoles != null) {
    for (    AdminRole role : adminRoles) {
      if (newRoles.contains(role.getName())) {
        grantedRoles.add(role);
        Set<AdminPermission> permissions=role.getAllPermissions();
        if (permissions != null && !permissions.isEmpty()) {
          for (          AdminPermission permission : permissions) {
            if (permission.isFriendly()) {
              for (              AdminPermission childPermission : permission.getAllChildPermissions()) {
                newAuthorities.add(new SimpleGrantedAuthority(childPermission.getName()));
              }
            }
 else {
              newAuthorities.add(new SimpleGrantedAuthority(permission.getName()));
            }
          }
        }
      }
    }
  }
  AdminUser adminUser=securityService.readAdminUserByUserName(details.getUsername());
  if (adminUser == null) {
    adminUser=new AdminUserImpl();
    adminUser.setLogin(details.getUsername());
  }
  if (StringUtils.isNotBlank(details.getEmail())) {
    adminUser.setEmail(details.getEmail());
  }
  StringBuilder name=new StringBuilder();
  if (StringUtils.isNotBlank(details.getFirstName())) {
    name.append(details.getFirstName()).append(" ");
  }
  if (StringUtils.isNotBlank(details.getLastName())) {
    name.append(details.getLastName());
  }
  String fullName=name.toString();
  if (StringUtils.isNotBlank(fullName)) {
    adminUser.setName(fullName);
  }
 else {
    adminUser.setName(details.getUsername());
  }
  Set<AdminRole> roleSet=adminUser.getAllRoles();
  if (roleSet != null) {
    roleSet.clear();
  }
 else {
    roleSet=new HashSet<AdminRole>();
    adminUser.setAllRoles(roleSet);
  }
  if (adminRoles != null) {
    for (    AdminRole role : adminRoles) {
      roleSet.add(role);
    }
  }
  adminExternalLoginExtensionManager.getProxy().performAdditionalAuthenticationTasks(adminUser,details);
  adminUser=securityService.saveAdminUser(adminUser);
  return new AdminUserDetails(adminUser.getId(),details.getUsername(),"",true,true,true,true,newAuthorities);
}
