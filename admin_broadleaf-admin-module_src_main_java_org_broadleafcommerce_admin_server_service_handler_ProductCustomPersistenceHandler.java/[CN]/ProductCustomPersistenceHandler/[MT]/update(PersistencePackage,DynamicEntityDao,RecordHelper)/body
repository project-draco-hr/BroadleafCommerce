{
  Entity entity=persistencePackage.getEntity();
  try {
    PersistencePerspective persistencePerspective=persistencePackage.getPersistencePerspective();
    Map<String,FieldMetadata> adminProperties=helper.getSimpleMergedProperties(Product.class.getName(),persistencePerspective);
    Object primaryKey=helper.getPrimaryKey(entity,adminProperties);
    Product adminInstance=(Product)dynamicEntityDao.retrieve(Class.forName(entity.getType()[0]),primaryKey);
    if (adminInstance instanceof ProductBundle) {
      removeBundleFieldRestrictions((ProductBundle)adminInstance,adminProperties,entity);
    }
    adminInstance=(Product)helper.createPopulatedInstance(adminInstance,entity,adminProperties,false);
    adminInstance=dynamicEntityDao.merge(adminInstance);
    boolean handled=false;
    if (extensionManager != null) {
      ExtensionResultStatusType result=extensionManager.getProxy().manageParentCategoryForUpdate(persistencePackage,adminInstance);
      handled=ExtensionResultStatusType.NOT_HANDLED != result;
    }
    if (!handled) {
      Category existingDefaultCategory=getExistingDefaultCategory(adminInstance);
      setupXref(adminInstance,existingDefaultCategory);
    }
    return helper.getRecord(adminProperties,adminInstance,null,null);
  }
 catch (  Exception e) {
    throw new ServiceException("Unable to update entity for " + entity.getType()[0],e);
  }
}
