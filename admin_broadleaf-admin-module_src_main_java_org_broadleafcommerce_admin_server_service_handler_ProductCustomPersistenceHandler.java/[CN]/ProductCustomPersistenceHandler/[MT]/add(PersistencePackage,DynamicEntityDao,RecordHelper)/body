{
  Entity entity=persistencePackage.getEntity();
  try {
    PersistencePerspective persistencePerspective=persistencePackage.getPersistencePerspective();
    Product adminInstance=(Product)Class.forName(entity.getType()[0]).newInstance();
    Map<String,FieldMetadata> adminProperties=helper.getSimpleMergedProperties(Product.class.getName(),persistencePerspective);
    if (adminInstance instanceof ProductBundle) {
      removeBundleFieldRestrictions((ProductBundle)adminInstance,adminProperties,entity);
    }
    adminInstance=(Product)helper.createPopulatedInstance(adminInstance,entity,adminProperties,false);
    adminInstance=dynamicEntityDao.merge(adminInstance);
    boolean handled=false;
    if (extensionManager != null) {
      ExtensionResultStatusType result=extensionManager.getProxy().manageParentCategoryForAdd(persistencePackage,adminInstance);
      handled=ExtensionResultStatusType.NOT_HANDLED != result;
    }
    if (!handled) {
      setupXref(adminInstance);
    }
    if (adminInstance.getDefaultSku() == null) {
      Sku newSku=catalogService.createSku();
      dynamicEntityDao.persist(newSku);
      adminInstance.setDefaultSku(newSku);
      adminInstance=dynamicEntityDao.merge(adminInstance);
    }
    adminInstance.getDefaultSku().setDefaultProduct(adminInstance);
    dynamicEntityDao.merge(adminInstance.getDefaultSku());
    return helper.getRecord(adminProperties,adminInstance,null,null);
  }
 catch (  Exception e) {
    throw new ServiceException("Unable to add entity for " + entity.getType()[0],e);
  }
}
