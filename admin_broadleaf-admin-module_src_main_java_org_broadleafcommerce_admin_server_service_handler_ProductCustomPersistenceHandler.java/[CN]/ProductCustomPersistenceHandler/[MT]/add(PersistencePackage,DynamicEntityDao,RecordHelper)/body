{
  Entity entity=persistencePackage.getEntity();
  try {
    PersistencePerspective persistencePerspective=persistencePackage.getPersistencePerspective();
    Product adminInstance=(Product)Class.forName(entity.getType()[0]).newInstance();
    Map<String,FieldMetadata> adminProperties=helper.getSimpleMergedProperties(Product.class.getName(),persistencePerspective);
    adminInstance=(Product)helper.createPopulatedInstance(adminInstance,entity,adminProperties,false);
    CategoryProductXref categoryXref=new CategoryProductXrefImpl();
    categoryXref.setCategory(adminInstance.getDefaultCategory());
    categoryXref.setProduct(adminInstance);
    if (adminInstance.getDefaultCategory() != null && !adminInstance.getAllParentCategories().contains(categoryXref)) {
      adminInstance.getAllParentCategoryXrefs().add(categoryXref);
    }
    adminInstance=(Product)dynamicEntityDao.merge(adminInstance);
    if (adminInstance.getDefaultSku() == null) {
      Sku newSku=catalogService.createSku();
      adminInstance.setDefaultSku(newSku);
      adminInstance=(Product)dynamicEntityDao.merge(adminInstance);
    }
    adminInstance.getDefaultSku().setDefaultProduct(adminInstance);
    dynamicEntityDao.merge(adminInstance.getDefaultSku());
    return helper.getRecord(adminProperties,adminInstance,null,null);
  }
 catch (  Exception e) {
    LOG.error("Unable to add entity for " + entity.getType()[0],e);
    throw new ServiceException("Unable to add entity for " + entity.getType()[0],e);
  }
}
