{
  java.util.logging.Logger.getLogger(BLCMain.class.getName()).info("Admin user found. Loading interface...");
  setCurrentModuleKey(requestedModuleKey);
  if (currentModuleKey == null) {
    SC.say(getMessageManager().getString("noModulesAuthorized"));
    return;
  }
  setCurrentPageKey(requestedPageKey);
  if (currentPageKey == null) {
    SC.say(getMessageManager().getString("noAuthorizedPages"));
    return;
  }
  LinkedHashMap<String,Module> orderedModules=new LinkedHashMap<String,Module>(modules.size());
  List<Module> moduleList=new ArrayList<Module>(modules.values());
  Collections.sort(moduleList,new Comparator<Module>(){
    @Override public int compare(    Module module,    Module module1){
      return module.getOrder().compareTo(module1.getOrder());
    }
  }
);
  for (  Module module : moduleList) {
    orderedModules.put(module.getModuleKey(),module);
  }
  modules=orderedModules;
  modules.get(currentModuleKey).preDraw();
  MASTERVIEW=new MasterView(orderedModules);
  RootPanel.get("gwt-component").add(MASTERVIEW);
  AppController.getInstance().go(MASTERVIEW.getContainer(),modules.get(currentModuleKey).getPages(),currentPageKey,currentModuleKey,true);
  modules.get(currentModuleKey).postDraw();
}
