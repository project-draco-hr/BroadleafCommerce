{
  String ceilingEntityFullyQualifiedClassname=persistencePackage.getCeilingEntityFullyQualifiedClassname();
  try {
    String structuredContentId=persistencePackage.getCustomCriteria()[1];
    StructuredContent structuredContent=structuredContentService.findStructuredContentById(Long.valueOf(structuredContentId));
    List<String> templateFieldNames=new ArrayList<String>(20);
    for (    FieldGroup group : structuredContent.getStructuredContentType().getStructuredContentFieldTemplate().getFieldGroups()) {
      for (      FieldDefinition definition : group.getFieldDefinitions()) {
        templateFieldNames.add(definition.getName());
      }
    }
    Map<String,StructuredContentField> structuredContentFieldMap=structuredContent.getStructuredContentFields();
    for (    Property property : persistencePackage.getEntity().getProperties()) {
      if (templateFieldNames.contains(property.getName())) {
        StructuredContentField structuredContentField=structuredContentFieldMap.get(property.getName());
        if (structuredContentField != null) {
          structuredContentField.setValue(property.getValue());
        }
 else {
          structuredContentField=new StructuredContentFieldImpl();
          structuredContentFieldMap.put(property.getName(),structuredContentField);
          structuredContentField.setFieldKey(property.getName());
          structuredContentField.setStructuredContent(structuredContent);
          structuredContentField.setValue(property.getValue());
        }
      }
    }
    List<String> removeItems=new ArrayList<String>();
    for (    String key : structuredContentFieldMap.keySet()) {
      if (persistencePackage.getEntity().findProperty(key) == null) {
        removeItems.add(key);
      }
    }
    if (removeItems.size() > 0) {
      for (      String removeKey : removeItems) {
        StructuredContentField structuredContentField=structuredContentFieldMap.remove(removeKey);
        structuredContentField.setStructuredContent(null);
      }
    }
    structuredContentService.updateStructuredContent(structuredContent,getSandBox());
    return fetchEntityBasedOnId(structuredContentId);
  }
 catch (  Exception e) {
    LOG.error("Unable to execute persistence activity",e);
    throw new ServiceException("Unable to perform fetch for entity: " + ceilingEntityFullyQualifiedClassname,e);
  }
}
