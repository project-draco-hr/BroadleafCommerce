{
  GenericResponse response=new GenericResponse();
  Customer customer=null;
  if (username != null) {
    customer=customerDao.readCustomerByUsername(username);
  }
  checkCustomer(customer,response);
  if (!response.getHasErrors()) {
    String token=PasswordUtils.generateTemporaryPassword(getPasswordTokenLength());
    token=token.toLowerCase();
    CustomerForgotPasswordSecurityToken fpst=new CustomerForgotPasswordSecurityTokenImpl();
    fpst.setCustomerId(customer.getId());
    fpst.setToken(encodePassword(token,null));
    fpst.setCreateDate(SystemTime.asDate());
    customerForgotPasswordSecurityTokenDao.saveToken(fpst);
    HashMap<String,Object> vars=new HashMap<String,Object>();
    vars.put("token",token);
    if (!StringUtils.isEmpty(resetPasswordUrl)) {
      if (resetPasswordUrl.contains("?")) {
        resetPasswordUrl=resetPasswordUrl + "&token=" + token;
      }
 else {
        resetPasswordUrl=resetPasswordUrl + "?token=" + token;
      }
    }
    vars.put("resetPasswordUrl",resetPasswordUrl);
    emailService.sendTemplateEmail(customer.getEmailAddress(),getForgotPasswordEmailInfo(),vars);
  }
  return response;
}
