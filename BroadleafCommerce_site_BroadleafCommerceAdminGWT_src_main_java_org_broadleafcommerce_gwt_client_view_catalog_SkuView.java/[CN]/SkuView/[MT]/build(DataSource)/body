{
  setHeight100();
  setWidth100();
  ToolStrip topBar=new ToolStrip();
  topBar.setHeight(20);
  topBar.setWidth100();
  topBar.addSpacer(6);
  addButton=new ToolStripButton();
  addButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/plus.png");
  addButton.setDisabled(true);
  topBar.addButton(addButton);
  HashMap<String,String> polymorphicEntities=((DynamicEntityDataSource)dataSource).getPolymorphicEntities();
  if (polymorphicEntities.size() > 1) {
    entityType.setShowTitle(false);
    entityType.setWidth(120);
    LinkedHashMap<String,String> valueMap=new LinkedHashMap<String,String>();
    for (    String name : polymorphicEntities.keySet()) {
      valueMap.put(name,polymorphicEntities.get(name));
    }
    entityType.setValueMap(valueMap);
    entityType.setDefaultValue(valueMap.keySet().iterator().next());
    entityType.setDisabled(true);
    topBar.addFormItem(entityType);
  }
  removeButton=new ToolStripButton();
  removeButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/minus.png");
  removeButton.setDisabled(true);
  topBar.addButton(removeButton);
  addMember(topBar);
  listGrid=new ListGrid();
  listGrid.setCellPadding(5);
  listGrid.setSelectionType(SelectionStyle.SINGLE);
  listGrid.setCanEdit(true);
  listGrid.setEditEvent(ListGridEditEvent.DOUBLECLICK);
  listGrid.setEditByCell(true);
  listGrid.setAutoSaveEdits(true);
  listGrid.setSaveByCell(true);
  listGrid.setDataSource(dataSource);
  listGrid.setAutoFetchData(false);
  listGrid.setShowFilterEditor(true);
  name.setFrozen(true);
  listGrid.setFields(name,activeStartDate,activeEndDate,retailPrice,salePrice);
  listGrid.setShowResizeBar(true);
  addMember(listGrid);
}
