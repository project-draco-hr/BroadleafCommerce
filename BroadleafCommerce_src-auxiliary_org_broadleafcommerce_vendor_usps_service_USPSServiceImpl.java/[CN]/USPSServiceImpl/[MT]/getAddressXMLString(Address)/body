{
  Document document=DocumentHelper.createDocument();
  Element root=document.addElement(ADDRESS_VALIDATE_REQUEST_ELEM);
  root.addAttribute(USER_ID_ATTR,uspsUserName);
  root.addAttribute(PASSWORD_ATTR,uspsPassword);
  Element domAddr=root.addElement(ADDRESS_ELEM).addAttribute(ID_ATTR,EMPTY_STRING);
  domAddr.addElement(ADDRESS1_ELEM).setText((address.getAddressLine2() == null) ? EMPTY_STRING : address.getAddressLine2());
  domAddr.addElement(ADDRESS2_ELEM).setText((address.getAddressLine1() == null) ? EMPTY_STRING : address.getAddressLine1());
  domAddr.addElement(CITY_ELEM).setText((address.getCity() == null) ? EMPTY_STRING : address.getCity());
  domAddr.addElement(STATE_ELEM).setText((address.getState() == null) ? EMPTY_STRING : address.getState().getAbbreviation());
  domAddr.addElement(ZIP5_ELEM).setText((address.getPostalCode() == null) ? EMPTY_STRING : address.getPostalCode());
  domAddr.addElement(ZIP4_ELEM).setText((address.getZipFour() == null) ? EMPTY_STRING : address.getZipFour());
  StringWriter strWriter=new StringWriter();
  XMLWriter writer=new XMLWriter(strWriter);
  try {
    writer.write(document);
    if (LOG.isDebugEnabled()) {
      LOG.debug("strWriter.toString(): " + strWriter.toString());
    }
    return strWriter.toString();
  }
  finally {
    document=null;
    if (writer != null) {
      try {
        writer.close();
      }
 catch (      IOException e) {
        LOG.warn("There was an unexpected error closing the Dom4J XMLWriter",e);
      }
    }
    if (strWriter != null) {
      try {
        strWriter.close();
      }
 catch (      IOException e) {
        LOG.warn("There was an unexpected error closing a java.io.StringWriter associated with the Dom4J XMLWriter",e);
      }
    }
  }
}
