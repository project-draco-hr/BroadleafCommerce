{
  BLCMain.NON_MODAL_PROGRESS.startProgress();
  StructuredContentTypeFormListDataSourceFactory.createDataSource("contentTypeFormDS",new String[]{"constructForm",selectedRecord.getAttribute("structuredContentType")},new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    final DataSource dataSource){
      destroyContentTypeForm();
      final FormOnlyView formOnlyView=new FormOnlyView(dataSource,true,true,false);
      formOnlyView.getForm().addItemChangedHandler(new ItemChangedHandler(){
        @Override public void onItemChanged(        ItemChangedEvent event){
          resetButtons();
        }
      }
);
      formOnlyView.setID("contentTypeForm");
      formOnlyView.setOverflow(Overflow.VISIBLE);
      ((FormOnlyView)getDisplay().getDynamicFormDisplay().getFormOnlyDisplay()).addMember(formOnlyView);
      ((StructuredContentTypeFormListDataSource)dataSource).setCustomCriteria(new String[]{"constructForm",selectedRecord.getAttribute("id")});
      BLCMain.NON_MODAL_PROGRESS.startProgress();
      formOnlyView.getForm().fetchData(new Criteria(),new DSCallback(){
        @Override public void execute(        DSResponse response,        Object rawData,        DSRequest request){
          if (!selectedRecord.getAttributeAsBoolean("lockedFlag")) {
            formOnlyView.getForm().enable();
          }
          for (          final FormItem formItem : formOnlyView.getForm().getFields()) {
            if (formItem instanceof HTMLTextItem) {
              ((HTMLTextItem)formItem).setHTMLValue((formOnlyView.getForm().getValue(formItem.getFieldName())) != null ? formOnlyView.getForm().getValue(formItem.getFieldName()).toString() : "");
            }
          }
          if (cb != null) {
            cb.processComplete();
          }
        }
      }
);
    }
  }
);
}
