{
  super.bind();
  getSaveButtonHandlerRegistration().removeHandler();
  formPresenter.getRefreshButtonHandlerRegistration().removeHandler();
  refreshButtonHandlerRegistration=getDisplay().getDynamicFormDisplay().getRefreshButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        extractor.getRemovedItemQualifiers().clear();
        changeSelection(currentStructuredContentRecord);
      }
    }
  }
);
  ruleRefreshButtonHandlerRegistration=getDisplay().getRulesRefreshButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        extractor.getRemovedItemQualifiers().clear();
        changeSelection(currentStructuredContentRecord);
      }
    }
  }
);
  saveButtonHandlerRegistration=getDisplay().getDynamicFormDisplay().getSaveButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        save();
      }
    }
  }
);
  ruleSaveButtonHandlerRegistration=getDisplay().getRulesSaveButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        save();
      }
    }
  }
);
  display.getListDisplay().getGrid().addFetchDataHandler(new FetchDataHandler(){
    @Override public void onFilterData(    FetchDataEvent event){
      destroyContentTypeForm();
    }
  }
);
  getDisplay().getAddItemButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        final ItemBuilderDisplay display=getDisplay().addItemBuilder(getPresenterSequenceSetupManager().getDataSource("scOrderItemDS"));
        bindItemBuilderEvents(display);
        display.setDirty(true);
        resetButtons();
      }
    }
  }
);
  for (  ItemBuilderDisplay itemBuilder : getDisplay().getItemBuilderViews()) {
    bindItemBuilderEvents(itemBuilder);
  }
  getDisplay().getCustomerFilterBuilder().addFilterChangedHandler(new FilterChangedHandler(){
    public void onFilterChanged(    FilterChangedEvent event){
      resetButtons();
    }
  }
);
  getDisplay().getProductFilterBuilder().addFilterChangedHandler(new FilterChangedHandler(){
    public void onFilterChanged(    FilterChangedEvent event){
      resetButtons();
    }
  }
);
  getDisplay().getRequestFilterBuilder().addFilterChangedHandler(new FilterChangedHandler(){
    public void onFilterChanged(    FilterChangedEvent event){
      resetButtons();
    }
  }
);
  getDisplay().getTimeFilterBuilder().addFilterChangedHandler(new FilterChangedHandler(){
    public void onFilterChanged(    FilterChangedEvent event){
      resetButtons();
    }
  }
);
  additionalFilterEventManager.addFilterBuilderAdditionalEventHandler(getDisplay().getCustomerFilterBuilder(),new FilterBuilderAdditionalEventHandler(){
    @Override public void onAdditionalChangeEvent(){
      resetButtons();
    }
  }
);
  additionalFilterEventManager.addFilterBuilderAdditionalEventHandler(getDisplay().getProductFilterBuilder(),new FilterBuilderAdditionalEventHandler(){
    @Override public void onAdditionalChangeEvent(){
      resetButtons();
    }
  }
);
  additionalFilterEventManager.addFilterBuilderAdditionalEventHandler(getDisplay().getRequestFilterBuilder(),new FilterBuilderAdditionalEventHandler(){
    @Override public void onAdditionalChangeEvent(){
      resetButtons();
    }
  }
);
  additionalFilterEventManager.addFilterBuilderAdditionalEventHandler(getDisplay().getTimeFilterBuilder(),new FilterBuilderAdditionalEventHandler(){
    @Override public void onAdditionalChangeEvent(){
      resetButtons();
    }
  }
);
}
