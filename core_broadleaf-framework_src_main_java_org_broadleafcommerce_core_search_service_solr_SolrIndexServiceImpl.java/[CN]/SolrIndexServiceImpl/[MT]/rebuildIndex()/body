{
  LOG.info("Rebuilding the solr index...");
  StopWatch s=new StopWatch();
  if (SolrContext.isSingleCoreMode()) {
    deleteAllDocuments();
  }
  BroadleafRequestContext savedContext=BroadleafRequestContext.getBroadleafRequestContext();
  HashMap savedPricing=SkuPricingConsiderationContext.getSkuPricingConsiderationContext();
  DynamicSkuPricingService savedPricingService=SkuPricingConsiderationContext.getSkuPricingService();
  DynamicSkuActiveDatesService savedActiveDateServcie=SkuActiveDateConsiderationContext.getSkuActiveDatesService();
  try {
    Long numProducts=productDao.readCountAllActiveProducts();
    if (LOG.isDebugEnabled()) {
      LOG.debug("There are " + numProducts + " total products");
    }
    int page=0;
    while ((page * pageSize) < numProducts) {
      buildIncrementalIndex(page,pageSize);
      page++;
    }
    try {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Optimizing the index...");
      }
      SolrContext.getReindexServer().optimize();
    }
 catch (    SolrServerException e) {
      throw new ServiceException("Could not rebuild index",e);
    }
  }
 catch (  ServiceException e) {
    throw e;
  }
 finally {
    BroadleafRequestContext.setBroadleafRequestContext(savedContext);
    SkuPricingConsiderationContext.setSkuPricingConsiderationContext(savedPricing);
    SkuPricingConsiderationContext.setSkuPricingService(savedPricingService);
    SkuActiveDateConsiderationContext.setSkuActiveDatesService(savedActiveDateServcie);
  }
  shs.swapActiveCores();
  if (!SolrContext.isSingleCoreMode()) {
    deleteAllDocuments();
  }
  LOG.info(String.format("Finished building index in %s",s.toLapString()));
}
