{
  document.addField(shs.getNamespaceFieldName(),shs.getCurrentNamespace());
  document.addField(shs.getIdFieldName(),shs.getSolrDocumentId(document,product));
  document.addField(shs.getProductIdFieldName(),product.getId());
  extensionManager.getProxy().attachAdditionalBasicFields(product,document,shs);
  for (  CategoryProductXref categoryXref : product.getAllParentCategoryXrefs()) {
    document.addField(shs.getExplicitCategoryFieldName(),categoryXref.getCategory().getId());
    String categorySortFieldName=shs.getCategorySortFieldName(categoryXref.getCategory());
    int index=-1;
    if (!categoryProductCache.containsKey(categoryXref.getCategory().getId())) {
      categoryProductCache.put(categoryXref.getCategory().getId(),solrIndexDao.readProductIdsByCategory(categoryXref.getCategory().getId()));
    }
    int position=categoryProductCache.get(categoryXref.getCategory().getId()).indexOf(product.getId());
    if (position >= 0) {
      index=position;
    }
    document.addField(categorySortFieldName,index);
  }
  Set<Category> fullCategoryHierarchy=new HashSet<Category>();
  for (  CategoryProductXref categoryXref : product.getAllParentCategoryXrefs()) {
    fullCategoryHierarchy.addAll(categoryXref.getCategory().buildFullCategoryHierarchy(null));
  }
  for (  Category category : fullCategoryHierarchy) {
    document.addField(shs.getCategoryFieldName(),category.getId());
  }
}
