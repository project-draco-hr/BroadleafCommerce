{
  boolean cacheOperationManaged=false;
  try {
    CatalogStructure cache=SolrIndexCachedOperation.getCache();
    if (cache != null) {
      cacheOperationManaged=true;
    }
 else {
      cache=new CatalogStructure();
      SolrIndexCachedOperation.setCache(cache);
      solrIndexDao.populateCatalogStructure(Arrays.asList(product.getId()),SolrIndexCachedOperation.getCache());
    }
    document.addField(shs.getNamespaceFieldName(),shs.getCurrentNamespace());
    document.addField(shs.getIdFieldName(),shs.getSolrDocumentId(document,product));
    document.addField(shs.getProductIdFieldName(),product.getId());
    extensionManager.getProxy().attachAdditionalBasicFields(product,document,shs);
    for (    Long categoryId : cache.getParentCategoriesByProduct().get(product.getId())) {
      document.addField(shs.getExplicitCategoryFieldName(),shs.getCategoryId(categoryId));
      String categorySortFieldName=shs.getCategorySortFieldName(categoryId);
      int index=-1;
      int position=cache.getProductsByCategory().get(categoryId).indexOf(product.getId());
      if (position >= 0) {
        index=position;
      }
      if (document.getField(categorySortFieldName) == null) {
        document.addField(categorySortFieldName,index);
      }
      buildFullCategoryHierarchy(document,cache,categoryId);
    }
  }
  finally {
    if (!cacheOperationManaged) {
      SolrIndexCachedOperation.clearCache();
    }
  }
}
