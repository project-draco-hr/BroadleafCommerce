{
  Expression expression=(Expression)StandardExpressions.getExpressionParser(arguments.getConfiguration()).parseExpression(arguments.getConfiguration(),arguments,element.getAttributeValue("orderInfoForm"));
  OrderInfoForm orderInfoForm=(OrderInfoForm)expression.execute(arguments.getConfiguration(),arguments);
  expression=(Expression)StandardExpressions.getExpressionParser(arguments.getConfiguration()).parseExpression(arguments.getConfiguration(),arguments,element.getAttributeValue("shippingInfoForm"));
  ShippingInfoForm shippingInfoForm=(ShippingInfoForm)expression.execute(arguments.getConfiguration(),arguments);
  expression=(Expression)StandardExpressions.getExpressionParser(arguments.getConfiguration()).parseExpression(arguments.getConfiguration(),arguments,element.getAttributeValue("billingInfoForm"));
  BillingInfoForm billingInfoForm=(BillingInfoForm)expression.execute(arguments.getConfiguration(),arguments);
  expression=(Expression)StandardExpressions.getExpressionParser(arguments.getConfiguration()).parseExpression(arguments.getConfiguration(),arguments,element.getAttributeValue("orderInfoHelpMessage"));
  String orderInfoHelpMessage=(String)expression.execute(arguments.getConfiguration(),arguments);
  expression=(Expression)StandardExpressions.getExpressionParser(arguments.getConfiguration()).parseExpression(arguments.getConfiguration(),arguments,element.getAttributeValue("billingInfoHelpMessage"));
  String billingInfoHelpMessage=(String)expression.execute(arguments.getConfiguration(),arguments);
  expression=(Expression)StandardExpressions.getExpressionParser(arguments.getConfiguration()).parseExpression(arguments.getConfiguration(),arguments,element.getAttributeValue("shippingInfoHelpMessage"));
  String shippingInfoHelpMessage=(String)expression.execute(arguments.getConfiguration(),arguments);
  prepopulateCheckoutForms(CartState.getCart(),orderInfoForm,shippingInfoForm,billingInfoForm);
  Map<String,Object> localVars=new HashMap<String,Object>();
  localVars.put("paymentRequestDTO",orderToPaymentRequestDTOService.translateOrder(CartState.getCart()));
  int numShippableFulfillmentGroups=calculateNumShippableFulfillmentGroups();
  localVars.put("numShippableFulfillmentGroups",numShippableFulfillmentGroups);
  populateFulfillmentOptionsAndEstimationOnModel(localVars);
  localVars.put("orderInfoHelpMessage",orderInfoHelpMessage);
  localVars.put("billingInfoHelpMessage",billingInfoHelpMessage);
  localVars.put("shippingInfoHelpMessage",shippingInfoHelpMessage);
  populateSectionViewStates(localVars);
  localVars.put("states",stateService.findStates());
  localVars.put("countries",countryService.findCountries());
  localVars.put("expirationMonths",populateExpirationMonths());
  localVars.put("expirationYears",populateExpirationYears());
  populateProcessingError(localVars);
  return localVars;
}
