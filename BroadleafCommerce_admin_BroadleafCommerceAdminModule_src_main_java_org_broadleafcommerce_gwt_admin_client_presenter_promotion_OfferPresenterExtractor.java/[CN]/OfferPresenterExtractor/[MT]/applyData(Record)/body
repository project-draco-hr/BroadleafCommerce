{
  try {
    selectedRecord.setAttribute("totalitarianOffer",getDisplay().getRestrictRuleRadio().getValue().equals("YES"));
    selectedRecord.setAttribute("deliveryType",getDisplay().getDeliveryTypeRadio().getValue());
    if (getDisplay().getDeliveryTypeRadio().getValue().equals("CODE")) {
      selectedRecord.setAttribute("offerCode.offerCode",getDisplay().getCodeField().getValue().toString().trim());
    }
    final String type=getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().getForm().getField("type").getValue().toString();
    extractCustomerData(selectedRecord);
    extractOrderData(selectedRecord,type);
    extractQualifierRuleType(selectedRecord);
    extractTargetItemData(selectedRecord,type);
    extractTargetRuleType(selectedRecord);
    extractFulfillmentGroupData(selectedRecord,type);
    for (    FormItem formItem : getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().getForm().getFields()) {
      selectedRecord.setAttribute(formItem.getName(),formItem.getValue());
    }
    extractQualifierData(selectedRecord,type,true);
    getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().getForm().getDataSource().updateData(selectedRecord,new DSCallback(){
      public void execute(      DSResponse response,      Object rawData,      DSRequest request){
        try {
          extractQualifierData(selectedRecord,type,false);
          getDisplay().getDynamicFormDisplay().getSaveButton().disable();
        }
 catch (        IncompatibleMVELTranslationException e) {
          SC.warn(e.getMessage());
        }
      }
    }
);
  }
 catch (  IncompatibleMVELTranslationException e) {
    SC.warn(e.getMessage());
  }
}
