{
  String ceilingEntityFullyQualifiedClassname=persistencePackage.getCeilingEntityFullyQualifiedClassname();
  try {
    String pageId=persistencePackage.getCustomCriteria()[1];
    Entity entity=fetchEntityBasedOnId(pageId,null);
    DynamicResultSet results=new DynamicResultSet(new Entity[]{entity},1);
    for (    Property prop : entity.getProperties()) {
      if (StringUtils.isNotBlank(prop.getValue()) && StringUtils.isNotBlank(prop.getMetadata().getOwningClass())) {
        Class<?> clazz=Class.forName(prop.getMetadata().getOwningClass());
        Class<?>[] lookupClasses=dynamicEntityDao.getAllPolymorphicEntitiesFromCeiling(clazz);
        int i=0;
        Object foreignEntity=null;
        while (foreignEntity == null && i < lookupClasses.length) {
          foreignEntity=dynamicEntityDao.find(lookupClasses[i++],Long.parseLong(prop.getValue()));
        }
        if (foreignEntity instanceof AdminMainEntity) {
          prop.setDisplayValue(((AdminMainEntity)foreignEntity).getMainEntityName());
        }
        prop.getMetadata().setOwningClass(null);
      }
    }
    return results;
  }
 catch (  Exception e) {
    throw new ServiceException("Unable to perform fetch for entity: " + ceilingEntityFullyQualifiedClassname,e);
  }
}
