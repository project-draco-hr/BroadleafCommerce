{
  Item[] items=new Item[taxRequest.getItemRequests().size()];
  for (int j=0; j < items.length; j++) {
    CyberSourceTaxItemRequest itemRequest=(CyberSourceTaxItemRequest)taxRequest.getItemRequests().get(j);
    items[j]=new Item();
    items[j].setId(new BigInteger(String.valueOf(itemRequest.getId())));
    if (itemRequest.getUnitPrice() != null) {
      items[j].setUnitPrice(itemRequest.getUnitPrice().toString());
    }
    if (itemRequest.getQuantity() != null) {
      items[j].setQuantity(new BigInteger(String.valueOf(itemRequest.getQuantity())));
    }
    if (itemRequest.getAlternateTaxAmount() != null) {
      items[j].setAlternateTaxAmount(itemRequest.getAlternateTaxAmount().toString());
    }
    items[j].setAlternateTaxID(itemRequest.getAlternateTaxID());
    if (itemRequest.getAlternateTaxRate() != null) {
      items[j].setAlternateTaxRate(itemRequest.getAlternateTaxRate().toString());
    }
    items[j].setAlternateTaxType(itemRequest.getAlternateTaxType());
    if (itemRequest.getAlternateTaxTypeApplied() != null) {
      items[j].setAlternateTaxTypeApplied(itemRequest.getAlternateTaxTypeApplied().toString());
    }
    items[j].setBuyerRegistration(itemRequest.getBuyerRegistration());
    if (itemRequest.getCityOverrideAmount() != null) {
      items[j].setCityOverrideAmount(itemRequest.getCityOverrideAmount().toString());
    }
    if (itemRequest.getCityOverrideRate() != null) {
      items[j].setCityOverrideRate(itemRequest.getCityOverrideRate().toString());
    }
    if (itemRequest.getCommodityCode() != null) {
      items[j].setCommodityCode(itemRequest.getCommodityCode().toString());
    }
    if (itemRequest.getCountryOverrideAmount() != null) {
      items[j].setCountryOverrideAmount(itemRequest.getCountryOverrideAmount().toString());
    }
    if (itemRequest.getCountryOverrideRate() != null) {
      items[j].setCountryOverrideRate(itemRequest.getCountryOverrideRate().toString());
    }
    if (itemRequest.getCountyOverrideAmount() != null) {
      items[j].setCountyOverrideAmount(itemRequest.getCountyOverrideAmount().toString());
    }
    if (itemRequest.getCountyOverrideRate() != null) {
      items[j].setCountyOverrideRate(itemRequest.getCountyOverrideRate().toString());
    }
    if (itemRequest.getDiscountAmount() != null) {
      items[j].setDiscountAmount(itemRequest.getDiscountAmount().toString());
    }
    items[j].setDiscountIndicator(itemRequest.getDiscountIndicator());
    if (itemRequest.getDiscountRate() != null) {
      items[j].setDiscountRate(itemRequest.getDiscountRate().toString());
    }
    if (itemRequest.getDistrictOverrideAmount() != null) {
      items[j].setDistrictOverrideAmount(itemRequest.getDistrictOverrideAmount().toString());
    }
    if (itemRequest.getDistrictOverrideRate() != null) {
      items[j].setDistrictOverrideRate(itemRequest.getDistrictOverrideRate().toString());
    }
    items[j].setExport(itemRequest.getExport());
    items[j].setGiftCategory(itemRequest.getGiftCategory());
    items[j].setGrossNetIndicator(itemRequest.getGrossNetIndicator());
    items[j].setHostHedge(itemRequest.getHostHedge());
    if (itemRequest.getLocalTax() != null) {
      items[j].setLocalTax(itemRequest.getLocalTax().toString());
    }
    if (itemRequest.getNationalTax() != null) {
      items[j].setNationalTax(itemRequest.getNationalTax().toString());
    }
    items[j].setNoExport(itemRequest.getNoExport());
    items[j].setNonsensicalHedge(itemRequest.getNonsensicalHedge());
    items[j].setObscenitiesHedge(itemRequest.getObscenitiesHedge());
    items[j].setOrderAcceptanceCity(itemRequest.getOrderAcceptanceCity());
    items[j].setOrderAcceptanceCountry(itemRequest.getOrderAcceptanceCountry());
    items[j].setOrderAcceptanceCounty(itemRequest.getOrderAcceptanceCounty());
    items[j].setOrderAcceptancePostalCode(itemRequest.getOrderAcceptancePostalCode());
    items[j].setOrderAcceptanceState(itemRequest.getOrderAcceptanceState());
    items[j].setOrderOriginCity(itemRequest.getOrderOriginCity());
    items[j].setOrderOriginCountry(itemRequest.getOrderOriginCountry());
    items[j].setOrderOriginCounty(itemRequest.getOrderOriginCounty());
    items[j].setOrderOriginPostalCode(itemRequest.getOrderOriginPostalCode());
    items[j].setOrderOriginState(itemRequest.getOrderOriginState());
    items[j].setPhoneHedge(itemRequest.getPhoneHedge());
    items[j].setPointOfTitleTransfer(itemRequest.getPointOfTitleTransfer());
    items[j].setProductCode(itemRequest.getProductCode());
    items[j].setProductName(itemRequest.getProductName());
    items[j].setProductRisk(itemRequest.getProductRisk());
    items[j].setProductSKU(itemRequest.getProductSKU());
    items[j].setSellerRegistration(itemRequest.getSellerRegistration());
    items[j].setShipFromCity(itemRequest.getShipFromCity());
    items[j].setShipFromCountry(itemRequest.getShipFromCountry());
    items[j].setShipFromCounty(itemRequest.getShipFromCounty());
    items[j].setShipFromPostalCode(itemRequest.getShipFromPostalCode());
    items[j].setShipFromState(itemRequest.getShipFromState());
    if (itemRequest.getStateOverrideAmount() != null) {
      items[j].setStateOverrideAmount(itemRequest.getStateOverrideAmount().toString());
    }
    if (itemRequest.getStateOverrideRate() != null) {
      items[j].setStateOverrideRate(itemRequest.getStateOverrideRate().toString());
    }
    if (itemRequest.getTaxAmount() != null) {
      items[j].setTaxAmount(itemRequest.getTaxAmount().toString());
    }
    if (itemRequest.getTaxRate() != null) {
      items[j].setTaxRate(itemRequest.getTaxRate().toString());
    }
    items[j].setTaxTypeApplied(itemRequest.getTaxTypeApplied());
    items[j].setTimeCategory(itemRequest.getTimeCategory());
    items[j].setTimeHedge(itemRequest.getTimeHedge());
    if (itemRequest.getTotalAmount() != null) {
      items[j].setTotalAmount(itemRequest.getTotalAmount().toString());
    }
    items[j].setUnitOfMeasure(itemRequest.getUnitOfMeasure());
    if (itemRequest.getVatRate() != null) {
      items[j].setVatRate(itemRequest.getVatRate().toString());
    }
    items[j].setVelocityHedge(itemRequest.getVelocityHedge());
    items[j].setZeroCostToCustomerIndicator(itemRequest.getZeroCostToCustomerIndicator());
  }
  request.setItem(items);
}
