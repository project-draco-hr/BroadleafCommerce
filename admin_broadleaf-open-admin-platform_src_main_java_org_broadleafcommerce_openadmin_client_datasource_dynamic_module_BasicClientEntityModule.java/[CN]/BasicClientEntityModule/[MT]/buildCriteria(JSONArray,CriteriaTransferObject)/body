{
  if (criteriaArray != null) {
    for (int i=0; i <= criteriaArray.size() - 1; i++) {
      JSONObject itemObj=criteriaArray.get(i).isObject();
      if (itemObj != null) {
        JSONValue val=itemObj.get("fieldName");
        if (val == null) {
          JSONArray array=itemObj.get("criteria").isArray();
          buildCriteria(array,cto);
        }
 else {
          FilterAndSortCriteria filterCriteria=cto.get(val.isString().stringValue());
          String[] items=filterCriteria.getFilterValues();
          String[] newItems=new String[items.length + 1];
          int j=0;
          for (          String item : items) {
            newItems[j]=item;
            j++;
          }
          JSONValue value=itemObj.get("value");
          newItems[j]=value.toString();
          newItems[j]=newItems[j].replaceAll("\"","");
          String fieldTypeVal=null;
          DataSourceField field=dataSource.getField(val.isString().stringValue());
          if (field != null) {
            fieldTypeVal=field.getAttribute("fieldType");
          }
          SupportedFieldType fieldType=fieldTypeVal == null ? SupportedFieldType.STRING : SupportedFieldType.valueOf(fieldTypeVal);
          if (fieldType != null) {
switch (fieldType) {
case DECIMAL:
              processFilterValueClause(filterCriteria,newItems[j]);
            break;
case INTEGER:
          processFilterValueClause(filterCriteria,newItems[j]);
        break;
case MONEY:
      processFilterValueClause(filterCriteria,newItems[j]);
    break;
case DATE:
  if (newItems.length > 1) {
    for (int x=0; x < newItems.length; x++) {
      newItems[x]=updateMinutesFromDateFilter(newItems[x],x);
    }
    filterCriteria.setFilterValues(newItems);
  }
 else {
    String[] dateItems=new String[2];
    JSONValue operator=itemObj.get("operator");
    String op=operator.isString().stringValue();
    if (op.startsWith("greater")) {
      dateItems[0]=newItems[0];
      dateItems[1]=null;
    }
 else {
      dateItems[0]=null;
      dateItems[1]=newItems[0];
    }
    for (int x=0; x < dateItems.length; x++) {
      dateItems[x]=updateMinutesFromDateFilter(dateItems[x],x);
    }
    filterCriteria.setFilterValues(dateItems);
  }
break;
default :
filterCriteria.setFilterValues(newItems);
break;
}
}
 else {
filterCriteria.setFilterValues(newItems);
}
}
}
}
}
}
