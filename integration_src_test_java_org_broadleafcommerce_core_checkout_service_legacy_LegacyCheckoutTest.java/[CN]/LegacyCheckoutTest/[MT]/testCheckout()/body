{
  String userName="customer1";
  Customer customer=customerService.readCustomerByUsername(userName);
  Order order=orderService.createNewCartForCustomer(customer);
  Address address=buildAddress();
  FulfillmentGroup group=buildFulfillmentGroup(order,address);
  addSampleItemToOrder(order,group);
  order.setTotalShipping(new Money(0D));
  Map<OrderPayment,Referenced> map=addPaymentToOrder(order,address);
  orderService.save(order,true);
  CheckoutResponse response=checkoutService.performCheckout(order,map);
  for (  OrderPayment paymentInfo : response.getInfos().keySet()) {
    assert(paymentInfo.getReferenceNumber().equals("abc123"));
    assert(response.getInfos().get(paymentInfo).getReferenceNumber().equals("abc123"));
  }
  Referenced referenced=null;
  try {
    referenced=securePaymentInfoService.findSecurePaymentInfo("abc123",PaymentType.CREDIT_CARD);
  }
 catch (  Exception e) {
  }
  try {
    referenced=securePaymentInfoService.findSecurePaymentInfo("1234",PaymentType.CREDIT_CARD);
  }
 catch (  Exception e) {
  }
  assert(referenced == null);
  assert(order.getTotal().greaterThan(order.getSubTotal()));
  assert(response.getPaymentResponse().getResponseItems().size() > 0);
}
