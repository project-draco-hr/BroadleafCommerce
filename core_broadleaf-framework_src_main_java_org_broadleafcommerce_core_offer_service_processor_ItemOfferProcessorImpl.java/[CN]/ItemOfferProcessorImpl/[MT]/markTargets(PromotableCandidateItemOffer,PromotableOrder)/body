{
  Offer promotion=itemOffer.getOffer();
  if (itemOffer.getCandidateTargetsMap().keySet().isEmpty()) {
    return false;
  }
  for (  OfferItemCriteria itemCriteria : itemOffer.getCandidateTargetsMap().keySet()) {
    List<PromotableOrderItem> promotableItems=itemOffer.getCandidateTargetsMap().get(itemCriteria);
    List<PromotableOrderItemPriceDetail> priceDetails=buildPriceDetailListFromOrderItems(promotableItems);
    Collections.sort(priceDetails,getTargetItemComparator(itemOffer.getOffer().getApplyDiscountToSalePrice()));
    int targetQtyNeeded=itemCriteria.getQuantity();
    for (    PromotableOrderItemPriceDetail detail : priceDetails) {
      int itemQtyAvailableToBeUsedAsTarget=detail.getQuantityAvailableToBeUsedAsTarget(itemOffer);
      if (itemQtyAvailableToBeUsedAsTarget > 0) {
        if (promotion.isUnlimitedUsePerOrder() || (itemOffer.getUses() < promotion.getMaxUsesPerOrder())) {
          int qtyToMarkAsTarget=Math.min(targetQtyNeeded,itemQtyAvailableToBeUsedAsTarget);
          targetQtyNeeded-=qtyToMarkAsTarget;
          detail.addPromotionDiscount(itemOffer,itemCriteria,qtyToMarkAsTarget);
        }
      }
      if (targetQtyNeeded == 0) {
        break;
      }
    }
    if (targetQtyNeeded != 0) {
      return false;
    }
  }
  return true;
}
