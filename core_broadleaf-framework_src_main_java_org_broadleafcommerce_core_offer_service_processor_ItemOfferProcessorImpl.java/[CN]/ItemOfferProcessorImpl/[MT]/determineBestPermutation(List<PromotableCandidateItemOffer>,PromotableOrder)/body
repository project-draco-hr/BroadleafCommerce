{
  List<List<PromotableCandidateItemOffer>> permutations=buildItemOfferPermutations(itemOffers);
  List<PromotableCandidateItemOffer> bestOfferList=null;
  Money lowestSubtotal=null;
  if (permutations.size() > 1) {
    for (    List<PromotableCandidateItemOffer> offerList : permutations) {
      for (      PromotableCandidateItemOffer offer : offerList) {
        offer.resetUses();
      }
      applyAllItemOffers(offerList,order);
      chooseSaleOrRetailAdjustments(order);
      Money testSubtotal=order.calculateSubtotalWithAdjustments();
      if (lowestSubtotal == null || testSubtotal.lessThan(lowestSubtotal)) {
        lowestSubtotal=testSubtotal;
        bestOfferList=offerList;
      }
      for (      PromotableOrderItem item : order.getDiscountableOrderItems()) {
        item.resetPriceDetails();
      }
    }
  }
 else {
    bestOfferList=permutations.get(0);
  }
  for (  PromotableCandidateItemOffer offer : bestOfferList) {
    offer.resetUses();
  }
  applyAllItemOffers(bestOfferList,order);
}
