{
  BLCMain.NON_MODAL_PROGRESS.startProgress();
  Criteria criteria=request.getCriteria();
  criteria.addCriteria(((PagesTreeDataSource)dataSource).permanentCriteria);
  CriteriaTransferObject cto=getCto(request);
  service.fetch(new PersistencePackage(ceilingEntityFullyQualifiedClassname,null,persistencePerspective,customCriteria),cto,new EntityServiceAsyncCallback<DynamicResultSet>(EntityOperationType.FETCH,requestId,request,response,dataSource){
    public void onSuccess(    DynamicResultSet result){
      super.onSuccess(result);
      TreeNode[] recordList=buildRecords(result,null);
      for (      TreeNode node : recordList) {
        if ("org.broadleafcommerce.cms.page.domain.PageImpl".equals(node.getAttribute("_type"))) {
          node.setIsFolder(false);
          if (node.getAttributeAsBoolean("lockedFlag")) {
            node.setIcon(GWT.getModuleBaseURL() + "admin/images/lock_page.png");
          }
        }
      }
      response.setData(recordList);
      response.setTotalRows(result.getTotalRecords());
      if (cb != null) {
        cb.onSuccess(dataSource);
      }
      dataSource.processResponse(requestId,response);
    }
    @Override protected void onSecurityException(    ApplicationSecurityException exception){
      super.onSecurityException(exception);
      if (cb != null) {
        cb.onFailure(exception);
      }
    }
    @Override protected void onOtherException(    Throwable exception){
      super.onOtherException(exception);
      if (cb != null) {
        cb.onFailure(exception);
      }
    }
    @Override protected void onError(    EntityOperationType opType,    String requestId,    DSRequest request,    DSResponse response,    Throwable caught){
      super.onError(opType,requestId,request,response,caught);
      if (cb != null) {
        cb.onFailure(caught);
      }
    }
  }
);
}
