{
  String sectionKey=getSectionKey(pathVars);
  String sectionClassName=getClassNameForSection(sectionKey);
  PersistencePackageRequest ppr=getSectionPersistencePackageRequest(sectionClassName);
  ClassMetadata cmd=service.getClassMetadata(ppr);
  Entity entity=service.getRecord(ppr,id);
  Map<String,Entity[]> subRecordsMap=service.getRecordsForAllSubCollections(ppr,entity);
  EntityForm entityForm=formService.buildEntityForm(cmd,entity,subRecordsMap);
  model.addAttribute("entity",entity);
  model.addAttribute("entityForm",entityForm);
  model.addAttribute("currentUrl",request.getRequestURL().toString());
  for (  Tab tab : entityForm.getTabs()) {
    if (!CollectionUtils.isEmpty(tab.getRuleBuilders())) {
      String additionalClasses=(String)model.asMap().get("additionalClasses");
      if (additionalClasses == null) {
        additionalClasses="";
      }
      additionalClasses=additionalClasses.concat(" rulebuilder-form ");
      model.addAttribute("additionalClasses",additionalClasses);
      break;
    }
  }
  setModelAttributes(model,sectionKey);
  if (isAjaxRequest(request)) {
    model.addAttribute("viewType","modal/entityView");
    model.addAttribute("modalHeaderType","viewEntity");
    return "modules/modalContainer";
  }
 else {
    model.addAttribute("viewType","entityEdit");
    return "modules/defaultContainer";
  }
}
