{
  String sectionKey=getSectionKey(pathVars);
  String sectionClassName=getClassNameForSection(sectionKey);
  List<SectionCrumb> crumbs=getSectionCrumbs(request,null,null);
  PersistencePackageRequest ppr=getSectionPersistencePackageRequest(sectionClassName,requestParams,crumbs,pathVars);
  ClassMetadata cmd=service.getClassMetadata(ppr).getDynamicResultSet().getClassMetaData();
  DynamicResultSet drs=service.getRecords(ppr).getDynamicResultSet();
  ListGrid listGrid=formService.buildMainListGrid(drs,cmd,sectionKey,crumbs);
  List<EntityFormAction> mainActions=new ArrayList<EntityFormAction>();
  addAddActionIfAllowed(sectionClassName,cmd,mainActions);
  Field firstField=listGrid.getHeaderFields().iterator().next();
  if (requestParams.containsKey(firstField.getName())) {
    model.addAttribute("mainSearchTerm",requestParams.get(firstField.getName()).get(0));
  }
  extensionManager.getProxy().addAdditionalMainActions(sectionClassName,mainActions);
  if (requestParams.containsKey("headerFlash")) {
    model.addAttribute("headerFlash",requestParams.get("headerFlash").get(0));
  }
  model.addAttribute("entityFriendlyName",cmd.getPolymorphicEntities().getFriendlyName());
  model.addAttribute("currentUrl",request.getRequestURL().toString());
  model.addAttribute("listGrid",listGrid);
  model.addAttribute("mainActions",mainActions);
  model.addAttribute("viewType","entityList");
  setModelAttributes(model,sectionKey);
  return "modules/defaultContainer";
}
