{
  String sectionKey=getSectionKey(pathVars);
  String sectionClassName=getClassNameForSection(sectionKey);
  PersistencePackageRequest ppr=getSectionPersistencePackageRequest(sectionClassName,requestParams);
  ClassMetadata cmd=service.getClassMetadata(ppr);
  DynamicResultSet drs=service.getRecords(ppr);
  ListGrid listGrid=formService.buildMainListGrid(drs,cmd,sectionKey);
  List<EntityFormAction> mainActions=new ArrayList<EntityFormAction>();
  boolean canCreate=true;
  try {
    adminRemoteSecurityService.securityCheck(sectionClassName,EntityOperationType.ADD);
  }
 catch (  ServiceException e) {
    if (e instanceof SecurityServiceException) {
      canCreate=false;
    }
  }
  if (canCreate) {
    checkReadOnly: {
      for (      Property property : cmd.getProperties()) {
        if (property.getMetadata() instanceof BasicFieldMetadata) {
          if (((BasicFieldMetadata)property.getMetadata()).getReadOnly() == null || !((BasicFieldMetadata)property.getMetadata()).getReadOnly()) {
            break checkReadOnly;
          }
        }
      }
      canCreate=false;
    }
  }
  if (canCreate) {
    mainActions.add(DefaultMainActions.ADD);
  }
  mainEntityActionsExtensionManager.modifyMainActions(cmd,mainActions);
  model.addAttribute("entityFriendlyName",cmd.getPolymorphicEntities().getFriendlyName());
  model.addAttribute("currentUrl",request.getRequestURL().toString());
  model.addAttribute("listGrid",listGrid);
  model.addAttribute("mainActions",mainActions);
  model.addAttribute("viewType","entityList");
  setModelAttributes(model,sectionKey);
  return "modules/defaultContainer";
}
