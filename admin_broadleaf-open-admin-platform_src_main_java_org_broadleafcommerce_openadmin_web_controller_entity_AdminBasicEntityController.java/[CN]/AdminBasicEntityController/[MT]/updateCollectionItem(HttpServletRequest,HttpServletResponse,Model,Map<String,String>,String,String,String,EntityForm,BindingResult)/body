{
  String sectionKey=getSectionKey(pathVars);
  String mainClassName=getClassNameForSection(sectionKey);
  ClassMetadata mainMetadata=service.getClassMetadata(getSectionPersistencePackageRequest(mainClassName)).getDynamicResultSet().getClassMetaData();
  Property collectionProperty=mainMetadata.getPMap().get(collectionField);
  PersistencePackageRequest ppr=getSectionPersistencePackageRequest(mainClassName);
  Entity entity=service.getRecord(ppr,id,mainMetadata,false).getDynamicResultSet().getRecords()[0];
  PersistenceResponse persistenceResponse=service.updateSubCollectionEntity(entityForm,mainMetadata,collectionProperty,entity,collectionItemId);
  Entity savedEntity=persistenceResponse.getEntity();
  entityFormValidator.validate(entityForm,savedEntity,result);
  if (result.hasErrors()) {
    return showViewUpdateCollection(request,model,pathVars,id,collectionField,collectionItemId,"updateCollectionItem",entityForm,savedEntity);
  }
  ListGrid listGrid=getCollectionListGrid(mainMetadata,entity,collectionProperty,null,sectionKey,persistenceResponse);
  model.addAttribute("listGrid",listGrid);
  setModelAttributes(model,sectionKey);
  return "views/standaloneListGrid";
}
