{
  String sectionKey=getSectionKey(pathVars);
  String mainClassName=getClassNameForSection(sectionKey);
  List<SectionCrumb> sectionCrumbs=getSectionCrumbs(request,sectionKey,id);
  ClassMetadata mainMetadata=service.getClassMetadata(getSectionPersistencePackageRequest(mainClassName,sectionCrumbs)).getDynamicResultSet().getClassMetaData();
  Property collectionProperty=mainMetadata.getPMap().get(collectionField);
  if (StringUtils.isBlank(entityForm.getEntityType())) {
    FieldMetadata fmd=collectionProperty.getMetadata();
    if (fmd instanceof BasicCollectionMetadata) {
      entityForm.setEntityType(((BasicCollectionMetadata)fmd).getCollectionCeilingEntity());
    }
  }
  PersistencePackageRequest ppr=getSectionPersistencePackageRequest(mainClassName,sectionCrumbs);
  Entity entity=service.getRecord(ppr,id,mainMetadata,false).getDynamicResultSet().getRecords()[0];
  PersistenceResponse persistenceResponse=service.addSubCollectionEntity(entityForm,mainMetadata,collectionProperty,entity,sectionCrumbs);
  Entity savedEntity=persistenceResponse.getEntity();
  entityFormValidator.validate(entityForm,savedEntity,result);
  if (result.hasErrors()) {
    FieldMetadata md=collectionProperty.getMetadata();
    ppr=PersistencePackageRequest.fromMetadata(md,sectionCrumbs);
    return buildAddCollectionItemModel(request,response,model,id,collectionField,sectionKey,collectionProperty,md,ppr,entityForm,savedEntity);
  }
  ListGrid listGrid=getCollectionListGrid(mainMetadata,entity,collectionProperty,null,sectionKey,persistenceResponse,sectionCrumbs);
  model.addAttribute("listGrid",listGrid);
  setModelAttributes(model,sectionKey);
  return "views/standaloneListGrid";
}
