{
  String sectionKey=getSectionKey(pathVars);
  String sectionClassName=getClassNameForSection(sectionKey);
  List<SectionCrumb> sectionCrumbs=getSectionCrumbs(request,sectionKey,id);
  PersistencePackageRequest ppr=getSectionPersistencePackageRequest(sectionClassName,sectionCrumbs,pathVars);
  extractDynamicFormFields(entityForm);
  Entity entity=service.updateEntity(entityForm,getSectionCustomCriteria(),sectionCrumbs).getEntity();
  entityFormValidator.validate(entityForm,entity,result);
  if (result.hasErrors()) {
    model.addAttribute("headerFlash","save.unsuccessful");
    model.addAttribute("headerFlashAlert",true);
    Map<String,DynamicResultSet> subRecordsMap=service.getRecordsForAllSubCollections(ppr,entity,sectionCrumbs);
    ClassMetadata cmd=service.getClassMetadata(ppr).getDynamicResultSet().getClassMetaData();
    entityForm.clearFieldsMap();
    formService.populateEntityForm(cmd,entity,subRecordsMap,entityForm,sectionCrumbs);
    model.addAttribute("entity",entity);
    model.addAttribute("currentUrl",request.getRequestURL().toString());
    model.addAttribute("hideTopLevelErrors",hideTopLevelErrors);
    setModelAttributes(model,sectionKey);
    if (isAjaxRequest(request)) {
      entityForm.setReadOnly();
      model.addAttribute("viewType","modal/entityView");
      model.addAttribute("modalHeaderType","viewEntity");
      return "modules/modalContainer";
    }
 else {
      model.addAttribute("viewType","entityEdit");
      return "modules/defaultContainer";
    }
  }
  ra.addFlashAttribute("headerFlash","save.successful");
  return "redirect:/" + sectionKey + "/"+ id;
}
