{
  String sectionKey=getSectionKey(pathVars);
  String sectionClassName=getClassNameForSection(sectionKey);
  PersistencePackageRequest ppr=getSectionPersistencePackageRequest(sectionClassName);
  Map<String,Field> dynamicFields=new HashMap<String,Field>();
  for (  Entry<String,Field> entry : entityForm.getFields().entrySet()) {
    if (entry.getKey().contains(DynamicEntityFormInfo.FIELD_SEPARATOR)) {
      dynamicFields.put(entry.getKey(),entry.getValue());
    }
  }
  for (  Entry<String,Field> entry : dynamicFields.entrySet()) {
    entityForm.removeField(entry.getKey());
  }
  for (  Entry<String,Field> entry : dynamicFields.entrySet()) {
    String[] fieldName=entry.getKey().split("\\" + DynamicEntityFormInfo.FIELD_SEPARATOR);
    DynamicEntityFormInfo info=entityForm.getDynamicFormInfo(fieldName[0]);
    EntityForm dynamicForm=entityForm.getDynamicForm(fieldName[0]);
    if (dynamicForm == null) {
      dynamicForm=new EntityForm();
      dynamicForm.setCeilingEntityClassname(info.getCeilingClassName());
      entityForm.putDynamicForm(fieldName[0],dynamicForm);
    }
    entry.getValue().setName(fieldName[1]);
    dynamicForm.addField(entry.getValue());
  }
  Entity entity=service.updateEntity(entityForm,getSectionCustomCriteria());
  entityFormValidator.validate(entityForm,entity,result);
  if (result.hasErrors()) {
    model.addAttribute("headerFlash","save.unsuccessful");
    model.addAttribute("headerFlashAlert",true);
    Map<String,DynamicResultSet> subRecordsMap=service.getRecordsForAllSubCollections(ppr,entity);
    ClassMetadata cmd=service.getClassMetadata(ppr);
    entityForm.clearFieldsMap();
    formService.populateEntityForm(cmd,entity,subRecordsMap,entityForm);
    model.addAttribute("entity",entity);
    model.addAttribute("currentUrl",request.getRequestURL().toString());
    setModelAttributes(model,sectionKey);
    if (isAjaxRequest(request)) {
      entityForm.setReadOnly();
      model.addAttribute("viewType","modal/entityView");
      model.addAttribute("modalHeaderType","viewEntity");
      return "modules/modalContainer";
    }
 else {
      model.addAttribute("viewType","entityEdit");
      return "modules/defaultContainer";
    }
  }
  ra.addFlashAttribute("headerFlash","save.successful");
  return "redirect:/" + sectionKey + "/"+ id;
}
