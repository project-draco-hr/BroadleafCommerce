{
  String sectionKey=getSectionKey(pathVars);
  String sectionClassName=getClassNameForSection(sectionKey);
  ClassMetadata cmd=service.getClassMetadata(getSectionPersistencePackageRequest(sectionClassName));
  if (StringUtils.isBlank(entityType)) {
    if (cmd.getPolymorphicEntities().getChildren().length == 0) {
      entityType=cmd.getPolymorphicEntities().getFullyQualifiedClassname();
    }
 else {
      entityType=getDefaultEntityType();
    }
  }
 else {
    entityType=URLDecoder.decode(entityType,"UTF-8");
  }
  if (StringUtils.isBlank(entityType)) {
    List<ClassTree> entityTypes=getAddEntityTypes(cmd.getPolymorphicEntities());
    model.addAttribute("entityTypes",entityTypes);
    model.addAttribute("viewType","modal/entityTypeSelection");
  }
 else {
    ClassMetadata specificTypeMd=service.getClassMetadata(getSectionPersistencePackageRequest(entityType));
    EntityForm entityForm=formService.buildEntityForm(specificTypeMd);
    entityForm.setCeilingEntityClassname(cmd.getCeilingType());
    entityForm.setEntityType(specificTypeMd.getCeilingType());
    formService.removeNonApplicableFields(cmd,entityForm,entityType);
    model.addAttribute("entityForm",entityForm);
    model.addAttribute("viewType","modal/entityAdd");
  }
  model.addAttribute("currentUrl",request.getRequestURL().toString());
  model.addAttribute("modalHeaderType","addEntity");
  setModelAttributes(model,sectionKey);
  return "modules/modalContainer";
}
