{
  String sectionKey=getSectionKey(pathVars);
  String mainClassName=getClassNameForSection(sectionKey);
  ClassMetadata mainMetadata=service.getClassMetadata(getSectionPersistencePackageRequest(mainClassName)).getDynamicResultSet().getClassMetaData();
  Property collectionProperty=mainMetadata.getPMap().get(collectionField);
  FieldMetadata md=collectionProperty.getMetadata();
  PersistencePackageRequest ppr=getSectionPersistencePackageRequest(mainClassName);
  Entity parentEntity=service.getRecord(ppr,id,mainMetadata,false).getDynamicResultSet().getRecords()[0];
  ppr=PersistencePackageRequest.fromMetadata(md);
  if (md instanceof AdornedTargetCollectionMetadata) {
    AdornedTargetCollectionMetadata fmd=(AdornedTargetCollectionMetadata)md;
    AdornedTargetList atl=ppr.getAdornedList();
    EntityForm entityForm=formService.buildAdornedListForm(fmd,ppr.getAdornedList(),id);
    Entity entity=service.getAdvancedCollectionRecord(mainMetadata,parentEntity,collectionProperty,collectionItemId).getDynamicResultSet().getRecords()[0];
    formService.populateEntityFormFields(entityForm,entity);
    formService.populateAdornedEntityFormFields(entityForm,entity,ppr.getAdornedList());
    int sequenceValue=Integer.parseInt(newSequence) + 1;
    Field field=entityForm.findField(atl.getSortField());
    field.setValue(String.valueOf(sequenceValue));
    Map<String,Object> responseMap=new HashMap<String,Object>();
    service.updateSubCollectionEntity(entityForm,mainMetadata,collectionProperty,entity,collectionItemId);
    responseMap.put("status","ok");
    responseMap.put("field",collectionField);
    return responseMap;
  }
 else {
    throw new UnsupportedOperationException("Cannot handle sequencing for non adorned target collection fields.");
  }
}
