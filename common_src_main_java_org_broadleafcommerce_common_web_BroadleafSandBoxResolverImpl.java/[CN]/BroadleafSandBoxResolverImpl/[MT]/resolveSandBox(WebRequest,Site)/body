{
  SandBox currentSandbox=null;
  if (!sandBoxPreviewEnabled) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Sandbox preview disabled. Setting sandbox to production");
    }
    request.setAttribute(SANDBOX_VAR,currentSandbox,WebRequest.SCOPE_REQUEST);
  }
 else {
    Long sandboxId=null;
    if ((request.getParameter("blClearSandBox") == null) && (request.getParameter("blSandboxDateTimeRibbonProduction") == null)) {
      sandboxId=lookupSandboxId(request);
    }
 else {
      if (LOG.isTraceEnabled()) {
        LOG.trace("Removing sandbox from session.");
      }
      if (BLCRequestUtils.isOKtoUseSession(request)) {
        request.removeAttribute(SANDBOX_DATE_TIME_VAR,WebRequest.SCOPE_GLOBAL_SESSION);
        request.removeAttribute(SANDBOX_ID_VAR,WebRequest.SCOPE_GLOBAL_SESSION);
      }
    }
    if (sandboxId != null) {
      currentSandbox=sandBoxDao.retrieve(sandboxId);
      request.setAttribute(SANDBOX_VAR,currentSandbox,WebRequest.SCOPE_REQUEST);
      if (currentSandbox != null && !SandBoxType.PRODUCTION.equals(currentSandbox.getSandBoxType())) {
        setContentTime(request);
      }
    }
  }
  if (LOG.isTraceEnabled()) {
    if (currentSandbox != null) {
      LOG.trace("Serving request using sandbox: " + currentSandbox);
    }
 else {
      LOG.trace("Serving request without a sandbox.");
    }
  }
  Date currentSystemDateTime=SystemTime.asDate(true);
  Calendar sandboxDateTimeCalendar=Calendar.getInstance();
  sandboxDateTimeCalendar.setTime(currentSystemDateTime);
  request.setAttribute(SANDBOX_DISPLAY_DATE_TIME_DATE_PARAM,CONTENT_DATE_DISPLAY_FORMATTER.format(currentSystemDateTime),WebRequest.SCOPE_REQUEST);
  request.setAttribute(SANDBOX_DISPLAY_DATE_TIME_HOURS_PARAM,CONTENT_DATE_DISPLAY_HOURS_FORMATTER.format(currentSystemDateTime),WebRequest.SCOPE_REQUEST);
  request.setAttribute(SANDBOX_DISPLAY_DATE_TIME_MINUTES_PARAM,CONTENT_DATE_DISPLAY_MINUTES_FORMATTER.format(currentSystemDateTime),WebRequest.SCOPE_REQUEST);
  request.setAttribute(SANDBOX_DISPLAY_DATE_TIME_AMPM_PARAM,sandboxDateTimeCalendar.get(Calendar.AM_PM),WebRequest.SCOPE_REQUEST);
  return currentSandbox;
}
