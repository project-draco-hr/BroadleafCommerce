{
  HashMap<String,Object> model=new HashMap<String,Object>();
  List<Category> breadcrumbCategories=new ArrayList<Category>();
  boolean categoryError=buildBreadcrumbCategories(request,breadcrumbCategories);
  boolean productError=false;
  boolean productFound=false;
  String view=defaultCategoryView;
  String productId=request.getParameter("productId");
  if (productId != null) {
    Product product=catalogService.findProductById(new Long(productId));
    if (product != null) {
      model.put("currentProduct",product);
      view=defaultProductView;
      productFound=true;
      if (categoryError) {
        categoryError=buildBreadcrumbCategoriesFromProduct(product,breadcrumbCategories);
      }
    }
 else {
      productError=true;
    }
  }
  model.put("categoryError",categoryError);
  model.put("productError",productError);
  Category currentCategory=null;
  if (breadcrumbCategories.size() > 0) {
    currentCategory=breadcrumbCategories.get(breadcrumbCategories.size() - 1);
  }
 else {
    currentCategory=catalogService.findCategoryById(defaultCategoryId);
  }
  model.put("currentCategory",currentCategory);
  model.put("breadcrumbCategories",breadcrumbCategories);
  if (productFound) {
    view=defaultProductView;
  }
 else {
    if (currentCategory.getUrl() != null) {
      view=currentCategory.getUrl();
    }
 else     if (currentCategory.getDisplayTemplate() != null) {
      view=categoryTemplatePrefix + currentCategory.getDisplayTemplate();
    }
 else {
      view=defaultCategoryView;
    }
  }
  return new ModelAndView(view,model);
}
