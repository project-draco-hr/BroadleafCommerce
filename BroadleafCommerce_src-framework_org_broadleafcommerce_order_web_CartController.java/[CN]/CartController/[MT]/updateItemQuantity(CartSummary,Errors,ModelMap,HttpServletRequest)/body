{
  if (errors.hasErrors()) {
    model.addAttribute("cartSummary",cartSummary);
    return cartView;
  }
  Order currentCartOrder=retrieveCartOrder(request,model);
  List<OrderItem> orderItems=currentCartOrder.getOrderItems();
  for (  CartOrderItem cartOrderItem : cartSummary.getRows()) {
    OrderItem orderItem=(OrderItem)CollectionUtils.find(orderItems,new BeanPropertyValueEqualsPredicate("id",cartOrderItem.getOrderItem().getId()));
    if (orderItem != null) {
      if (cartOrderItem.getQuantity() > 0) {
        orderItem.setQuantity(cartOrderItem.getQuantity());
        try {
          cartService.updateItemInOrder(currentCartOrder,orderItem);
        }
 catch (        ItemNotFoundException e) {
          LOG.error("Item not found in order: (" + orderItem.getId() + ")",e);
        }
catch (        PricingException e) {
          LOG.error("Unable to price the order: (" + currentCartOrder.getId() + ")",e);
        }
      }
 else {
        try {
          cartService.removeItemFromOrder(currentCartOrder,orderItem);
        }
 catch (        Exception e) {
          LOG.error("Unable to remove item from the order: (" + currentCartOrder.getId() + ")");
        }
      }
    }
  }
  return cartView;
}
