{
  super();
  toolBar=new ToolStrip();
  toolBar.setHeight(20);
  toolBar.setWidth100();
  toolBar.addSpacer(6);
  addButton=new ToolStripButton();
  addButton.setDisabled(true);
  addButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/plus.png");
  toolBar.addButton(addButton);
  removeButton=new ToolStripButton();
  removeButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/minus.png");
  removeButton.setDisabled(true);
  toolBar.addButton(removeButton);
  toolBar.addSpacer(6);
  Label categoryLabel=new Label();
  categoryLabel.setContents(title);
  categoryLabel.setWrap(false);
  toolBar.addMember(categoryLabel);
  toolBar.addFill();
  HashMap<String,String> polymorphicEntities=((DynamicEntityDataSource)dataSource).getPolymorphicEntities();
  if (polymorphicEntities.size() > 1) {
    entityType.setShowTitle(false);
    entityType.setWidth(120);
    LinkedHashMap<String,String> valueMap=new LinkedHashMap<String,String>();
    for (    String name : polymorphicEntities.keySet()) {
      valueMap.put(name,polymorphicEntities.get(name));
    }
    entityType.setValueMap(valueMap);
    entityType.setDefaultValue(((DynamicEntityDataSource)dataSource).getDefaultNewEntityFullyQualifiedClassname());
    entityType.addFocusHandler(new FocusHandler(){
      public void onFocus(      FocusEvent event){
        ((ComboBoxItem)event.getItem()).selectValue();
      }
    }
);
    toolBar.addFormItem(entityType);
  }
  addMember(toolBar);
  grid=new ColumnTree();
  grid.setDataSource(dataSource);
  grid.setAutoFetchData(true);
  grid.setDataPageSize(10);
  grid.setShowOpenIcons(false);
  grid.setShowDropIcons(false);
  grid.setClosedIconSuffix("");
  grid.setShowHeaders(true);
  grid.setShowNodeCount(true);
  grid.setLoadDataOnDemand(true);
  addMember(grid);
}
