{
  if (baseUrl.contains("?")) {
    throw new IllegalArgumentException("baseUrl contained a ? indicating it is not a base url");
  }
  StringBuilder sb=new StringBuilder();
  sb.append(baseUrl);
  boolean atLeastOneParam=false;
  if (parameters != null && parameters.size() > 0) {
    for (    Entry<String,String[]> entry : parameters.entrySet()) {
      if (entry.getValue().length > 0) {
        atLeastOneParam=true;
      }
    }
  }
  if (atLeastOneParam) {
    sb.append("?");
  }
 else {
    return sb.toString();
  }
  for (  Entry<String,String[]> entry : parameters.entrySet()) {
    String key=entry.getKey();
    for (    String value : entry.getValue()) {
      StringBuilder parameter=new StringBuilder();
      try {
        parameter.append(URLEncoder.encode(key,"UTF-8"));
        parameter.append("=");
        parameter.append(URLEncoder.encode(value,"UTF-8"));
        parameter.append("&");
      }
 catch (      UnsupportedEncodingException e) {
        parameter=null;
      }
      sb.append(parameter);
    }
  }
  String url=sb.toString();
  if (url.charAt(url.length() - 1) == '&') {
    url=url.substring(0,url.length() - 1);
  }
  return url;
}
