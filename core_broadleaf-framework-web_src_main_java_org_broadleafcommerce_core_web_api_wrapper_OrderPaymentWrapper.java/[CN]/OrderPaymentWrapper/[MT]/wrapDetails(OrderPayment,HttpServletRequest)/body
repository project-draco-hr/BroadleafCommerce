{
  this.id=model.getId();
  if (model.getOrder() != null) {
    this.orderId=model.getOrder().getId();
  }
  if (model.getType() != null) {
    this.type=model.getType().getType();
  }
  if (model.getGatewayType() != null) {
    this.gatewayType=model.getGatewayType().getType();
  }
  if (model.getBillingAddress() != null) {
    AddressWrapper addressWrapper=(AddressWrapper)context.getBean(AddressWrapper.class.getName());
    addressWrapper.wrapDetails(model.getBillingAddress(),request);
    this.billingAddress=addressWrapper;
  }
  if (model.getAmount() != null) {
    this.amount=model.getAmount().getAmount();
    this.currency=model.getAmount().getCurrency();
  }
  if (model.getTransactions() != null && !model.getTransactions().isEmpty()) {
    this.transactions=new ArrayList<PaymentTransactionWrapper>();
    for (    PaymentTransaction transaction : model.getTransactions()) {
      PaymentTransactionWrapper transactionWrapper=(PaymentTransactionWrapper)context.getBean(PaymentTransactionWrapper.class.getName());
      transactionWrapper.wrapSummary(transaction,request);
      this.transactions.add(transactionWrapper);
    }
  }
  this.referenceNumber=model.getReferenceNumber();
}
