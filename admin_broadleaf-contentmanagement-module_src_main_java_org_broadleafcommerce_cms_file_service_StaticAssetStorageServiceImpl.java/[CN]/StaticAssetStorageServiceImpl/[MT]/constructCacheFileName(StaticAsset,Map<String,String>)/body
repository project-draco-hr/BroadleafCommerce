{
  String fileName=staticAsset.getFullUrl();
  StringBuilder sb=new StringBuilder(200);
  sb.append(fileName.substring(0,fileName.lastIndexOf('.')));
  sb.append("---");
  StringBuilder sb2=new StringBuilder(200);
  SimpleDateFormat format=new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");
  if (staticAsset.getAuditable() != null) {
    sb2.append(format.format(staticAsset.getAuditable().getDateUpdated() == null ? staticAsset.getAuditable().getDateCreated() : staticAsset.getAuditable().getDateUpdated()));
  }
  if (parameterMap != null) {
    for (    Map.Entry<String,String> entry : parameterMap.entrySet()) {
      sb2.append('-');
      sb2.append(entry.getKey());
      sb2.append('-');
      sb2.append(entry.getValue());
    }
  }
  String digest;
  try {
    MessageDigest md=MessageDigest.getInstance("MD5");
    byte[] messageDigest=md.digest(sb2.toString().getBytes());
    BigInteger number=new BigInteger(1,messageDigest);
    digest=number.toString(16);
  }
 catch (  NoSuchAlgorithmException e) {
    throw new RuntimeException(e);
  }
  sb.append(pad(digest,32,'0'));
  sb.append(fileName.substring(fileName.lastIndexOf('.')));
  return sb.toString();
}
