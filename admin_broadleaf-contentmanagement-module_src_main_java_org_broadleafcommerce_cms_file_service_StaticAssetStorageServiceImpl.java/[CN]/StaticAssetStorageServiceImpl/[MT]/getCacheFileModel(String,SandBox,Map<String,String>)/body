{
  StaticAsset staticAsset=findStaticAsset(fullUrl,sandBox);
  if (staticAsset == null) {
    if (sandBox == null) {
      throw new RuntimeException("Unable to find an asset for the url (" + fullUrl + ") using the production sandBox.");
    }
 else {
      throw new RuntimeException("Unable to find an asset for the url (" + fullUrl + ") using the sandBox id ("+ sandBox.getId()+ "), or the production sandBox.");
    }
  }
  String mimeType=staticAsset.getMimeType();
  Map<String,String> convertedParameters=namedOperationManager.manageNamedParameters(parameterMap);
  String returnFilePath=null;
  if (StorageType.FILESYSTEM.equals(staticAsset.getStorageType()) && convertedParameters.isEmpty()) {
    returnFilePath=generateStorageFileName(staticAsset.getFullUrl());
  }
 else {
    String cacheName=constructCacheFileName(staticAsset,convertedParameters);
    File cacheFile=new File(cacheName);
    if (!cacheFile.exists()) {
      InputStream original=findInputStreamForStaticAsset(staticAsset);
      if (!convertedParameters.isEmpty()) {
        Operation[] operations=artifactService.buildOperations(convertedParameters,original,staticAsset.getMimeType());
        InputStream converted=artifactService.convert(original,operations,staticAsset.getMimeType());
        createCacheFile(converted,cacheFile);
        if ("image/gif".equals(mimeType)) {
          mimeType="image/png";
        }
      }
 else {
        createCacheFile(original,cacheFile);
      }
    }
    returnFilePath=cacheFile.getAbsolutePath();
  }
  Map<String,String> model=new HashMap<String,String>(2);
  model.put("cacheFilePath",returnFilePath);
  model.put("mimeType",mimeType);
  return model;
}
