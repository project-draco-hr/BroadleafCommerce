{
  List<USPSContainerItemRequest> itemRequests=new ArrayList<USPSContainerItemRequest>();
  for (  FulfillmentGroupItem fgItem : fulfillmentGroup.getFulfillmentGroupItems()) {
    List<DiscreteOrderItem> discreteItems=new ArrayList<DiscreteOrderItem>();
    OrderItem orderItem=fgItem.getOrderItem();
    if (BundleOrderItem.class.isAssignableFrom(orderItem.getClass())) {
      discreteItems.addAll(((BundleOrderItem)orderItem).getDiscreteOrderItems());
    }
 else     if (GiftWrapOrderItem.class.isAssignableFrom(orderItem.getClass())) {
      List<OrderItem> wrappedItems=((GiftWrapOrderItem)orderItem).getWrappedItems();
      if (!fulfillmentGroup.getOrder().getOrderItems().containsAll(wrappedItems)) {
        throw new ShippingPriceException("To price shipping correctly, the items contained in the GiftWrapOrderItem must also individually appear in the order, not just in the wrappedItems collection of GiftWrapOrderItem.");
      }
      continue;
    }
 else     if (DiscreteOrderItem.class.isAssignableFrom(orderItem.getClass())) {
      discreteItems.add((DiscreteOrderItem)orderItem);
    }
    int counter=0;
    for (    DiscreteOrderItem discreteItem : discreteItems) {
      itemRequests.add(createRequest(fulfillmentGroup,discreteItem,counter));
      counter++;
    }
  }
  return itemRequests;
}
