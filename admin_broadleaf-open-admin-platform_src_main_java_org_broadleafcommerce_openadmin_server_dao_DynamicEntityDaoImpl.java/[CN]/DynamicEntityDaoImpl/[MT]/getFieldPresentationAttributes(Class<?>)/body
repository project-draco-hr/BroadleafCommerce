{
  Map<String,FieldPresentationAttributes> attributes=new HashMap<String,FieldPresentationAttributes>();
  Field[] fields=getAllFields(targetClass);
  for (  Field field : fields) {
    AdminPresentation annot=field.getAnnotation(AdminPresentation.class);
    if (annot != null) {
      FieldPresentationAttributes attr=new FieldPresentationAttributes();
      attr.setName(field.getName());
      attr.setFriendlyName(annot.friendlyName());
      attr.setSecurityLevel(annot.securityLevel());
      attr.setVisibility(annot.visibility());
      attr.setOrder(annot.order());
      attr.setExplicitFieldType(annot.fieldType());
      attr.setGroup(annot.group());
      attr.setGroupOrder(annot.groupOrder());
      attr.setGroupCollapsed(annot.groupCollapsed());
      attr.setLargeEntry(annot.largeEntry());
      attr.setProminent(annot.prominent());
      attr.setColumnWidth(annot.columnWidth());
      attr.setBroadleafEnumeration(annot.broadleafEnumeration());
      attr.setReadOnly(annot.readOnly());
      attr.setExcluded(annot.excluded());
      attr.setRequiredOverride(annot.requiredOverride() == RequiredOverride.IGNORED ? null : annot.requiredOverride() == RequiredOverride.REQUIRED ? true : false);
      if (annot.validationConfigurations().length != 0) {
        ValidationConfiguration[] configurations=annot.validationConfigurations();
        for (        ValidationConfiguration configuration : configurations) {
          ConfigurationItem[] items=configuration.configurationItems();
          Map<String,String> itemMap=new HashMap<String,String>();
          for (          ConfigurationItem item : items) {
            itemMap.put(item.itemName(),item.itemValue());
          }
          attr.getValidationConfigurations().put(configuration.validationImplementation(),itemMap);
        }
      }
      attributes.put(field.getName(),attr);
    }
 else {
      FieldPresentationAttributes attr=new FieldPresentationAttributes();
      attr.setName(field.getName());
      attr.setExcluded(false);
      attributes.put(field.getName(),attr);
    }
  }
  return attributes;
}
