{
  Boolean includeField=true;
  if (!StringUtils.isEmpty(prefix) && prefix.contains(propertyName + ".")) {
    int pos=prefix.indexOf(propertyName,0);
    String testProperty=prefix.substring(0,pos) + propertyName;
    Field testField=getFieldManager().getField(targetClass,testProperty);
    Field myField=getFieldManager().getField(targetClass,prefix + propertyName);
    if (testField == null) {
      Class<?>[] entities=getAllPolymorphicEntitiesFromCeiling(Class.forName(ceilingEntityFullyQualifiedClassname));
      int count=0;
      while (count < entities.length) {
        testField=getFieldManager().getField(entities[count],testProperty);
        if (testField != null) {
          myField=getFieldManager().getField(entities[count],prefix + propertyName);
          break;
        }
        count++;
      }
    }
    if (testField != null && testField.getType().equals(myField.getType())) {
      includeField=false;
    }
  }
  return includeField;
}
