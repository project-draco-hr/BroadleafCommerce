{
  MimeMessagePreparator preparator=new MimeMessagePreparator(){
    public void prepare(    MimeMessage mimeMessage) throws Exception {
      EmailTarget emailUser=(EmailTarget)props.get(EmailPropertyType.USER.toString());
      EmailInfo info=(EmailInfo)props.get(EmailPropertyType.INFO.toString());
      MimeMessageHelper message=new MimeMessageHelper(mimeMessage);
      message.setTo(emailUser.getEmailAddress());
      message.setFrom(info.getFromAddress());
      message.setSubject(info.getSubject());
      if (emailUser.getBCCAddresses() != null && emailUser.getBCCAddresses().length > 0) {
        message.setBcc(emailUser.getBCCAddresses());
      }
      if (emailUser.getCCAddresses() != null && emailUser.getCCAddresses().length > 0) {
        message.setCc(emailUser.getCCAddresses());
      }
      String messageBody=info.getMessageBody();
      String text;
      if (messageBody == null) {
        HashMap copy=(HashMap)props.clone();
        if (additionalConfigItems != null) {
          copy.putAll(additionalConfigItems);
        }
        text=VelocityEngineUtils.mergeTemplateIntoString(velocityEngine,info.getEmailTemplate(),copy);
      }
 else {
        text=messageBody;
      }
      message.setText(text,true);
      for (      Attachment attachment : info.getAttachments()) {
        message.addAttachment(attachment.getFilename(),attachment.getDataSource());
      }
    }
  }
;
  this.mailSender.send(preparator);
}
