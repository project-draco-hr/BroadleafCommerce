{
  logger.log(TreeLogger.INFO,"Generating source for " + typeName,null);
  TypeOracle typeOracle=context.getTypeOracle();
  JClassType clazz=typeOracle.findType(typeName);
  if (clazz == null) {
    logger.log(TreeLogger.ERROR,"Unable to find metadata for type '" + typeName + "'",null);
    throw new UnableToCompleteException();
  }
  try {
    logger.log(TreeLogger.INFO,"Generating source for " + clazz.getQualifiedSourceName(),null);
    JClassType[] reflectableTypes={typeOracle.getType(INSTANTIABLE_TYPE)};
    JClassType[] validatorTypes={typeOracle.getType(VALIDATOR_TYPE)};
    SourceWriter sourceWriter=getSourceWriter(clazz,context,logger);
    if (sourceWriter != null) {
      sourceWriter.println("public java.lang.Object newInstance(String className) {");
      for (      JClassType validatorType : validatorTypes) {
        JClassType[] types=typeOracle.getTypes();
        int count=0;
        for (int i=0; i < types.length; i++) {
          if (types[i].isInterface() == null && !types[i].isAbstract() && types[i].isAssignableTo(validatorType)) {
            logger.log(TreeLogger.INFO,"Emitting instantiation code for: " + types[i].getQualifiedSourceName(),null);
            if (count == 0) {
              sourceWriter.println("   if(\"" + types[i].getQualifiedSourceName() + "\".equals(className)) {"+ " return new "+ types[i].getQualifiedSourceName()+ "();"+ "}");
            }
 else {
              sourceWriter.println("   else if(\"" + types[i].getQualifiedSourceName() + "\".equals(className)) {"+ " return new "+ types[i].getQualifiedSourceName()+ "();"+ "}");
            }
            count++;
          }
        }
      }
      sourceWriter.println("return null;");
      sourceWriter.println("}");
      sourceWriter.println("public void createAsync(final String className, final AsyncClient asyncClient) {");
      for (      JClassType reflectableType : reflectableTypes) {
        JClassType[] types=typeOracle.getTypes();
        int count=0;
        for (int i=0; i < types.length; i++) {
          if (types[i].isInterface() == null && !types[i].isAbstract() && types[i].isAssignableTo(reflectableType)) {
            logger.log(TreeLogger.INFO,"Emitting async instantiation code for: " + types[i].getQualifiedSourceName(),null);
            if (count == 0) {
              sourceWriter.println("   if(\"" + types[i].getQualifiedSourceName() + "\".equals(className)) {"+ "com.google.gwt.core.client.GWT.runAsync(new com.google.gwt.core.client.RunAsyncCallback() {"+ "public void onFailure(Throwable err) {"+ "asyncClient.onUnavailable();"+ "}"+ "public void onSuccess() {"+ "asyncClient.onSuccess(new "+ types[i].getQualifiedSourceName()+ "());"+ "}});}");
            }
 else {
              sourceWriter.println("   else if(\"" + types[i].getQualifiedSourceName() + "\".equals(className)) {"+ "com.google.gwt.core.client.GWT.runAsync(new com.google.gwt.core.client.RunAsyncCallback() {"+ "public void onFailure(Throwable err) {"+ "asyncClient.onUnavailable();"+ "}"+ "public void onSuccess() {"+ "asyncClient.onSuccess(new "+ types[i].getQualifiedSourceName()+ "());"+ "}});}");
            }
            count++;
          }
        }
      }
      sourceWriter.println("}");
      sourceWriter.commit(logger);
      logger.log(TreeLogger.INFO,"Done Generating source for " + clazz.getName(),null);
    }
    return clazz.getQualifiedSourceName() + "Wrapper";
  }
 catch (  NotFoundException e) {
    e.printStackTrace();
    throw new UnableToCompleteException();
  }
}
