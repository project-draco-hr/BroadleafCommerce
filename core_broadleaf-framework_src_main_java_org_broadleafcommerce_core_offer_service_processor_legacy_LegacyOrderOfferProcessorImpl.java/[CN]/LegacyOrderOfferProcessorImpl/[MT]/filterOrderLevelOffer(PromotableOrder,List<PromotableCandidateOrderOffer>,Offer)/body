{
  if (offer.getDiscountType().getType().equals(OfferDiscountType.FIX_PRICE.getType())) {
    LOG.warn("Offers of type ORDER may not have a discount type of FIX_PRICE. Ignoring order offer (name=" + offer.getName() + ")");
    return;
  }
  boolean orderLevelQualification=false;
  orderQualification: {
    if (couldOfferApplyToOrder(offer,order)) {
      orderLevelQualification=true;
      break orderQualification;
    }
    for (    PromotableOrderItem discreteOrderItem : order.getDiscountableDiscreteOrderItems(offer.getApplyDiscountToSalePrice())) {
      if (couldOfferApplyToOrder(offer,order,discreteOrderItem)) {
        orderLevelQualification=true;
        break orderQualification;
      }
    }
    for (    PromotableFulfillmentGroup fulfillmentGroup : order.getFulfillmentGroups()) {
      if (couldOfferApplyToOrder(offer,order,fulfillmentGroup)) {
        orderLevelQualification=true;
        break orderQualification;
      }
    }
  }
  if (orderLevelQualification) {
    CandidatePromotionItems candidates=couldOfferApplyToOrderItems(offer,order.getDiscountableDiscreteOrderItems(offer.getApplyDiscountToSalePrice()));
    if (candidates.isMatchedQualifier()) {
      PromotableCandidateOrderOffer candidateOffer=createCandidateOrderOffer(order,qualifiedOrderOffers,offer);
      candidateOffer.getCandidateQualifiersMap().putAll(candidates.getCandidateQualifiersMap());
    }
  }
}
