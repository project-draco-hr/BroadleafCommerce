{
  this.setIsModal(true);
  this.setShowModalMask(true);
  this.setShowMinimizeButton(false);
  this.setWidth(600);
  this.setAutoHeight();
  this.setHeight(300);
  this.setCanDragResize(true);
  this.setOverflow(Overflow.VISIBLE);
  VStack stack=new VStack();
  stack.setWidth100();
  stack.setLayoutRightMargin(20);
  dynamicForm=new DynamicForm();
  dynamicForm.setNumCols(3);
  dynamicForm.setPadding(10);
  stack.addMember(dynamicForm);
  addItem(stack);
  IButton saveButton=new IButton("Save");
  saveButton.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (dynamicForm.validate()) {
        dynamicForm.saveData(new DSCallback(){
          public void execute(          DSResponse response,          Object rawData,          DSRequest request){
            TreeNode record=new TreeNode(request.getData());
            if (handler != null) {
              AppController.getInstance().getEventBus().addHandler(NewItemCreatedEvent.TYPE,handler);
              try {
                AppController.getInstance().getEventBus().fireEvent(new NewItemCreatedEvent((ListGridRecord)record,dynamicForm.getDataSource()));
              }
  finally {
                AppController.getInstance().getEventBus().removeHandler(NewItemCreatedEvent.TYPE,handler);
              }
            }
          }
        }
);
        hide();
      }
    }
  }
);
  IButton cancelButton=new IButton("Cancel");
  cancelButton.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      hide();
    }
  }
);
  VLayout vLayout=new VLayout();
  vLayout.setHeight100();
  vLayout.setAlign(VerticalAlignment.BOTTOM);
  HLayout hLayout=new HLayout(10);
  hLayout.setAlign(Alignment.CENTER);
  hLayout.addMember(saveButton);
  hLayout.addMember(cancelButton);
  hLayout.setLayoutTopMargin(40);
  hLayout.setLayoutBottomMargin(40);
  vLayout.addMember(hLayout);
  addItem(vLayout);
}
