{
  this.id=model.getId();
  this.status=model.getStatus().getType();
  this.totalTax=model.getTotalTax();
  this.totalShipping=model.getTotalShipping();
  this.subTotal=model.getSubTotal();
  this.total=model.getTotal();
  if (model.getOrderItems() != null && !model.getOrderItems().isEmpty()) {
    this.orderItems=new ArrayList<OrderItemWrapper>();
    for (    OrderItem orderItem : model.getOrderItems()) {
      OrderItemWrapper orderItemWrapper=(OrderItemWrapper)context.getBean(OrderItemWrapper.class.getName());
      orderItemWrapper.wrap(orderItem,request);
      this.orderItems.add(orderItemWrapper);
    }
  }
  if (model.getFulfillmentGroups() != null && !model.getFulfillmentGroups().isEmpty()) {
    this.fulfillmentGroups=new ArrayList<FulfillmentGroupWrapper>();
    for (    FulfillmentGroup fulfillmentGroup : model.getFulfillmentGroups()) {
      FulfillmentGroupWrapper fulfillmentGroupWrapper=(FulfillmentGroupWrapper)context.getBean(FulfillmentGroupWrapper.class.getName());
      fulfillmentGroupWrapper.wrap(fulfillmentGroup,request);
      this.fulfillmentGroups.add(fulfillmentGroupWrapper);
    }
  }
  if (model.getPaymentInfos() != null && !model.getPaymentInfos().isEmpty()) {
    this.paymentInfos=new ArrayList<PaymentInfoWrapper>();
    for (    PaymentInfo paymentInfo : model.getPaymentInfos()) {
      PaymentInfoWrapper paymentInfoWrapper=(PaymentInfoWrapper)context.getBean(PaymentInfoWrapper.class.getName());
      paymentInfoWrapper.wrap(paymentInfo,request);
      this.paymentInfos.add(paymentInfoWrapper);
    }
  }
  if (model.getOrderAdjustments() != null && !model.getOrderAdjustments().isEmpty()) {
    this.orderAdjustments=new ArrayList<OrderAdjustmentWrapper>();
    for (    OrderAdjustment orderAdjustment : model.getOrderAdjustments()) {
      OrderAdjustmentWrapper orderItemWrapper=(OrderAdjustmentWrapper)context.getBean(OrderAdjustmentWrapper.class.getName());
      orderItemWrapper.wrap(orderAdjustment,request);
      this.orderAdjustments.add(orderItemWrapper);
    }
  }
  CustomerWrapper customerWrapper=(CustomerWrapper)context.getBean(CustomerWrapper.class.getName());
  customerWrapper.wrap(model.getCustomer(),request);
  this.customer=customerWrapper;
}
