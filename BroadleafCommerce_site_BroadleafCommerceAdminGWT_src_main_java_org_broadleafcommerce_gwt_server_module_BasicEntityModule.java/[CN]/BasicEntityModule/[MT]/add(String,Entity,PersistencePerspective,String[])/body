{
  try {
    Class<?>[] entities=dynamicEntityRemoteService.getPolymorphicEntities(entity.getType());
    Map<String,FieldMetadata> mergedProperties=getMergedProperties(entity.getType(),entities,(ForeignKey)persistencePerspective.getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.FOREIGNKEY),persistencePerspective.getAdditionalNonPersistentProperties(),persistencePerspective.getAdditionalNonPersistentForeignKeys(),MergedPropertyType.PRIMARY);
    String idProperty=null;
    for (    String property : mergedProperties.keySet()) {
      if (mergedProperties.get(property).getFieldType().equals(SupportedFieldType.ID)) {
        idProperty=property;
        break;
      }
    }
    if (idProperty == null) {
      throw new RuntimeException("Could not find a primary key property in the passed entity with type: " + entity.getType());
    }
    Object primaryKey=null;
    for (    Property property : entity.getProperties()) {
      if (property.getName().equals(idProperty)) {
        primaryKey=Long.valueOf(property.getValue());
        break;
      }
    }
    if (primaryKey == null) {
      Serializable instance=(Serializable)Class.forName(entity.getType()).newInstance();
      instance=createPopulatedInstance(instance,entity,mergedProperties,true);
      persistInstance: {
        for (        CustomPersistenceHandler handler : customPersistenceHandlers) {
          if (handler.canHandleAdd(entity.getType())) {
            instance=handler.add(instance,customCriteria,dynamicEntityDao);
            break persistInstance;
          }
        }
        instance=dynamicEntityDao.persist(instance);
      }
      List<Serializable> entityList=new ArrayList<Serializable>();
      entityList.add(instance);
      return getRecords(mergedProperties,entityList,null,null)[0];
    }
 else {
      return update(entity,primaryKey,persistencePerspective,customCriteria);
    }
  }
 catch (  ServiceException e) {
    LOG.error("Problem adding new entity",e);
    throw e;
  }
catch (  Exception e) {
    LOG.error("Problem adding new entity",e);
    throw new ServiceException("Problem adding new entity : " + e.getMessage(),e);
  }
}
