{
  RateV3RequestDocument doc=RateV3RequestDocument.Factory.newInstance();
  RateV3RequestType v3Request=doc.addNewRateV3Request();
  v3Request.setUSERID(username);
  v3Request.setPASSWORD(password);
  for (  USPSContainerItemRequest itemRequest : request.getContainerItems()) {
    RequestPackageV3Type requestPackage=v3Request.addNewPackage();
    if (itemRequest.getContainerShape() != null) {
      requestPackage.setContainer(RequestPackageV3Type.Container.Enum.forString(itemRequest.getContainerShape().getType()));
    }
    if (itemRequest.getFirstClassType() != null) {
      requestPackage.setFirstClassMailType(RequestPackageV3Type.FirstClassMailType.Enum.forString(itemRequest.getFirstClassType().getType()));
    }
    DecimalFormat format=new DecimalFormat("0.#");
    if (itemRequest.getGirth() != null) {
      requestPackage.setGirth(format.format(UnitOfMeasureUtil.findInches(itemRequest.getGirth(),itemRequest.getDimensionUnitOfMeasureType()).doubleValue()));
    }
    if (itemRequest.getHeight() != null) {
      requestPackage.setHeight(format.format(UnitOfMeasureUtil.findInches(itemRequest.getHeight(),itemRequest.getDimensionUnitOfMeasureType()).doubleValue()));
    }
    if (itemRequest.getPackageId() != null) {
      requestPackage.setID(itemRequest.getPackageId());
    }
    if (itemRequest.getDepth() != null) {
      requestPackage.setLength(format.format(UnitOfMeasureUtil.findInches(itemRequest.getDepth(),itemRequest.getDimensionUnitOfMeasureType()).doubleValue()));
    }
    if (itemRequest.isMachineSortable() != null) {
      requestPackage.setMachinable(itemRequest.isMachineSortable());
    }
    if (itemRequest.getWeight() != null) {
      requestPackage.setOunces(format.format(UnitOfMeasureUtil.findRemainingOunces(itemRequest.getWeight(),itemRequest.getWeightUnitOfMeasureType()).doubleValue()));
      requestPackage.setPounds(UnitOfMeasureUtil.findWholePounds(itemRequest.getWeight(),itemRequest.getWeightUnitOfMeasureType()));
    }
    if (itemRequest.isReturnLocations() != null) {
      requestPackage.setReturnLocations(itemRequest.isReturnLocations());
    }
    if (itemRequest.getService() != null) {
      requestPackage.setService(RequestPackageV3Type.Service.Enum.forString(itemRequest.getService().getType()));
    }
    if (itemRequest.getShipDate() != null) {
      ShipDateV3Type shipDate=requestPackage.addNewShipDate();
      if (itemRequest.getShipDateOption() != null) {
        shipDate.setOption(itemRequest.getShipDateOption().getType());
      }
      SimpleDateFormat dateFormat=new SimpleDateFormat("dd-MMM-yyyy");
      shipDate.setStringValue(dateFormat.format(itemRequest.getShipDate()));
    }
    if (itemRequest.getContainerSize() != null) {
      requestPackage.setSize(RequestPackageV3Type.Size.Enum.forString(itemRequest.getContainerSize().getType()));
    }
    if (itemRequest.getWidth() != null) {
      requestPackage.setWidth(format.format(UnitOfMeasureUtil.findInches(itemRequest.getWidth(),itemRequest.getDimensionUnitOfMeasureType()).doubleValue()));
    }
    if (itemRequest.getZipDestination() != null) {
      requestPackage.setZipDestination(Integer.valueOf(itemRequest.getZipDestination()));
    }
    if (itemRequest.getZipOrigination() != null) {
      requestPackage.setZipOrigination(Integer.valueOf(itemRequest.getZipOrigination()));
    }
  }
  return doc;
}
