{
  if ((StringUtils.isNotEmpty(skuPropertyPrefix) && propertyId.startsWith(skuPropertyPrefix)) || path.equals(AssociationPath.ROOT)) {
    return new SimpleFilterCriterionProvider(FilterDataStrategy.NONE,2){
      @Override public Criterion getCriterion(      String targetPropertyName,      Object[] filterObjectValues,      Object[] directValues){
        if (directValues.length > 2) {
          return buildCriterion(targetPropertyName,Restrictions.between(targetPropertyName,directValues[0],directValues[2]),Restrictions.between(DEFAULT_SKU_PATH_PREFIX + targetPropertyName,directValues[0],directValues[2]));
        }
 else         if (directValues[0] == null) {
          return buildCriterion(targetPropertyName,Restrictions.lt(targetPropertyName,directValues[1]),Restrictions.lt(DEFAULT_SKU_PATH_PREFIX + targetPropertyName,directValues[1]));
        }
 else         if (directValues[1] == null) {
          return buildCriterion(targetPropertyName,Restrictions.ge(targetPropertyName,directValues[0]),Restrictions.ge(DEFAULT_SKU_PATH_PREFIX + targetPropertyName,directValues[0]));
        }
 else {
          return buildCriterion(targetPropertyName,Restrictions.eq(targetPropertyName,directValues[0]),Restrictions.eq(DEFAULT_SKU_PATH_PREFIX + targetPropertyName,directValues[0]));
        }
      }
    }
;
  }
 else {
    return super.getBetweenDateProvider(path,propertyId);
  }
}
