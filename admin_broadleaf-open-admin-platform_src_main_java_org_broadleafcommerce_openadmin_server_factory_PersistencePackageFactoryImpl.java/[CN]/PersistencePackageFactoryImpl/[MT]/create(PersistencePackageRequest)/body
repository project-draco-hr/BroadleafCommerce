{
  PersistencePerspective persistencePerspective=new PersistencePerspective();
  persistencePerspective.setAdditionalForeignKeys(new ForeignKey[]{});
  persistencePerspective.setAdditionalNonPersistentProperties(new String[]{});
  if (request.getForeignKeys() != null) {
    for (    ForeignKey fk : request.getForeignKeys()) {
      persistencePerspective.addPersistencePerspectiveItem(PersistencePerspectiveItemType.FOREIGNKEY,fk);
    }
  }
switch (request.getType()) {
case STANDARD:
    persistencePerspective.setOperationTypes(getDefaultOperationTypes());
  break;
case ADORNED:
if (request.getAdornedList() == null) {
  throw new IllegalArgumentException("ADORNED type requires the adornedList to be set");
}
persistencePerspective.setOperationTypes(getOperationTypes(OperationType.ADORNEDTARGETLIST));
persistencePerspective.addPersistencePerspectiveItem(PersistencePerspectiveItemType.ADORNEDTARGETLIST,request.getAdornedList());
break;
case MAP:
if (request.getMapStructure() == null) {
throw new IllegalArgumentException("MAP type requires the mapStructure to be set");
}
persistencePerspective.setOperationTypes(getOperationTypes(OperationType.MAP));
persistencePerspective.addPersistencePerspectiveItem(PersistencePerspectiveItemType.MAPSTRUCTURE,request.getMapStructure());
break;
}
PersistencePackage pp=new PersistencePackage();
pp.setCeilingEntityFullyQualifiedClassname(request.getClassName());
pp.setFetchTypeFullyQualifiedClassname(null);
pp.setPersistencePerspective(persistencePerspective);
pp.setCustomCriteria(request.getCustomCriteria());
pp.setCsrfToken(null);
if (request.getEntity() != null) {
pp.setEntity(request.getEntity());
}
return pp;
}
