{
  CartOperationRequest request=((CartOperationContext)context).getSeedData();
  OrderItemRequestDTO orderItemRequestDTO=request.getItemRequest();
  Order order=request.getOrder();
  OrderItem orderItem=null;
  for (  OrderItem oi : order.getOrderItems()) {
    if (oi.getId().equals(orderItemRequestDTO.getOrderItemId())) {
      orderItem=oi;
    }
  }
  if (orderItem == null || !order.getOrderItems().contains(orderItem)) {
    throw new ItemNotFoundException("Order Item (" + orderItem.getId() + ") not found in Order ("+ order.getId()+ ")");
  }
  OrderItem itemFromOrder=order.getOrderItems().get(order.getOrderItems().indexOf(orderItem));
  request.setOrderItemQuantityDelta(orderItemRequestDTO.getQuantity() - itemFromOrder.getQuantity());
  Integer oldQuantity=itemFromOrder.getQuantity();
  itemFromOrder.setQuantity(orderItemRequestDTO.getQuantity());
  if (itemFromOrder instanceof BundleOrderItem) {
    for (    DiscreteOrderItem doi : ((BundleOrderItem)itemFromOrder).getDiscreteOrderItems()) {
      Integer qtyMultiplier=doi.getQuantity() / oldQuantity;
      doi.setQuantity(qtyMultiplier * orderItemRequestDTO.getQuantity());
    }
  }
  order=orderService.save(order,false);
  request.setAddedOrderItem(itemFromOrder);
  request.setOrder(order);
  return context;
}
