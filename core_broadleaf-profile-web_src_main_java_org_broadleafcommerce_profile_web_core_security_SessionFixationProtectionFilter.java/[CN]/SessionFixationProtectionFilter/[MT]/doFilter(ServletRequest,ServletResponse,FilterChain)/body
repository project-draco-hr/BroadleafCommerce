{
  HttpServletRequest request=(HttpServletRequest)sRequest;
  HttpServletResponse response=(HttpServletResponse)sResponse;
  HttpSession session=request.getSession(false);
  if (SecurityContextHolder.getContext() == null) {
    chain.doFilter(request,response);
  }
  String activeIdSessionValue=session == null ? null : (String)session.getAttribute(SESSION_ATTR);
  if (StringUtils.isNotBlank(activeIdSessionValue) && request.isSecure()) {
    String activeIdCookieValue=cookieUtils.getCookieValue(request,SessionFixationProtectionCookie.COOKIE_NAME);
    String decryptedActiveIdValue=encryptionModule.decrypt(activeIdCookieValue);
    if (!activeIdSessionValue.equals(decryptedActiveIdValue)) {
      abortUser(request,response);
      LOG.info("Session has been terminated. ActiveID did not match expected value.");
      return;
    }
  }
 else   if (request.isSecure()) {
    String token;
    try {
      token=RandomGenerator.generateRandomId("SHA1PRNG",32);
    }
 catch (    NoSuchAlgorithmException e) {
      throw new ServletException(e);
    }
    String encryptedActiveIdValue=encryptionModule.encrypt(token);
    session.setAttribute(SESSION_ATTR,token);
    cookieUtils.setCookieValue(response,SessionFixationProtectionCookie.COOKIE_NAME,encryptedActiveIdValue,"/",-1,true);
  }
  chain.doFilter(request,response);
}
