{
  formPresenter.bind();
  formPresenter.getSaveButtonHandlerRegistration().removeHandler();
  saveButtonHandlerRegistration=display.getDynamicFormDisplay().getSaveButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        saveClicked();
      }
    }
  }
);
  addClickHandlerRegistration=display.getListDisplay().getAddButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        addClicked();
      }
    }
  }
);
  removeClickHandlerRegistration=display.getListDisplay().getRemoveButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        removeClicked();
      }
    }
  }
);
  fetchDataHandlerRegistration=display.getListDisplay().getGrid().addFetchDataHandler(new FetchDataHandler(){
    @Override public void onFilterData(    FetchDataEvent event){
      setStartState();
      formPresenter.disable();
    }
  }
);
  selectionChangedHandlerRegistration=display.getListDisplay().getGrid().addSelectionChangedHandler(new SelectionChangedHandler(){
    public void onSelectionChanged(    SelectionEvent event){
      ListGridRecord selectedRecord=event.getSelectedRecord();
      if (event.getState() && selectedRecord != null) {
        if (!selectedRecord.equals(lastSelectedRecord)) {
          lastSelectedRecord=selectedRecord;
          if (selectedRecord.getAttributeAsStringArray("_type") == null) {
            formPresenter.disable();
            display.getListDisplay().getRemoveButton().disable();
          }
 else {
            formPresenter.setStartState();
            ((DynamicEntityDataSource)display.getListDisplay().getGrid().getDataSource()).resetPermanentFieldVisibilityBasedOnType(selectedRecord.getAttributeAsStringArray("_type"));
            display.getDynamicFormDisplay().getFormOnlyDisplay().buildFields(display.getListDisplay().getGrid().getDataSource(),true,true,false);
            display.getDynamicFormDisplay().getFormOnlyDisplay().getForm().editRecord(selectedRecord);
            display.getListDisplay().getRemoveButton().enable();
          }
          changeSelection(selectedRecord);
        }
      }
    }
  }
);
  entityTypeChangedHandlerRegistration=display.getListDisplay().getEntityType().addChangedHandler(new ChangedHandler(){
    public void onChanged(    ChangedEvent event){
      ((DynamicEntityDataSource)display.getListDisplay().getGrid().getDataSource()).setDefaultNewEntityFullyQualifiedClassname((String)event.getItem().getValue());
    }
  }
);
  cellSavedHandlerRegistration=display.getListDisplay().getGrid().addCellSavedHandler(new CellSavedHandler(){
    public void onCellSaved(    CellSavedEvent event){
      display.getListDisplay().getGrid().deselectAllRecords();
      display.getListDisplay().getGrid().selectRecord(event.getRecord());
    }
  }
);
}
