{
  OperatorId[] operatorsForNumbers=new OperatorId[]{OperatorId.GREATER_THAN,OperatorId.GREATER_OR_EQUAL,OperatorId.GREATER_THAN_FIELD,OperatorId.BETWEEN,OperatorId.BETWEEN_INCLUSIVE,OperatorId.LESS_THAN,OperatorId.LESS_OR_EQUAL,OperatorId.LESS_THAN_FIELD,OperatorId.EQUALS,OperatorId.EQUALS_FIELD,OperatorId.NOT_EQUAL_FIELD,OperatorId.NOT_EQUAL};
  Map<FieldType,OperatorId[]> map=new HashMap<FieldType,OperatorId[]>();
  for (  FieldType fieldType : new FieldType[]{FieldType.ANY,FieldType.BINARY,FieldType.BOOLEAN,FieldType.CREATOR,FieldType.CREATORTIMESTAMP,FieldType.ENUM,FieldType.IMAGE,FieldType.IMAGEFILE,FieldType.ANY,FieldType.MODIFIER,FieldType.MODIFIERTIMESTAMP,FieldType.TEXT,FieldType.SEQUENCE,FieldType.PASSWORD,FieldType.CUSTOM}) {
    map.put(fieldType,dataSource.getTypeOperators(fieldType));
  }
  dataSource.setTypeOperators(FieldType.FLOAT,operatorsForNumbers);
  dataSource.setTypeOperators(FieldType.INTEGER,operatorsForNumbers);
  dataSource.setTypeOperators(FieldType.TIME,operatorsForNumbers);
  dataSource.setTypeOperators(FieldType.DATE,operatorsForNumbers);
  dataSource.setTypeOperators(FieldType.DATETIME,operatorsForNumbers);
  for (  FieldType fieldType : new FieldType[]{FieldType.ANY,FieldType.BINARY,FieldType.BOOLEAN,FieldType.CREATOR,FieldType.CREATORTIMESTAMP,FieldType.ENUM,FieldType.IMAGE,FieldType.IMAGEFILE,FieldType.ANY,FieldType.MODIFIER,FieldType.MODIFIERTIMESTAMP,FieldType.TEXT,FieldType.SEQUENCE,FieldType.PASSWORD,FieldType.CUSTOM}) {
    dataSource.setTypeOperators(fieldType,map.get(fieldType));
  }
  super.setDataSource(dataSource);
}
