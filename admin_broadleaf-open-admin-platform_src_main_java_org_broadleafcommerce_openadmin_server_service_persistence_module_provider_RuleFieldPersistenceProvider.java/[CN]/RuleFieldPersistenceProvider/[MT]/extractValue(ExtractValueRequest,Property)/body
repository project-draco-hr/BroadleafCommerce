{
  if (!canHandleExtraction(extractValueRequest,property)) {
    return FieldProviderResponse.NOT_HANDLED;
  }
  String val=null;
  ObjectMapper mapper=new ObjectMapper();
  MVELToDataWrapperTranslator translator=new MVELToDataWrapperTranslator();
  if (extractValueRequest.getMetadata().getFieldType() == SupportedFieldType.RULE_SIMPLE) {
    if (extractValueRequest.getRequestedValue() != null) {
      if (extractValueRequest.getRequestedValue() instanceof String) {
        val=(String)extractValueRequest.getRequestedValue();
        property.setValue(val);
        property.setDisplayValue(extractValueRequest.getDisplayVal());
      }
      if (extractValueRequest.getRequestedValue() instanceof SimpleRule) {
        SimpleRule simpleRule=(SimpleRule)extractValueRequest.getRequestedValue();
        if (simpleRule != null) {
          val=simpleRule.getMatchRule();
          property.setValue(val);
          property.setDisplayValue(extractValueRequest.getDisplayVal());
        }
      }
    }
    Property jsonProperty=convertSimpleRuleToJson(translator,mapper,val,property.getName() + "Json",extractValueRequest.getMetadata().getRuleIdentifier());
    extractValueRequest.getProps().add(jsonProperty);
  }
  if (extractValueRequest.getMetadata().getFieldType() == SupportedFieldType.RULE_WITH_QUANTITY) {
    if (extractValueRequest.getRequestedValue() != null) {
      if (extractValueRequest.getRequestedValue() instanceof Collection) {
        Property jsonProperty=convertQuantityBasedRuleToJson(translator,mapper,(Collection<QuantityBasedRule>)extractValueRequest.getRequestedValue(),extractValueRequest.getMetadata().getName() + "Json",extractValueRequest.getMetadata().getRuleIdentifier());
        extractValueRequest.getProps().add(jsonProperty);
      }
 else {
        throw new UnsupportedOperationException("RULE_WITH_QUANTITY type is currently only supported" + "on collection fields. A single field with this type is not currently supported.");
      }
    }
  }
  return FieldProviderResponse.HANDLED;
}
