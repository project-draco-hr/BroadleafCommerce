{
  this.productSummary=(ProductSummaryWrapper)context.getBean(ProductSummaryWrapper.class.getName());
  this.productSummary.wrap(model,request);
  this.activeStartDate=model.getActiveStartDate();
  this.activeEndDate=model.getActiveEndDate();
  this.manufacturer=model.getManufacturer();
  this.model=model.getModel();
  this.promoMessage=model.getPromoMessage();
  if (model.getDefaultCategory() != null) {
    this.defaultCategoryId=model.getDefaultCategory().getId();
  }
  if (model.getUpSaleProducts() != null && !model.getUpSaleProducts().isEmpty()) {
    upsaleProducts=new ArrayList<RelatedProductWrapper>();
    for (    RelatedProduct p : model.getUpSaleProducts()) {
      RelatedProductWrapper upsaleProductWrapper=(RelatedProductWrapper)context.getBean(RelatedProductWrapper.class.getName());
      upsaleProductWrapper.wrap(p,request);
      upsaleProducts.add(upsaleProductWrapper);
    }
  }
  if (model.getCrossSaleProducts() != null && !model.getCrossSaleProducts().isEmpty()) {
    crossSaleProducts=new ArrayList<RelatedProductWrapper>();
    for (    RelatedProduct p : model.getCrossSaleProducts()) {
      RelatedProductWrapper crossSaleProductWrapper=(RelatedProductWrapper)context.getBean(RelatedProductWrapper.class.getName());
      crossSaleProductWrapper.wrap(p,request);
      crossSaleProducts.add(crossSaleProductWrapper);
    }
  }
  if (model.getProductAttributes() != null && !model.getProductAttributes().isEmpty()) {
    productAttributes=new ArrayList<ProductAttributeWrapper>();
    if (model.getProductAttributes() != null) {
      for (      Map.Entry<String,ProductAttribute> entry : model.getProductAttributes().entrySet()) {
        ProductAttributeWrapper wrapper=(ProductAttributeWrapper)context.getBean(ProductAttributeWrapper.class.getName());
        wrapper.wrap(entry.getValue(),request);
        productAttributes.add(wrapper);
      }
    }
  }
  if (model.getMedia() != null && !model.getMedia().isEmpty()) {
    Map<String,Media> mediaMap=model.getMedia();
    media=new ArrayList<MediaWrapper>();
    StaticAssetService staticAssetService=(StaticAssetService)this.context.getBean("blStaticAssetService");
    for (    Media med : mediaMap.values()) {
      MediaWrapper wrapper=(MediaWrapper)context.getBean(MediaWrapper.class.getName());
      wrapper.wrap(med,request);
      if (wrapper.isAllowOverrideUrl()) {
        wrapper.setUrl(staticAssetService.convertAssetPath(med.getUrl(),request.getContextPath(),request.isSecure()));
      }
      media.add(wrapper);
    }
  }
}
