{
  AppServices.DYNAMIC_ENTITY.inspect(ceilingEntityFullyQualifiedClassname,persistencePerspective,new AbstractCallback<DynamicResultSet>(){
    @Override protected void onOtherException(    Throwable exception){
      super.onOtherException(exception);
      cb.onFailure(exception);
    }
    @Override protected void onSecurityException(    ApplicationSecurityException exception){
      super.onSecurityException(exception);
      cb.onFailure(exception);
    }
    public void onSuccess(    DynamicResultSet result){
      super.onSuccess(result);
      ClassMetadata metadata=result.getClassMetaData();
      filterProperties(metadata,new MergedPropertyType[]{MergedPropertyType.PRIMARY,MergedPropertyType.JOINTABLE});
      DataSourceField typeField=new DataSourceTextField("type");
      typeField.setCanEdit(false);
      typeField.setHidden(true);
      dataSource.addField(typeField);
      for (      PolymorphicEntity polymorphicEntity : metadata.getPolymorphicEntities()) {
        String name=polymorphicEntity.getName();
        String type=polymorphicEntity.getType();
        dataSource.getPolymorphicEntities().put(type,name);
      }
      dataSource.setDefaultNewEntityFullyQualifiedClassname(dataSource.getPolymorphicEntities().keySet().iterator().next());
      cb.onSuccess(dataSource);
    }
  }
);
}
