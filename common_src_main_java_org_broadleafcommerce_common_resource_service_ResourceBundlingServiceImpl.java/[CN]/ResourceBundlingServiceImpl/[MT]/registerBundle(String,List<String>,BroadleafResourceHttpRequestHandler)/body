{
  LinkedHashMap<String,Resource> foundResources=new LinkedHashMap<String,Resource>();
  if (additionalBundleFiles.get(bundleName) != null) {
    files.addAll(additionalBundleFiles.get(bundleName));
  }
  for (  String file : files) {
    boolean match=false;
    if (handler.getHandlers() != null) {
      for (      AbstractGeneratedResourceHandler h : handler.getHandlers()) {
        if (h.canHandle(file)) {
          foundResources.put(file,h.getResource(file,handler.getLocations()));
          match=true;
          break;
        }
      }
    }
    if (!match) {
      for (      Resource location : handler.getLocations()) {
        try {
          Resource resource=location.createRelative(file);
          if (resource.exists() && resource.isReadable()) {
            foundResources.put(file,resource);
            match=true;
            break;
          }
        }
 catch (        IOException ex) {
          LOG.debug("Failed to create relative resource - trying next resource location",ex);
        }
      }
    }
  }
  String version=getBundleVersion(foundResources);
  String versionedName=getBundleName(bundleName,version);
  bundles.put(versionedName,foundResources.values());
  getBundleVersionsCache().put(new Element(bundleName,versionedName));
  return versionedName;
}
