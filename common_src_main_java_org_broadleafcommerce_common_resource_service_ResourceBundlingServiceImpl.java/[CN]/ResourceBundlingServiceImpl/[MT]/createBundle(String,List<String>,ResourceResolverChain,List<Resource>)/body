{
  HttpServletRequest req=BroadleafRequestContext.getBroadleafRequestContext().getRequest();
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  byte[] bytes=null;
  try {
    for (    String fileName : filePaths) {
      Resource r=resolverChain.resolveResource(req,fileName,locations);
      InputStream is=null;
      if (r == null) {
        LOG.warn(new StringBuilder().append("Could not resolve resource specified in bundle as [").append(fileName).append("]. Turn on trace logging to determine resolution failure. Skipping file.").toString());
      }
 else {
        try {
          is=r.getInputStream();
          StreamUtils.copy(is,baos);
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
 finally {
          IOUtils.closeQuietly(is);
        }
        if (versionedBundleName.endsWith(".js")) {
          baos.write(";".getBytes());
        }
        baos.write(System.getProperty("line.separator").getBytes());
      }
    }
    bytes=baos.toByteArray();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
    IOUtils.closeQuietly(baos);
  }
  GeneratedResource r=new GeneratedResource(bytes,versionedBundleName);
  return r;
}
