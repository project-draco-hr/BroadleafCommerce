{
  PasswordChange pwChange=(PasswordChange)target;
  String newPw=StringUtils.trimToEmpty(pwChange.getNewPassword());
  String newConfirmPw=StringUtils.trimToEmpty(pwChange.getNewPasswordConfirm());
  String oldPw=StringUtils.trimToEmpty(pwChange.getCurrentPassword());
  String authenticatedPw=(String)SecurityContextHolder.getContext().getAuthentication().getCredentials();
  if (!authenticatedPw.equals(oldPw)) {
    errors.rejectValue("currentPassword","currentPasswordIncorrect",null,"current password is incorrect");
    logger.debug("current password, " + authenticatedPw + ", didn't match "+ oldPw);
  }
 else   if (!newPw.equals(newConfirmPw)) {
    errors.rejectValue("newPasswordConfirm","newPasswordConfirmIncorrect",null,"new passwords must match");
    logger.debug("new password, " + newPw + ", didn't match confirm password "+ newConfirmPw);
  }
 else   if (authenticatedPw.equals(newPw)) {
    errors.rejectValue("newPassword","newPasswordMatchesCurrent",null,"new password must be different then current password");
    logger.debug("new password, " + newPw + ", must be different then current password");
  }
 else {
    if (newPw.trim().length() < MINIMUM_PASSWORD_LENGTH) {
      errors.rejectValue("newPassword","newPasswordSizeIncorrect",null,"new password must be at least " + MINIMUM_PASSWORD_LENGTH + " characters");
      logger.debug("new password, " + newPw + ", must be at least "+ MINIMUM_PASSWORD_LENGTH+ " characters");
    }
  }
}
