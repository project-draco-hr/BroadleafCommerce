{
  if (formItem.getClass().getName().equals(PasswordItem.class.getName())) {
    if (field.getValidators() != null && field.getValidators().length > 0) {
      for (      Validator validator : field.getValidators()) {
        if (validator.getAttribute("type").equals("matchesField") && validator.getAttribute("otherField") != null) {
          String otherFieldName=validator.getAttribute("otherField");
          final FormItem otherItem=new PasswordItem();
          form.addFetchDataHandler(new FetchDataHandler(){
            @Override public void onFilterData(            FetchDataEvent event){
              otherItem.setValue(formItem.getValue());
            }
          }
);
          ((PasswordItem)otherItem).setLength(((PasswordItem)formItem).getLength());
          otherItem.setName(otherFieldName);
          String title=field.getAttribute("friendlyName") + " Repeat";
          String val=BLCMain.getMessageManager().getString(title);
          if (val != null) {
            title=val;
          }
          otherItem.setTitle(title);
          otherItem.setRequired(field.getRequired());
          if (!sections.containsKey(group)) {
            List<FormItem> temp=new ArrayList<FormItem>();
            sections.put(group,temp);
          }
          if (!sectionNames.containsKey(group)) {
            sectionNames.put(group,groupOrder);
          }
          List<FormItem> temp=sections.get(group);
          if (showDisabledState != null) {
            otherItem.setShowDisabled(showDisabledState);
          }
          if (canEdit != null) {
            otherItem.setDisabled(!canEdit);
          }
          if (!field.getCanEdit()) {
            otherItem.setDisabled(true);
          }
          temp.add(otherItem);
          if (displayFormItem != null) {
            temp.add(displayFormItem);
          }
          break;
        }
      }
    }
  }
}
