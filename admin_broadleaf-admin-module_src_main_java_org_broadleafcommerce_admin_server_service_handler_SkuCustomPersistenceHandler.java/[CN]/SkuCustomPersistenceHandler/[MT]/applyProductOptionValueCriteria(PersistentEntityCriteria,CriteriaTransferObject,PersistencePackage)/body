{
  Set<String> filterPropertySet=cto.getPropertyIdSet();
  final List<Long> productOptionValueFilterIDs=new ArrayList<Long>();
  for (  String filterProperty : filterPropertySet) {
    if (filterProperty.startsWith(PRODUCT_OPTION_FIELD_PREFIX)) {
      FilterAndSortCriteria criteria=cto.get(filterProperty);
      productOptionValueFilterIDs.add(Long.parseLong(criteria.getFilterValues()[0]));
    }
  }
  if (productOptionValueFilterIDs.size() > 0) {
    ((NestedPropertyCriteria)queryCriteria).add(new FilterCriterion(new AssociationPath(new AssociationPathElement("productOptionValues")),"id",productOptionValueFilterIDs,false,new SimpleFilterCriterionProvider(FilterDataStrategy.DIRECT,productOptionValueFilterIDs.size()){
      @Override @SuppressWarnings("unchecked") public Criterion getCriterion(      String targetPropertyName,      Object[] filterObjectValues,      Object[] directValues){
        return Restrictions.in(targetPropertyName,(List<Long>)directValues[0]);
      }
    }
));
  }
}
