{
  final List<Long> productOptionValueFilterIDs=new ArrayList<Long>();
  for (  String filterProperty : cto.getPropertyIdSet()) {
    if (filterProperty.startsWith(PRODUCT_OPTION_FIELD_PREFIX)) {
      FilterAndSortCriteria criteria=cto.get(filterProperty);
      productOptionValueFilterIDs.add(Long.parseLong(criteria.getFilterValues()[0]));
    }
  }
  final List<String> productOptionValueFilterValues=new ArrayList<String>();
  FilterAndSortCriteria consolidatedCriteria=cto.get(CONSOLIDATED_PRODUCT_OPTIONS_FIELD_NAME);
  if (consolidatedCriteria.getFilterValues().length > 0) {
    productOptionValueFilterValues.addAll(Arrays.asList(StringUtils.split(consolidatedCriteria.getFilterValues()[0],CONSOLIDATED_PRODUCT_OPTIONS_DELIMETER)));
  }
  AssociationPath path;
  if (StringUtils.isNotEmpty(skuPropertyPrefix)) {
    path=new AssociationPath(new AssociationPathElement(skuPropertyPrefix),new AssociationPathElement("productOptionValues"));
  }
 else {
    path=new AssociationPath(new AssociationPathElement("productOptionValues"));
  }
  if (productOptionValueFilterIDs.size() > 0) {
    ((NestedPropertyCriteria)queryCriteria).add(new FilterCriterion(path,"id",productOptionValueFilterIDs,false,new SimpleFilterCriterionProvider(FilterDataStrategy.DIRECT,1){
      @Override @SuppressWarnings("unchecked") public Criterion getCriterion(      String targetPropertyName,      Object[] filterObjectValues,      Object[] directValues){
        return Restrictions.in(targetPropertyName,(List<Long>)directValues[0]);
      }
    }
));
  }
  if (productOptionValueFilterValues.size() > 0) {
    ((NestedPropertyCriteria)queryCriteria).add(new FilterCriterion(path,"attributeValue",productOptionValueFilterValues,false,new SimpleFilterCriterionProvider(FilterDataStrategy.DIRECT,1){
      @Override @SuppressWarnings("unchecked") public Criterion getCriterion(      String targetPropertyName,      Object[] filterObjectValues,      Object[] directValues){
        return Restrictions.in(targetPropertyName,(List<String>)directValues[0]);
      }
    }
));
  }
}
