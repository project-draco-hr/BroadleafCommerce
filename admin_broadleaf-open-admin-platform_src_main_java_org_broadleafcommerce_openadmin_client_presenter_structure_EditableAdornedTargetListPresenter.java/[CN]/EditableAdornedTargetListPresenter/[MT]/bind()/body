{
  addClickedHandlerRegistration=display.getAddButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        searchDialog.search(searchDialogTitle,new SearchItemSelectedHandler(){
          @SuppressWarnings({"rawtypes","unchecked"}) public void onSearchItemSelected(          SearchItemSelected event){
            Map initialValues=((DynamicEntityDataSource)display.getGrid().getDataSource()).extractRecordValues((TreeNode)event.getRecord());
            initialValues.put("backup_id",((DynamicEntityDataSource)display.getGrid().getDataSource()).getPrimaryKeyValue(event.getRecord()));
            BLCMain.ENTITY_ADD.editNewRecord(adornedTargetEditTitle,(DynamicEntityDataSource)display.getGrid().getDataSource(),initialValues,new ItemEditedHandler(){
              public void onItemEdited(              ItemEdited event){
                ListGridRecord[] recordList=new ListGridRecord[]{(ListGridRecord)event.getRecord()};
                DSResponse updateResponse=new DSResponse();
                updateResponse.setData(recordList);
                DSRequest updateRequest=new DSRequest();
                updateRequest.setOperationType(DSOperationType.UPDATE);
                display.getGrid().getDataSource().updateCaches(updateResponse,updateRequest);
                display.getGrid().deselectAllRecords();
                display.getGrid().selectRecord(display.getGrid().getRecordIndex(event.getRecord()));
                String primaryKey=display.getGrid().getDataSource().getPrimaryKeyFieldName();
                ResultSet results=display.getGrid().getResultSet();
                boolean foundRecord=false;
                if (results != null) {
                  foundRecord=display.getGrid().getResultSet().find(primaryKey,event.getRecord().getAttribute(primaryKey)) != null;
                }
                if (!foundRecord) {
                  ((AbstractDynamicDataSource)display.getGrid().getDataSource()).setAddedRecord(event.getRecord());
                  display.getGrid().getDataSource().fetchData(new Criteria("blc.fetch.from.cache",event.getRecord().getAttribute(primaryKey)),new DSCallback(){
                    @Override public void execute(                    DSResponse response,                    Object rawData,                    DSRequest request){
                      display.getGrid().setData(response.getData());
                      display.getGrid().selectRecord(0);
                    }
                  }
);
                }
              }
            }
,adornedTargetFields,null);
          }
        }
);
      }
    }
  }
);
  editCompletedHandlerRegistration=display.getGrid().addEditCompleteHandler(new EditCompleteHandler(){
    public void onEditComplete(    EditCompleteEvent event){
      display.getGrid().deselectAllRecords();
      setStartState();
    }
  }
);
  recordDropHandlerRegistration=display.getGrid().addRecordDropHandler(new RecordDropHandler(){
    public void onRecordDrop(    RecordDropEvent event){
      ListGridRecord record=event.getDropRecords()[0];
      int originalIndex=((ListGrid)event.getSource()).getRecordIndex(record);
      int newIndex=event.getIndex();
      if (newIndex > originalIndex) {
        newIndex--;
      }
      AdornedTargetList adornedTargetList=(AdornedTargetList)((DynamicEntityDataSource)display.getGrid().getDataSource()).getPersistencePerspective().getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.ADORNEDTARGETLIST);
      record.setAttribute(adornedTargetList.getSortField(),newIndex);
      display.getGrid().updateData(record);
    }
  }
);
  selectionChangedHandlerRegistration=display.getGrid().addSelectionChangedHandler(new SelectionChangedHandler(){
    public void onSelectionChanged(    SelectionEvent event){
      if (event.getState()) {
        display.getRemoveButton().enable();
      }
 else {
        display.getRemoveButton().disable();
      }
    }
  }
);
  removedClickedHandlerRegistration=display.getRemoveButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        display.getGrid().removeData(display.getGrid().getSelectedRecord(),new DSCallback(){
          public void execute(          DSResponse response,          Object rawData,          DSRequest request){
            display.getRemoveButton().disable();
          }
        }
);
      }
    }
  }
);
  rowDoubleClickedHandlerRegistration=display.getGrid().addCellDoubleClickHandler(new CellDoubleClickHandler(){
    @Override public void onCellDoubleClick(    CellDoubleClickEvent cellDoubleClickEvent){
      AdornedTargetList adornedTargetList=(AdornedTargetList)((DynamicEntityDataSource)display.getGrid().getDataSource()).getPersistencePerspective().getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.ADORNEDTARGETLIST);
      if (adornedTargetList.getSortField() != null) {
        display.getGrid().getSelectedRecord().setAttribute(adornedTargetList.getSortField(),Integer.parseInt(display.getGrid().getSelectedRecord().getAttribute(adornedTargetList.getSortField())) - 1);
      }
      BLCMain.ENTITY_ADD.editRecord(adornedTargetEditTitle,(DynamicEntityDataSource)display.getGrid().getDataSource(),display.getGrid().getSelectedRecord(),new ItemEditedHandler(){
        @Override public void onItemEdited(        ItemEdited event){
          display.getRemoveButton().disable();
        }
      }
,adornedTargetFields,null,readOnly);
    }
  }
);
}
