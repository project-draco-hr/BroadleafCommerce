{
  super.bind();
  featuredPresenter.bind();
  mediaPresenter.bind();
  allChildCategoriesPresenter.bind();
  childProductsPresenter.bind();
  ((TreeGrid)display.getListDisplay().getGrid()).addDataArrivedHandler(new com.smartgwt.client.widgets.tree.events.DataArrivedHandler(){
    public void onDataArrived(    com.smartgwt.client.widgets.tree.events.DataArrivedEvent event){
      Record[] records=event.getParentNode().getAttributeAsRecordArray("children");
      for (      Record record : records) {
        String hasChildren=((TreeNode)record).getAttribute(CategoryTreeDataSourceFactory.hasChildrenProperty);
        if (hasChildren != null && !Boolean.parseBoolean(hasChildren)) {
          ((TreeGrid)display.getListDisplay().getGrid()).getTree().loadChildren((TreeNode)record);
        }
      }
    }
  }
);
  ((CategoryDisplay)display).getRemoveOrphanedButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        SC.confirm("Are your sure you want to delete this entity (" + ((CategoryDisplay)display).getOrphanedCategoryGrid().getSelectedRecord().getAttribute("name") + ")?",new BooleanCallback(){
          public void execute(          Boolean value){
            if (value) {
              ((CategoryDisplay)display).getOrphanedCategoryGrid().removeSelectedData();
              ((CategoryDisplay)display).getRemoveOrphanedButton().disable();
              ((CategoryDisplay)display).getInsertOrphanButton().disable();
            }
          }
        }
);
      }
    }
  }
);
  ((CategoryDisplay)display).getInsertOrphanButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        ((CategoryDisplay)display).getAllCategoriesDisplay().getGrid().addData(((CategoryDisplay)display).getOrphanedCategoryGrid().getSelectedRecord(),new DSCallback(){
          public void execute(          DSResponse response,          Object rawData,          DSRequest request){
            if (response.getErrors().isEmpty()) {
              reloadParentTreeNodeRecords(true);
              ((CategoryDisplay)display).getOrphanedCategoryGrid().invalidateCache();
              ((CategoryDisplay)display).getRemoveOrphanedButton().disable();
              ((CategoryDisplay)display).getInsertOrphanButton().disable();
            }
          }
        }
);
      }
    }
  }
);
  ((CategoryDisplay)display).getOrphanedCategoryGrid().addSelectionChangedHandler(new SelectionChangedHandler(){
    public void onSelectionChanged(    SelectionEvent event){
      if (event.getState()) {
        ((CategoryDisplay)display).getRemoveOrphanedButton().enable();
        if (display.getListDisplay().getGrid().getSelectedRecord() != null && !((CategoryDisplay)display).getAllCategoriesDisplay().getGrid().isDisabled()) {
          ((CategoryDisplay)display).getInsertOrphanButton().enable();
        }
      }
 else {
        ((CategoryDisplay)display).getRemoveOrphanedButton().disable();
        ((CategoryDisplay)display).getInsertOrphanButton().disable();
      }
    }
  }
);
}
