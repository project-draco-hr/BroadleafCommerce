{
  final AbstractDynamicDataSource dataSource=getPresenterSequenceSetupManager().getDataSource("categoryTreeDS");
  if (getPresenterSequenceSetupManager().getDataSource("categorySearchDS").stripDuplicateAllowSpecialCharacters(dataSource.getPrimaryKeyValue(selectedRecord)).equals(rootId)) {
    formPresenter.disable();
    display.getListDisplay().getRemoveButton().disable();
  }
  allChildCategoriesPresenter.load(selectedRecord,dataSource,new DSCallback(){
    public void execute(    DSResponse response,    Object rawData,    DSRequest request){
      if (response.getStatus() == RPCResponse.STATUS_FAILURE) {
        getDisplay().getInsertOrphanButton().disable();
      }
 else {
        if (getDisplay().getOrphanedCategoryGrid().getSelectedRecord() != null) {
          getDisplay().getInsertOrphanButton().enable();
        }
        allChildCategoriesPresenter.enable();
        allChildCategoriesPresenter.setStartState();
        mediaPresenter.load(selectedRecord,dataSource,null);
      }
    }
  }
);
  display.getListDisplay().getAddButton().enable();
  featuredPresenter.load(selectedRecord,dataSource,null);
  childProductsPresenter.load(selectedRecord,dataSource,null);
  getDisplay().getAllCategoriesDisplay().getRemoveButton().disable();
  addListenerToFormItem(getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().getForm());
}
