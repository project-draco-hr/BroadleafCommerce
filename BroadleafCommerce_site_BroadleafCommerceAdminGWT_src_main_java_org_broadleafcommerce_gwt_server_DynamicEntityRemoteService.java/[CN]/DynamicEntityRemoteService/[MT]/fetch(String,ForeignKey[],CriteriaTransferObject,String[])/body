{
  Entity[] payload;
  int totalRecords;
  try {
    Class<?>[] entities=getPolymorphicEntities(ceilingEntityFullyQualifiedClassname);
    Map<String,FieldMetadata> mergedProperties=getMergedProperties(ceilingEntityFullyQualifiedClassname,entities,foreignFields,additionalNonPersistentProperties);
    BaseCtoConverter ctoConverter=getCtoConverter(cto,ceilingEntityFullyQualifiedClassname,mergedProperties);
    PersistentEntityCriteria queryCriteria=ctoConverter.convert(cto,ceilingEntityFullyQualifiedClassname);
    List<Serializable> records=dynamicEntityDao.query(queryCriteria,Class.forName(ceilingEntityFullyQualifiedClassname));
    payload=getRecords(mergedProperties,records,null);
    totalRecords=getTotalRecords(ceilingEntityFullyQualifiedClassname,cto,ctoConverter);
  }
 catch (  Exception e) {
    LOG.error("Problem fetching results for " + ceilingEntityFullyQualifiedClassname,e);
    throw new ServiceException("Unable to fetch results for " + ceilingEntityFullyQualifiedClassname,e);
  }
  DynamicResultSet results=new DynamicResultSet(null,payload,totalRecords);
  return results;
}
