{
  Entity[] payload;
  try {
    Class<?>[] entities=getPolymorphicEntities(targetEntityFullyQualifiedClassname);
    Map<String,FieldMetadata> mergedProperties=getMergedProperties(targetEntityFullyQualifiedClassname,entities,foreignFields,additionalNonPersistentProperties);
    List<Serializable> records=new ArrayList<Serializable>();
    records.add((Serializable)Class.forName(targetEntityFullyQualifiedClassname).newInstance());
    payload=getRecords(mergedProperties,records,null);
  }
 catch (  Exception e) {
    LOG.error("Problem fetching results for " + targetEntityFullyQualifiedClassname,e);
    throw new ServiceException("Unable to fetch results for " + targetEntityFullyQualifiedClassname,e);
  }
  DynamicResultSet results=new DynamicResultSet(null,payload,1);
  return results;
}
