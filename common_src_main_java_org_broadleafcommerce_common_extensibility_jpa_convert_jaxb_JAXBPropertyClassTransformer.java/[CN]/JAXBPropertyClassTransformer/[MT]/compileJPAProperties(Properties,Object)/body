{
  if (!(key instanceof String)) {
    return;
  }
  String keyString=(String)key;
  if (keyString.startsWith(OMIT_KEY_PREFIX)) {
    String className=keyString.substring(OMIT_KEY_PREFIX.length() + 1);
    String[] getterNames=StringUtils.tokenizeToStringArray(props.getProperty(keyString),ConfigurableApplicationContext.CONFIG_LOCATION_DELIMITERS);
    if (getterNames != null && getterNames.length > 0) {
      if (omitClassInfo.get(className) == null) {
        omitClassInfo.put(className,new HashSet<String>());
      }
      for (      String getterName : getterNames) {
        if (addClassInfo.get(className) != null && addClassInfo.get(className).contains(getterName)) {
          throw new IllegalClassFormatException("You cannot add and exclude the same property from being serialized by JAXB: " + className + "."+ getterName+ " - Check the configuration.");
        }
        omitClassInfo.get(className).add(getterName);
      }
    }
  }
 else   if (keyString.startsWith(ADD_KEY_PREFIX)) {
    String className=keyString.substring(ADD_KEY_PREFIX.length() + 1);
    String[] getterNames=StringUtils.tokenizeToStringArray(props.getProperty(keyString),ConfigurableApplicationContext.CONFIG_LOCATION_DELIMITERS);
    if (getterNames != null && getterNames.length > 0) {
      if (addClassInfo.get(className) == null) {
        addClassInfo.put(className,new HashSet<String>());
      }
      for (      String getterName : getterNames) {
        if (omitClassInfo.get(className) != null && omitClassInfo.get(className).contains(getterName)) {
          throw new IllegalClassFormatException("You cannot add and exclude the same property from being serialized by JAXB: " + className + "."+ getterName+ " - Check the configuration.");
        }
        addClassInfo.get(className).add(getterName);
      }
    }
  }
}
