{
  CyberSourceCardResponse cardResponse=new CyberSourceCardResponse();
  cardResponse.setServiceType(paymentRequest.getServiceType());
  cardResponse.setTransactionType(paymentRequest.getTransactionType());
  cardResponse.setMethodType(paymentRequest.getMethodType());
  RequestMessage request=buildRequestMessage(paymentRequest);
  ReplyMessage reply;
  try {
    reply=sendRequest(request);
  }
 catch (  Exception e) {
    incrementFailure();
    throw new PaymentException(e);
  }
  clearStatus();
  buildResponse(cardResponse,reply);
  String[] invalidFields=reply.getInvalidField();
  String[] missingFields=reply.getMissingField();
  if ((invalidFields != null && invalidFields.length > 0) || (missingFields != null && missingFields.length > 0)) {
    PaymentHostException e=new PaymentHostException();
    cardResponse.setErrorDetected(true);
    StringBuffer sb=new StringBuffer();
    if (invalidFields != null && invalidFields.length > 0) {
      sb.append("invalid fields :[ ");
      for (      String invalidField : invalidFields) {
        sb.append(invalidField);
      }
      sb.append(" ]\n");
    }
    if (missingFields != null && missingFields.length > 0) {
      sb.append("missing fields: [ ");
      for (      String missingField : missingFields) {
        sb.append(missingField);
      }
      sb.append(" ]");
    }
    cardResponse.setErrorText(sb.toString());
    e.setPaymentResponse(cardResponse);
    throw e;
  }
  return cardResponse;
}
