{
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("productOptionDS",new ProductOptionListDataSourceFactory(),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource top){
      setupDisplayItems(top);
      ((ListGridDataSource)top).setupGridFields(new String[]{},new Boolean[]{});
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("productOptionPriceListDS",new PriceListDataSourceFactory(),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource top){
      GWT.log("created datasource");
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("productOptionPriceListMapDS",new ProductOptionPriceListMapDataSourceFactory(this),null,null,new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource result){
      priceListPresenter=new MapStructurePresenter("",getDisplay().getPriceAdjustmentDisplay(),getMediaEntityView(),BLCMain.getMessageManager().getString("newPriceAdjustment"));
      priceListPresenter.setDataSource((ListGridDataSource)result,new String[]{},new Boolean[]{});
    }
    protected MapStructureEntityEditDialog getMediaEntityView(){
      mapEntityAdd=new MapStructureEntityEditDialog(MediaMapDataSourceFactory.MAPSTRUCTURE,getPresenterSequenceSetupManager().getDataSource("productOptionPriceListDS"),"friendlyName","priceKey");
      mapEntityAdd.setShowMedia(false);
      return mapEntityAdd;
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("productOptionLocaleDS",new LocaleDataSourceFactory(org.broadleafcommerce.openadmin.client.datasource.CeilingEntities.LOCALE),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource top){
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("productOptionValueTranslationMapDS",new ProductOptionTranslationMapDataSourceFactory(this),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource result){
      translationsPresenter=new MapStructurePresenter("",getDisplay().getTranslationsDisplay(),getMediaEntityView(),BLCMain.getMessageManager().getString("newMediaTitle"));
      translationsPresenter.setDataSource((ListGridDataSource)result,new String[]{},new Boolean[]{});
    }
    protected MapStructureEntityEditDialog getMediaEntityView(){
      MapStructureEntityEditDialog mapEntityAdd2;
      mapEntityAdd2=new MapStructureEntityEditDialog(MediaMapDataSourceFactory.MAPSTRUCTURE,getPresenterSequenceSetupManager().getDataSource("productOptionLocaleDS"),"friendlyName","localeCode");
      mapEntityAdd2.setShowMedia(false);
      return mapEntityAdd2;
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("productOptionValueDS",new ProductOptionValueDataSourceFactory(),new AsyncCallbackAdapter(){
    @Override public void onSetupSuccess(    DataSource result){
      productOptionValuePresenter=new ProductOptionValueSubPresenter(getDisplay().getProductOptionValueDisplay(),BLCMain.getMessageManager().getString("newProductOptionValue"),null,false,true,false);
      productOptionValuePresenter.setDataSource((ListGridDataSource)result,new String[]{},new Boolean[]{});
    }
  }
));
}
