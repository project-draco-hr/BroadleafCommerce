{
  Customer customer=(Customer)command;
  ModelAndView mav=new ModelAndView();
  Customer customerFromDb=customerService.readCustomerByEmail(customer.getEmailAddress());
  if (customerFromDb != null) {
    if (!StringUtils.isEmpty(customerFromDb.getChallengeQuestion()) && !StringUtils.isEmpty(customerFromDb.getChallengeAnswer())) {
      mav=new ModelAndView("redirect:/challengeQuestion.htm",errors.getModel());
    }
 else {
      String temporaryPassword=PasswordUtils.generateTemporaryPassword(8);
      customerFromDb.setUnencodedPassword(temporaryPassword);
      customerFromDb.setPasswordChangeRequired(true);
      customerService.saveCustomer(customerFromDb);
      emailService.sendEmail(customerFromDb,TEMPLATE,EMAIL_FROM,EMAIL_SUBJECT);
      mav=new ModelAndView(getSuccessView(),errors.getModel());
    }
    mav.addObject("email",customerFromDb.getEmailAddress());
  }
 else {
    errors.rejectValue("emailAddress","emailAddress.notInUse",null,null);
  }
  if (errors.hasErrors()) {
    logger.debug("Error returning back to the form");
    return showForm(request,response,errors);
  }
  mav.addObject("saved",true);
  return mav;
}
