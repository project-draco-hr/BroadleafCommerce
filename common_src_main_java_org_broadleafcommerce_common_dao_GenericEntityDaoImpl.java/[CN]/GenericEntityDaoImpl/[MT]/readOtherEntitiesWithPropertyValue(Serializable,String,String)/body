{
  Class clazz=DynamicDaoHelperImpl.getNonProxyImplementationClassIfNecessary(instance.getClass());
  CriteriaBuilder builder=em.getCriteriaBuilder();
  CriteriaQuery<Long> criteria=builder.createQuery(Long.class);
  Root root=criteria.from(clazz);
  criteria.select(root.get(getIdField(clazz).getName()).as(Long.class));
  List<Predicate> restrictions=new ArrayList<Predicate>();
  restrictions.add(builder.equal(root.get(propertyName),value));
  restrictions.add(builder.notEqual(root.get("id"),getIdentifier(instance)));
  restrictions.add(builder.or(builder.isNull(root.get("archiveStatus").get("archived")),builder.equal(root.get("archiveStatus").get("archived"),'N')));
  criteria.where(restrictions.toArray(new Predicate[restrictions.size()]));
  return em.createQuery(criteria).getResultList();
}
