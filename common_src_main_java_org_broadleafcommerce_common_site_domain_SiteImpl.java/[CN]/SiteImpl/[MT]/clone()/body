{
  Site clone;
  try {
    clone=(Site)Class.forName(this.getClass().getName()).newInstance();
    try {
      checkCloneable(clone);
    }
 catch (    CloneNotSupportedException e) {
      LOG.warn("Clone implementation missing in inheritance hierarchy outside of Broadleaf: " + clone.getClass().getName(),e);
    }
    clone.setId(id);
    clone.setName(name);
    clone.setDeactivated(isDeactivated());
    clone.setSiteResolutionType(getSiteResolutionType());
    clone.setSiteIdentifierValue(getSiteIdentifierValue());
    ((Status)clone).setArchived(getArchived());
    for (    Catalog catalog : getCatalogs()) {
      Catalog cloneCatalog=new CatalogImpl();
      cloneCatalog.setId(catalog.getId());
      cloneCatalog.setName(catalog.getName());
      clone.getCatalogs().add(cloneCatalog);
    }
    BroadleafRequestContext context=BroadleafRequestContext.getBroadleafRequestContext();
    if (context != null && context.getAdditionalProperties().containsKey("blSiteNativeMethodEntityExtensionManager")) {
      SiteNativeMethodEntityExtensionManager extensionManager=(SiteNativeMethodEntityExtensionManager)context.getAdditionalProperties().get("blSiteNativeMethodEntityExtensionManager");
      extensionManager.getProxy().contributeClone(this,clone);
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  return clone;
}
