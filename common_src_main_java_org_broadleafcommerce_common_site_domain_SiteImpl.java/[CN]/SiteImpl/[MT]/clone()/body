{
  Site clone;
  try {
    clone=(Site)Class.forName(this.getClass().getName()).newInstance();
    try {
      checkCloneable(clone);
    }
 catch (    CloneNotSupportedException e) {
      LOG.warn("Clone implementation missing in inheritance hierarchy outside of Broadleaf: " + clone.getClass().getName(),e);
    }
    clone.setId(id);
    clone.setName(name);
    clone.setDeactivated(isDeactivated());
    clone.setSiteResolutionType(getSiteResolutionType());
    clone.setSiteIdentifierValue(getSiteIdentifierValue());
    ((Status)clone).setArchived(getArchived());
    for (    SiteCatalogXref xref : getCatalogXrefs()) {
      Catalog cloneCatalog=new CatalogImpl();
      cloneCatalog.setId(xref.getCatalog().getId());
      cloneCatalog.setName(xref.getCatalog().getName());
      SiteCatalogXref cloneXref=new SiteCatalogXrefImpl();
      cloneXref.setSite(this);
      cloneXref.setCatalog(cloneCatalog);
      clone.getCatalogXrefs().add(cloneXref);
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  return clone;
}
