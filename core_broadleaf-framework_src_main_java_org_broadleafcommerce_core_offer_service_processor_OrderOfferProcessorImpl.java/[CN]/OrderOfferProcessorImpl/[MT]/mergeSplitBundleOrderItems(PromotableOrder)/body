{
  Map<String,BundleOrderItem> gatheredBundleItems=new HashMap<String,BundleOrderItem>();
  List<BundleOrderItemSplitContainer> bundleContainers=order.getBundleSplitItems();
  for (  BundleOrderItemSplitContainer bundleContainer : bundleContainers) {
    PromotableFulfillmentGroup targetGroup=getTargetFulfillmentGroup(order,bundleContainer.getKey());
    List<BundleOrderItem> bundleOrderItems=bundleContainer.getSplitItems();
    for (    BundleOrderItem bundleOrderItem : bundleOrderItems) {
      bundleOrderItem.assignFinalPrice();
      String hash=bundleOrderItem.getPrice().stringValue();
      if (!gatheredBundleItems.containsKey(hash)) {
        gatheredBundleItems.put(hash,bundleOrderItem);
      }
 else {
        BundleOrderItem temp=gatheredBundleItems.get(hash);
        temp.setQuantity(temp.getQuantity() + 1);
      }
    }
    cartService.removeItemFromOrder(order.getDelegate(),bundleContainer.getKey(),false);
    for (    BundleOrderItem vals : gatheredBundleItems.values()) {
      vals.setId(null);
      BundleOrderItem temp=(BundleOrderItem)cartService.addOrderItemToOrder(order.getDelegate(),vals,false);
      if (targetGroup != null) {
        cartService.addItemToFulfillmentGroup(temp,targetGroup.getDelegate(),false);
      }
    }
  }
}
