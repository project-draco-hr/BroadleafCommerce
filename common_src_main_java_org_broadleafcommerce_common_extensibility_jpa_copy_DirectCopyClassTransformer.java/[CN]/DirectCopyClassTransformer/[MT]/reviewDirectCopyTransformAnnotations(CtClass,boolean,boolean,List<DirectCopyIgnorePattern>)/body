{
  List<?> attributes=clazz.getClassFile().getAttributes();
  Iterator<?> itr=attributes.iterator();
  List<String> templates=new ArrayList<String>();
  List<Boolean> skips=new ArrayList<Boolean>();
  List<Boolean> renames=new ArrayList<Boolean>();
  XFormParams response=new XFormParams();
  check: {
    while (itr.hasNext()) {
      Object object=itr.next();
      if (AnnotationsAttribute.class.isAssignableFrom(object.getClass())) {
        AnnotationsAttribute attr=(AnnotationsAttribute)object;
        Annotation[] items=attr.getAnnotations();
        for (        Annotation annotation : items) {
          String typeName=annotation.getTypeName();
          if (typeName.equals(DirectCopyTransform.class.getName())) {
            ArrayMemberValue arrayMember=(ArrayMemberValue)annotation.getMemberValue("value");
            for (            MemberValue arrayMemberValue : arrayMember.getValue()) {
              AnnotationMemberValue member=(AnnotationMemberValue)arrayMemberValue;
              Annotation memberAnnot=member.getValue();
              ArrayMemberValue annot=(ArrayMemberValue)memberAnnot.getMemberValue("templateTokens");
              for (              MemberValue memberValue : annot.getValue()) {
                String val=((StringMemberValue)memberValue).getValue();
                reviewTemplateTokens(matchedPatterns,templates,val);
              }
              BooleanMemberValue skipAnnot=(BooleanMemberValue)memberAnnot.getMemberValue("skipOverlaps");
              if (skipAnnot != null) {
                skips.add(skipAnnot.getValue());
              }
 else {
                skips.add(mySkipOverlaps);
              }
              BooleanMemberValue renameAnnot=(BooleanMemberValue)memberAnnot.getMemberValue("renameMethodOverlaps");
              if (renameAnnot != null) {
                renames.add(renameAnnot.getValue());
              }
 else {
                renames.add(myRenameMethodOverlaps);
              }
            }
            response.setXformVals(templates.toArray(new String[templates.size()]));
            response.setXformSkipOverlaps(skips.toArray(new Boolean[skips.size()]));
            response.setXformRenameMethodOverlaps(renames.toArray(new Boolean[renames.size()]));
            break check;
          }
        }
      }
    }
  }
  return response;
}
