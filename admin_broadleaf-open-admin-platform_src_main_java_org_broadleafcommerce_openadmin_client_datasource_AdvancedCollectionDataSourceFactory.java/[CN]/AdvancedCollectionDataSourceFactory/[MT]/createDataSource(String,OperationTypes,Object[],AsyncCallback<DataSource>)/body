{
  final PersistencePerspective persistencePerspective=collectionMetadata.getPersistencePerspective();
  final List<DataSourceModule> dataSourceModuleList=new ArrayList<DataSourceModule>();
  collectionMetadata.accept(new MetadataVisitorAdapter(){
    @Override public void visit(    AdornedTargetCollectionMetadata metadata){
      dataSourceModuleList.add(new BasicClientEntityModule(metadata.getParentObjectClass(),persistencePerspective,AppServices.DYNAMIC_ENTITY));
      dataSourceModuleList.add(new AdornedTargetListClientModule(metadata.getParentObjectClass(),persistencePerspective,AppServices.DYNAMIC_ENTITY));
    }
    @Override public void visit(    BasicCollectionMetadata metadata){
      dataSourceModuleList.add(new BasicClientEntityModule(metadata.getCollectionCeilingEntity(),persistencePerspective,AppServices.DYNAMIC_ENTITY));
    }
  }
);
  if (persistencePerspective.getPersistencePerspectiveItems().containsKey(PersistencePerspectiveItemType.MAPSTRUCTURE)) {
  }
  DataSourceModule[] modules=new DataSourceModule[dataSourceModuleList.size()];
  modules=dataSourceModuleList.toArray(modules);
  ListGridDataSource dataSource=new ListGridDataSource(name,persistencePerspective,AppServices.DYNAMIC_ENTITY,modules);
  dataSource.buildFields(null,false,cb);
}
