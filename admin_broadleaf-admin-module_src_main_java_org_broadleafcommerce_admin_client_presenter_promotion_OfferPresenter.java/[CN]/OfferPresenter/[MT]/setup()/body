{
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("offerDS",new OfferListDataSourceFactory(),new NullAsyncCallbackAdapter()));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("offerOrderDS",new OrderListDataSourceFactory(),new NullAsyncCallbackAdapter()));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("offerOrderItemDS",new OrderItemListDataSourceFactory(),new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource result){
      ((DynamicEntityDataSource)result).permanentlyShowFields("product.id","category.id","sku.id");
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("offerFGDS",new FulfillmentGroupListDataSourceFactory(),new NullAsyncCallbackAdapter()));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("offerCustomerDS",new CustomerListDataSourceFactory(),new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource result){
      ((DynamicEntityDataSource)result).permanentlyShowFields("id");
      getPresenterSequenceSetupManager().getDataSource("offerDS").permanentlyHideFields("appliesToOrderRules","appliesToCustomerRules","appliesToFulfillmentGroupRules","id");
      getPresenterSequenceSetupManager().getDataSource("offerDS").resetVisibilityOnly("name","description","type","discountType","value","priority","startDate","endDate");
      setupDisplayItems(getPresenterSequenceSetupManager().getDataSource("offerDS"),getPresenterSequenceSetupManager().getDataSource("offerOrderDS"),getPresenterSequenceSetupManager().getDataSource("offerOrderItemDS"),getPresenterSequenceSetupManager().getDataSource("offerFGDS"),result);
      ((ListGridDataSource)getPresenterSequenceSetupManager().getDataSource("offerDS")).setupGridFields(new String[]{"name"},new Boolean[]{true});
    }
  }
));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("offerItemCriteriaDS",new OfferItemCriteriaListDataSourceFactory(),new NullAsyncCallbackAdapter()));
  getPresenterSequenceSetupManager().addOrReplaceItem(new PresenterSetupItem("offerItemTargetCriteriaDS",new OfferItemTargetCriteriaListDataSourceFactory(),new AsyncCallbackAdapter(){
    public void onSetupSuccess(    DataSource result){
      initializer=new OfferPresenterInitializer(OfferPresenter.this,getPresenterSequenceSetupManager().getDataSource("offerItemCriteriaDS"),(DynamicEntityDataSource)result,getPresenterSequenceSetupManager().getDataSource("offerOrderItemDS"));
      extractor=new OfferPresenterExtractor(OfferPresenter.this);
    }
  }
));
}
