{
  super.bind();
  getDisplay().getStepFGForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getStepItemForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getStepBogoForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getOrderCombineForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getOrderItemCombineForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getRawCustomerForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getRawOrderForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getRawFGForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getRestrictForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getCustomerObtainForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getWhichCustomerForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getOrderForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getReceiveFromAnotherPromoForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getQualifyForAnotherPromoForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getReceiveFromAnotherPromoTargetForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getQualifyForAnotherPromoTargetForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getFGCombineForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
    }
  }
);
  getDisplay().getListDisplay().getRemoveButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        BLCMain.MASTERVIEW.clearStatus();
        getDisplay().getAdvancedButton().setSelected(false);
        getDisplay().getAdvancedButton().disable();
        getDisplay().getDeliveryTypeRadio().disable();
        getDisplay().getCustomerRuleRadio().disable();
        getDisplay().getOrderRuleRadio().disable();
        initializer.disable();
      }
    }
  }
);
  getDisplay().getAdvancedButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (((ToolStripButton)event.getSource()).getSelected()) {
        getPresenterSequenceSetupManager().getDataSource("offerDS").resetPermanentFieldVisibilityBasedOnType(lastSelectedRecord.getAttributeAsStringArray("_type"));
        getPresenterSequenceSetupManager().getDataSource("offerDS").permanentlyHideFields("deliveryType","offerItemQualifierRuleType","offerItemTargetRuleType","uses","targetItemCriteria.id","targetItemCriteria.quantity","targetItemCriteria.orderItemMatchRule");
        getDisplay().getAdvancedItemCriteria().setVisible(true);
        getDisplay().getAdvancedItemCriteriaTarget().setVisible(true);
        getDisplay().getRestrictionSectionView().setVisible(true);
      }
 else {
        getPresenterSequenceSetupManager().getDataSource("offerDS").resetVisibilityOnly("name","description","type","discountType","value","priority","startDate","endDate");
        getDisplay().getAdvancedItemCriteria().setVisible(false);
        getDisplay().getAdvancedItemCriteriaTarget().setVisible(false);
        getDisplay().getRestrictionSectionView().setVisible(false);
      }
      @SuppressWarnings("rawtypes") Map values=getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().getForm().getValues();
      Object[] keys=values.keySet().toArray();
      for (      Object key : keys) {
        if (key.toString().equals("__ref")) {
          values.remove(key);
        }
      }
      getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().buildFields(getPresenterSequenceSetupManager().getDataSource("offerDS"),true,true,false,lastSelectedRecord);
      getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().getForm().editRecord(lastSelectedRecord);
      getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().getForm().setValues(values);
      rebindFormItems(lastSelectedRecord);
    }
  }
);
  selectionChangedHandlerRegistration.removeHandler();
  getDisplay().getListDisplay().getGrid().addSelectionChangedHandler(new SelectionChangedHandler(){
    public void onSelectionChanged(    SelectionEvent event){
      ListGridRecord selectedRecord=event.getSelectedRecord();
      if (event.getState()) {
        if (!selectedRecord.equals(lastSelectedRecord)) {
          lastSelectedRecord=selectedRecord;
          if (selectedRecord.getAttributeAsStringArray("_type") == null) {
            formPresenter.disable();
            getDisplay().getListDisplay().getRemoveButton().disable();
          }
 else {
            formPresenter.setStartState();
            getPresenterSequenceSetupManager().getDataSource("offerDS").resetVisibilityOnly("name","description","type","discountType","value","priority","startDate","endDate");
            getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().buildFields(getDisplay().getListDisplay().getGrid().getDataSource(),true,true,false,selectedRecord);
            getDisplay().getDynamicFormDisplay().getFormOnlyDisplay().getForm().editRecord(selectedRecord);
            getDisplay().getListDisplay().getRemoveButton().enable();
          }
          changeSelection(selectedRecord);
        }
      }
    }
  }
);
  getSaveButtonHandlerRegistration().removeHandler();
  getDisplay().getDynamicFormDisplay().getSaveButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        extractor.applyData(lastSelectedRecord);
      }
    }
  }
);
  getDisplay().getHelpButtonType().addMouseMoveHandler(new MouseMoveHandler(){
    public void onMouseMove(    MouseMoveEvent event){
      if (currentHelp == null) {
        currentHelp=createHelpWin(BLCMain.getMessageManager().getString("offerObtainSettingsHelpTitle"),BLCMain.getMessageManager().getString("offerObtainSettingsHelpContent"),true,300,200,getDisplay().getHelpButtonType().getAbsoluteLeft() + 26,getDisplay().getHelpButtonType().getAbsoluteTop());
        currentHelp.show();
      }
    }
  }
);
  getDisplay().getHelpButtonType().addMouseOutHandler(new MouseOutHandler(){
    public void onMouseOut(    MouseOutEvent event){
      if (currentHelp != null) {
        currentHelp.destroy();
        currentHelp=null;
      }
    }
  }
);
  getDisplay().getDeliveryTypeRadio().addChangedHandler(new ChangedHandler(){
    public void onChanged(    ChangedEvent event){
      String deliveryType=event.getValue().toString();
      initializer.initDeliveryType(deliveryType,lastSelectedRecord);
    }
  }
);
  getDisplay().getCustomerRuleRadio().addChangedHandler(new ChangedHandler(){
    public void onChanged(    ChangedEvent event){
      String customerRule=event.getValue().toString();
      initializer.initCustomerRule(customerRule,lastSelectedRecord);
    }
  }
);
  getDisplay().getFgRuleRadio().addChangedHandler(new ChangedHandler(){
    public void onChanged(    ChangedEvent event){
      String fgRule=event.getValue().toString();
      initializer.initFGRule(fgRule,lastSelectedRecord);
    }
  }
);
  getDisplay().getItemRuleRadio().addChangedHandler(new ChangedHandler(){
    public void onChanged(    ChangedEvent event){
      String itemRule=event.getValue().toString();
      initializer.initItemRule(itemRule);
    }
  }
);
  getDisplay().getOrderRuleRadio().addChangedHandler(new ChangedHandler(){
    public void onChanged(    ChangedEvent event){
      String orderRule=event.getValue().toString();
      initializer.initOrderRule(orderRule,lastSelectedRecord);
    }
  }
);
  getDisplay().getHelpButtonBogo().addMouseMoveHandler(new MouseMoveHandler(){
    public void onMouseMove(    MouseMoveEvent event){
      if (currentHelp == null) {
        currentHelp=createHelpWin(BLCMain.getMessageManager().getString("bogoHelpTitle"),BLCMain.getMessageManager().getString("bogoHelpContent"),true,300,200,getDisplay().getHelpButtonBogo().getAbsoluteLeft() + 26,getDisplay().getHelpButtonBogo().getAbsoluteTop());
        currentHelp.show();
      }
    }
  }
);
  getDisplay().getHelpButtonBogo().addMouseOutHandler(new MouseOutHandler(){
    public void onMouseOut(    MouseOutEvent event){
      if (currentHelp != null) {
        currentHelp.destroy();
        currentHelp=null;
      }
    }
  }
);
  getDisplay().getBogoRadio().addChangedHandler(new ChangedHandler(){
    public void onChanged(    ChangedEvent event){
      String bogoRule=event.getValue().toString();
      initializer.initBogoRule(bogoRule);
    }
  }
);
  getDisplay().getAddItemButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        final ItemBuilderDisplay display=getDisplay().addItemBuilder(getPresenterSequenceSetupManager().getDataSource("offerOrderItemDS"));
        bindItemBuilderEvents(display);
        display.setDirty(true);
        getDisplay().getDynamicFormDisplay().getSaveButton().enable();
        getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
      }
    }
  }
);
  for (  final ItemBuilderDisplay display : getDisplay().getItemBuilderViews()) {
    bindItemBuilderEvents(display);
  }
  getDisplay().getCustomerFilterBuilder().addFilterChangedHandler(new FilterChangedHandler(){
    public void onFilterChanged(    FilterChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
      getDisplay().getRawCustomerTextArea().setAttribute("dirty",true);
    }
  }
);
  additionalFilterEventManager.addFilterBuilderAdditionalEventHandler(getDisplay().getCustomerFilterBuilder(),new FilterBuilderAdditionalEventHandler(){
    @Override public void onAdditionalChangeEvent(){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
      getDisplay().getRawCustomerTextArea().setAttribute("dirty",true);
    }
  }
);
  getDisplay().getOrderFilterBuilder().addFilterChangedHandler(new FilterChangedHandler(){
    public void onFilterChanged(    FilterChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
      getDisplay().getRawOrderTextArea().setAttribute("dirty",true);
    }
  }
);
  additionalFilterEventManager.addFilterBuilderAdditionalEventHandler(getDisplay().getOrderFilterBuilder(),new FilterBuilderAdditionalEventHandler(){
    @Override public void onAdditionalChangeEvent(){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
      getDisplay().getRawOrderTextArea().setAttribute("dirty",true);
    }
  }
);
  getDisplay().getFulfillmentGroupFilterBuilder().addFilterChangedHandler(new FilterChangedHandler(){
    public void onFilterChanged(    FilterChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
      getDisplay().getRawFGTextArea().setAttribute("dirty",true);
    }
  }
);
  additionalFilterEventManager.addFilterBuilderAdditionalEventHandler(getDisplay().getFulfillmentGroupFilterBuilder(),new FilterBuilderAdditionalEventHandler(){
    @Override public void onAdditionalChangeEvent(){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
      getDisplay().getRawFGTextArea().setAttribute("dirty",true);
    }
  }
);
  getDisplay().getTargetItemBuilder().getRawItemForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
      getDisplay().getTargetItemBuilder().setDirty(true);
    }
  }
);
  getDisplay().getTargetItemBuilder().getItemForm().addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
      getDisplay().getTargetItemBuilder().setDirty(true);
    }
  }
);
  getDisplay().getTargetItemBuilder().getItemFilterBuilder().addFilterChangedHandler(new FilterChangedHandler(){
    public void onFilterChanged(    FilterChangedEvent event){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
      getDisplay().getTargetItemBuilder().setDirty(true);
    }
  }
);
  additionalFilterEventManager.addFilterBuilderAdditionalEventHandler(getDisplay().getTargetItemBuilder().getItemFilterBuilder(),new FilterBuilderAdditionalEventHandler(){
    @Override public void onAdditionalChangeEvent(){
      getDisplay().getDynamicFormDisplay().getSaveButton().enable();
      getDisplay().getDynamicFormDisplay().getRefreshButton().enable();
      getDisplay().getTargetItemBuilder().setDirty(true);
    }
  }
);
  getDisplay().getDynamicFormDisplay().getRefreshButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        additionalFilterEventManager.resetFilterState(new FilterStateRunnable(){
          @Override public void run(          FilterRestartCallback cb){
            initializeDisplay(lastSelectedRecord,cb);
          }
        }
);
      }
    }
  }
);
  getDisplay().getListDisplay().getGrid().addFetchDataHandler(new FetchDataHandler(){
    @Override public void onFilterData(    FetchDataEvent event){
      initializer.disable();
    }
  }
);
}
