{
  Order cart=CartState.getCart();
  if (cart != null && !(cart instanceof NullOrderImpl)) {
    Map<OrderPayment,Referenced> payments=new HashMap<OrderPayment,Referenced>();
    Iterator<OrderPayment> paymentInfoItr=cart.getPayments().iterator();
    while (paymentInfoItr.hasNext()) {
      OrderPayment paymentInfo=paymentInfoItr.next();
      if (!PaymentType.CUSTOMER_CREDIT.equals(paymentInfo.getType()) && !PaymentType.GIFT_CARD.equals(paymentInfo.getType())) {
        paymentInfoItr.remove();
        orderService.removePaymentFromOrder(cart,paymentInfo);
      }
    }
    List<PaymentType> paymentInfoTypes=createPaymentInfoTypeList(billingForm);
    paymentInfoServiceExtensionManager.getProxy().addAdditionalPaymentInfos(payments,paymentInfoTypes,request,response,model,billingForm,result);
    if (result.hasErrors()) {
      return handleCheckoutError(request,model);
    }
    try {
      CheckoutResponse checkoutResponse=checkoutService.performCheckout(cart);
    }
 catch (    CheckoutException workflowException) {
      return handleCheckoutError(request,model);
    }
    return getConfirmationView(cart.getOrderNumber());
  }
  return getCartPageRedirect();
}
