{
  Order cart=CartState.getCart();
  if (cart != null) {
    orderService.removePaymentsFromOrder(cart,PaymentInfoType.CREDIT_CARD);
    if (billingForm.isUseShippingAddress()) {
      copyShippingAddressToBillingAddress(cart,billingForm);
    }
    billingInfoFormValidator.validate(billingForm,result);
    if (result.hasErrors()) {
      populateModelWithShippingReferenceData(request,model);
      return getCheckoutView();
    }
    PaymentInfo ccInfo=creditCardPaymentInfoFactory.constructPaymentInfo(cart);
    ccInfo.setAddress(billingForm.getAddress());
    cart.getPaymentInfos().add(ccInfo);
    Map<PaymentInfo,Referenced> payments=paymentInfoTypeService.getPaymentsMap(cart);
    CreditCardPaymentInfo ccReference=(CreditCardPaymentInfo)securePaymentInfoService.create(PaymentInfoType.CREDIT_CARD);
    ccReference.setNameOnCard(billingForm.getCreditCardName());
    ccReference.setReferenceNumber(ccInfo.getReferenceNumber());
    ccReference.setPan(billingForm.getCreditCardNumber());
    ccReference.setCvvCode(billingForm.getCreditCardCvvCode());
    ccReference.setExpirationMonth(Integer.parseInt(billingForm.getCreditCardExpMonth()));
    ccReference.setExpirationYear(Integer.parseInt(billingForm.getCreditCardExpYear()));
    securePaymentInfoService.save(ccReference);
    payments.put(ccInfo,ccReference);
    initializeOrderForCheckout(cart);
    CheckoutResponse checkoutResponse=null;
    try {
      checkoutResponse=checkoutService.performCheckout(cart,payments);
    }
 catch (    CheckoutException e) {
      processFailedOrderCheckout(cart);
      populateModelWithShippingReferenceData(request,model);
      String errorMsg=e.getRootCauseMessage();
      if (errorMsg.contains("Credit")) {
        result.rejectValue("creditCardNumber","payment.exception",null,null);
        model.addAttribute("paymentException",true);
      }
 else {
        model.addAttribute("paymentOptionException",true);
      }
      return getCheckoutView();
    }
    return getConfirmationView(cart.getOrderNumber());
  }
  return getCartPageRedirect();
}
