{
  this.setIsModal(true);
  this.setShowModalMask(true);
  this.setShowMinimizeButton(false);
  this.setWidth(600);
  this.setHeight(340);
  this.setCanDragResize(true);
  this.setOverflow(Overflow.AUTO);
  this.setVisible(true);
  treeGrid=new TreeGrid();
  treeGrid.setDataSource(staticAssetFolderDataSource);
  treeGrid.setHeight(230);
  treeGrid.setWidth("30%");
  treeGrid.setAlternateRecordStyles(true);
  treeGrid.setSelectionType(SelectionStyle.SINGLE);
  treeGrid.setCanEdit(false);
  treeGrid.setAutoFetchData(true);
  treeGrid.setDrawAheadRatio(4);
  treeGrid.setCanSort(false);
  treeGrid.setCanResizeFields(true);
  treeGrid.setShowRoot(true);
  treeGrid.addSelectionChangedHandler(new com.smartgwt.client.widgets.grid.events.SelectionChangedHandler(){
    @Override public void onSelectionChanged(    SelectionEvent event){
      if (event.getSelectedRecord() != null) {
        String id=staticAssetFolderDataSource.getPrimaryKeyValue(event.getSelectedRecord());
        ((PresentationLayerAssociatedDataSource)tileGrid.getDataSource()).loadAssociatedGridBasedOnRelationship(id,new DSCallback(){
          public void execute(          DSResponse response,          Object rawData,          DSRequest request){
            tileGrid.enable();
          }
        }
);
      }
    }
  }
);
  tileGrid=new TileGrid();
  tileGrid.setTileWidth(80);
  tileGrid.setTileHeight(120);
  tileGrid.setAutoFetchData(false);
  tileGrid.setSelectionType(SelectionStyle.SINGLE);
  tileGrid.setShowAllRecords(false);
  tileGrid.setHeight(230);
  tileGrid.setWidth("70%");
  staticAssetDataSource.setAssociatedGrid(tileGrid);
  staticAssetDataSource.setupGridFields(new String[]{"pictureLarge","name"});
  tileGrid.setDataSource(staticAssetDataSource);
  tileGrid.addSelectionChangedHandler(new com.smartgwt.client.widgets.tile.events.SelectionChangedHandler(){
    @Override public void onSelectionChanged(    SelectionChangedEvent event){
      saveButton.enable();
    }
  }
);
  tileGrid.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      if (event.isLeftButtonDown()) {
        if (tileGrid.anySelected()) {
          saveButton.enable();
        }
      }
    }
  }
);
  HLayout browseHLayout=new HLayout();
  browseHLayout.addMember(treeGrid);
  browseHLayout.addMember(tileGrid);
  saveButton=new IButton("Ok");
  saveButton.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      Record selectedRecord=tileGrid.getSelection()[0];
      handler.onSearchItemSelected(new TileGridItemSelected(selectedRecord,tileGrid.getDataSource()));
      hide();
    }
  }
);
  IButton cancelButton=new IButton("Cancel");
  cancelButton.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      hide();
    }
  }
);
  HLayout buttonsLayout=new HLayout(10);
  buttonsLayout.setAlign(Alignment.CENTER);
  buttonsLayout.addMember(saveButton);
  buttonsLayout.addMember(cancelButton);
  buttonsLayout.setLayoutTopMargin(10);
  buttonsLayout.setLayoutBottomMargin(10);
  HLayout filterLayout=new HLayout();
  filterLayout.setAlign(Alignment.RIGHT);
  filterLayout.setLayoutTopMargin(10);
  filterLayout.setLayoutRightMargin(5);
  final DynamicForm filterForm=new DynamicForm();
  filterForm.setDataSource(staticAssetDataSource);
  filterForm.setAutoFocus(false);
  TextItem nameFilterItem=new TextItem("name","Search");
  nameFilterItem.setWrapTitle(false);
  filterForm.setFields(nameFilterItem);
  filterForm.addItemChangedHandler(new ItemChangedHandler(){
    public void onItemChanged(    ItemChangedEvent event){
      String id=staticAssetFolderDataSource.getPrimaryKeyValue(treeGrid.getSelectedRecord());
      Criteria valuesAsCriteria=filterForm.getValuesAsCriteria();
      valuesAsCriteria.addCriteria(new Criteria("parentFolder",id));
      tileGrid.fetchData(valuesAsCriteria);
    }
  }
);
  filterLayout.addMember(filterForm);
  VLayout mainLayout=new VLayout();
  mainLayout.addMember(filterLayout);
  mainLayout.addMember(browseHLayout);
  mainLayout.addMember(buttonsLayout);
  addItem(mainLayout);
}
