{
  Set<String> processedLocaleCodes=new HashSet<String>();
  ExtensionResultStatusType result=ExtensionResultStatusType.NOT_HANDLED;
  if (field.getTranslatable()) {
    result=ExtensionResultStatusType.HANDLED;
    TranslationConsiderationContext.setTranslationConsiderationContext(getTranslationEnabled());
    TranslationConsiderationContext.setTranslationService(translationService);
    BroadleafRequestContext tempContext=BroadleafRequestContext.getBroadleafRequestContext();
    if (tempContext == null) {
      tempContext=new BroadleafRequestContext();
      BroadleafRequestContext.setBroadleafRequestContext(tempContext);
    }
    Locale originalLocale=tempContext.getLocale();
    try {
      for (      Locale locale : locales) {
        String localeCode=locale.getLocaleCode();
        if (Boolean.FALSE.equals(locale.getUseCountryInSearchIndex())) {
          int pos=localeCode.indexOf("_");
          if (pos > 0) {
            localeCode=localeCode.substring(0,pos);
            if (processedLocaleCodes.contains(localeCode)) {
              continue;
            }
 else {
              locale=localeService.findLocaleByCode(localeCode);
            }
          }
        }
        processedLocaleCodes.add(localeCode);
        tempContext.setLocale(locale);
        final Object propertyValue;
        if (useSku) {
          propertyValue=shs.getPropertyValue(sku,propertyName);
        }
 else {
          propertyValue=shs.getPropertyValue(product,propertyName);
        }
        values.put(localeCode,propertyValue);
      }
    }
  finally {
      tempContext.setLocale(originalLocale);
    }
  }
  return result;
}
