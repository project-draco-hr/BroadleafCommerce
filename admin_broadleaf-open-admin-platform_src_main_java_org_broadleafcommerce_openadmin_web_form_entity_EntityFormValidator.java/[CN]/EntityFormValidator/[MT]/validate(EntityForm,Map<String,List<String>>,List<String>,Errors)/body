{
  if (MapUtils.isEmpty(propertyErrors) && CollectionUtils.isEmpty(globalErrors)) {
    return true;
  }
  if (MapUtils.isNotEmpty(propertyErrors)) {
    for (    Map.Entry<String,List<String>> pe : propertyErrors.entrySet()) {
      for (      String errorMessage : pe.getValue()) {
        String unserializedFieldName=pe.getKey();
        String serializedFieldName=JSCompatibilityHelper.encode(unserializedFieldName);
        Field field=null;
        if (StringUtils.contains(unserializedFieldName,DynamicEntityFormInfo.FIELD_SEPARATOR)) {
          String[] fieldInfo=unserializedFieldName.split("\\" + DynamicEntityFormInfo.FIELD_SEPARATOR);
          field=form.getDynamicForm(fieldInfo[0]).getFields().get(fieldInfo[1]);
        }
 else         if (form.getFields().get(unserializedFieldName) != null) {
          field=form.getFields().get(unserializedFieldName);
        }
        String value=(field != null) ? field.getValue() : null;
        String[] errorCodes=((AbstractBindingResult)errors).resolveMessageCodes(errorMessage,serializedFieldName);
        FieldError fieldError=new FieldError("entityForm",String.format("fields[%s].value",serializedFieldName),value,false,errorCodes,null,errorMessage);
        ((AbstractBindingResult)errors).addError(fieldError);
      }
    }
  }
  if (CollectionUtils.isNotEmpty(globalErrors)) {
    for (    String errorMessage : globalErrors) {
      errors.reject(errorMessage,errorMessage);
    }
  }
  return false;
}
