{
  String resultVar=element.getAttributeValue("resultVar");
  OutputWrapper wrapper=new OutputWrapper();
  initServices(arguments);
  try {
    Entity[] entities=(Entity[])StandardExpressionProcessor.processExpression(arguments,element.getAttributeValue("entities"));
    String mvelPropertyName="orderItemMatchRule";
    String mvel=null;
    if (entities != null) {
      for (      Entity e : entities) {
        for (        Property p : e.getProperties()) {
          if (mvelPropertyName.equals(p.getName())) {
            mvel=p.getValue();
          }
        }
      }
    }
    if (mvel != null) {
      String ceilingOrderItem="org.broadleafcommerce.core.order.domain.OrderItem";
      String configKeyOrderItem="promotionOrderItem";
      RuleBuilderDTO dtoOrderItem=new RuleBuilderDTO(ceilingOrderItem,configKeyOrderItem,null);
      List<RuleBuilderDTO> dtoList=new ArrayList<RuleBuilderDTO>();
      dtoList.add(dtoOrderItem);
      wrapper.setConditions(ruleBuilderService.buildConditionsDTO(dtoList,mvel));
    }
  }
 catch (  ServiceException e) {
    e.printStackTrace();
  }
catch (  ApplicationSecurityException e) {
    e.printStackTrace();
  }
catch (  MVELTranslationException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  addToModel(arguments,resultVar,wrapper);
}
