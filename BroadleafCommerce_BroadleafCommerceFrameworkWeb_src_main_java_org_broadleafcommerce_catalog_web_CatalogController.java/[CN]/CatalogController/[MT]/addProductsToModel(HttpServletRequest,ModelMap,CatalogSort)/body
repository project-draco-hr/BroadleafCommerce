{
  boolean productFound=false;
  String productId=request.getParameter("productId");
  if (productId != null) {
    Product product=catalogService.findProductById(new Long(productId));
    if (product != null) {
      productFound=validateProductAndAddToModel(product,model);
      addRatingSummaryToModel(productId,model);
    }
  }
 else {
    Category currentCategory=(Category)model.get("currentCategory");
    List<Product> productList=catalogService.findActiveProductsByCategory(currentCategory);
    SearchFilterUtil.filterProducts(productList,request.getParameterMap(),new String[]{"manufacturer","skus[0].salePrice"});
    if ((catalogSort != null) && (catalogSort.getSort() != null)) {
      List<DisplayProduct> displayProducts=new ArrayList<DisplayProduct>();
      displayProducts=populateProducts(productList,currentCategory);
      model.addAttribute("displayProducts",sortProducts(catalogSort,displayProducts));
    }
 else {
      catalogSort=new CatalogSort();
      catalogSort.setSort("featured");
      List<DisplayProduct> displayProducts=new ArrayList<DisplayProduct>();
      displayProducts=populateProducts(productList,currentCategory);
      model.addAttribute("displayProducts",sortProducts(catalogSort,displayProducts));
    }
  }
  return productFound;
}
