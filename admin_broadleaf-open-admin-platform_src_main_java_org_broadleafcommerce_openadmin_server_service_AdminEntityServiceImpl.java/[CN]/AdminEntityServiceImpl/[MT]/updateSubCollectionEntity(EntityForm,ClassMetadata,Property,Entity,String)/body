{
  List<Property> properties=getPropertiesFromEntityForm(entityForm);
  FieldMetadata md=field.getMetadata();
  PersistencePackageRequest ppr=PersistencePackageRequest.fromMetadata(md).withEntity(new Entity());
  if (md instanceof BasicCollectionMetadata) {
    BasicCollectionMetadata fmd=(BasicCollectionMetadata)md;
    ppr.getEntity().setType(new String[]{fmd.getCollectionCeilingEntity()});
    Property fp=new Property();
    fp.setName(ppr.getForeignKey().getManyToField());
    fp.setValue(getContextSpecificRelationshipId(mainMetadata,parentEntity,field.getName()));
    properties.add(fp);
  }
 else   if (md instanceof AdornedTargetCollectionMetadata) {
    ppr.getEntity().setType(new String[]{ppr.getAdornedList().getAdornedTargetEntityClassname()});
  }
 else   if (md instanceof MapMetadata) {
    ppr.getEntity().setType(new String[]{entityForm.getEntityType()});
    Property p=new Property();
    p.setName("symbolicId");
    p.setValue(getContextSpecificRelationshipId(mainMetadata,parentEntity,field.getName()));
    properties.add(p);
  }
 else {
    throw new IllegalArgumentException(String.format("The specified field [%s] for class [%s] was" + " not a collection field.",field.getName(),mainMetadata.getCeilingType()));
  }
  ppr.setCeilingEntityClassname(ppr.getEntity().getType()[0]);
  ppr.setSectionEntityClassname(mainMetadata.getCeilingType());
  ppr.setSectionEntityIdValue(getContextSpecificRelationshipId(mainMetadata,parentEntity,""));
  String sectionField="";
  if (sectionField.contains(".")) {
    sectionField=sectionField.substring(0,sectionField.lastIndexOf("."));
  }
  ppr.setSectionEntityField(sectionField);
  Property p=new Property();
  p.setName(entityForm.getIdProperty());
  p.setValue(collectionItemId);
  properties.add(p);
  Property[] propArr=new Property[properties.size()];
  properties.toArray(propArr);
  ppr.getEntity().setProperties(propArr);
  return update(ppr);
}
