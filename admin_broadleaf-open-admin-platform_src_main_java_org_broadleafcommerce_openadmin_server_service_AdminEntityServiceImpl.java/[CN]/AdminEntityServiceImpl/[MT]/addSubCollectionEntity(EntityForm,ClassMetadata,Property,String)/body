{
  List<Property> properties=new ArrayList<Property>();
  for (  Entry<String,Field> entry : entityForm.getFields().entrySet()) {
    Property p=new Property();
    p.setName(entry.getKey());
    p.setValue(entry.getValue().getValue());
    properties.add(p);
  }
  FieldMetadata md=field.getMetadata();
  PersistencePackageRequest ppr=PersistencePackageRequest.fromMetadata(md).withEntity(new Entity());
  if (md instanceof BasicCollectionMetadata) {
    BasicCollectionMetadata fmd=(BasicCollectionMetadata)md;
    ppr.getEntity().setType(new String[]{fmd.getCollectionCeilingEntity()});
    Property fp=new Property();
    fp.setName(ppr.getForeignKeys()[0].getManyToField());
    fp.setValue(parentId);
    properties.add(fp);
  }
 else   if (md instanceof AdornedTargetCollectionMetadata) {
    ppr.getEntity().setType(new String[]{ppr.getAdornedList().getAdornedTargetEntityClassname()});
  }
 else   if (md instanceof MapMetadata) {
    ppr.getEntity().setType(new String[]{entityForm.getEntityType()});
  }
 else {
    throw new IllegalArgumentException(String.format("The specified field [%s] for class [%s] was" + " not a collection field.",field.getName(),mainMetadata.getCeilingType()));
  }
  ppr.setClassName(ppr.getEntity().getType()[0]);
  Property[] propArr=new Property[properties.size()];
  properties.toArray(propArr);
  ppr.getEntity().setProperties(propArr);
  return add(ppr);
}
