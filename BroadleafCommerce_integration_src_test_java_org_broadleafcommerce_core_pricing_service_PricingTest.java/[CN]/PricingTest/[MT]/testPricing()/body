{
  Order order=cartService.createNewCartForCustomer(createCustomer());
  customerService.saveCustomer(order.getCustomer());
  Address address=new AddressImpl();
  address.setAddressLine1("123 Test Rd");
  address.setCity("Dallas");
  address.setFirstName("Jeff");
  address.setLastName("Fischer");
  address.setPostalCode("75240");
  address.setPrimaryPhone("972-978-9067");
  State state=new StateImpl();
  state.setAbbreviation("ALL");
  state.setName("ALL");
  address.setState(state);
  Country country=new CountryImpl();
  country.setAbbreviation("US");
  country.setName("United States");
  state.setCountry(country);
  address.setCountry(country);
  FulfillmentGroup group=new FulfillmentGroupImpl();
  group.setAddress(address);
  group.setIsShippingPriceTaxable(true);
  List<FulfillmentGroup> groups=new ArrayList<FulfillmentGroup>();
  group.setMethod("standard");
  group.setService(ShippingServiceType.BANDED_SHIPPING.getType());
  group.setOrder(order);
  groups.add(group);
  order.setFulfillmentGroups(groups);
  Money total=new Money(8.5D);
  group.setShippingPrice(total);
{
    DiscreteOrderItem item=new DiscreteOrderItemImpl();
    Sku sku=new SkuImpl();
    sku.setName("Test Sku");
    sku.setRetailPrice(new Money(10D));
    sku.setDiscountable(true);
    sku=catalogService.saveSku(sku);
    item.setSku(sku);
    item.setQuantity(2);
    item.setOrder(order);
    item=(DiscreteOrderItem)orderItemService.saveOrderItem(item);
    order.addOrderItem(item);
    FulfillmentGroupItem fgItem=new FulfillmentGroupItemImpl();
    fgItem.setFulfillmentGroup(group);
    fgItem.setOrderItem(item);
    fgItem.setQuantity(2);
    group.addFulfillmentGroupItem(fgItem);
  }
{
    DiscreteOrderItem item=new DiscreteOrderItemImpl();
    Sku sku=new SkuImpl();
    sku.setName("Test Product 2");
    sku.setRetailPrice(new Money(20D));
    sku.setDiscountable(true);
    sku=catalogService.saveSku(sku);
    item.setSku(sku);
    item.setQuantity(1);
    item.setOrder(order);
    item=(DiscreteOrderItem)orderItemService.saveOrderItem(item);
    order.addOrderItem(item);
    FulfillmentGroupItem fgItem=new FulfillmentGroupItemImpl();
    fgItem.setFulfillmentGroup(group);
    fgItem.setOrderItem(item);
    fgItem.setQuantity(1);
    group.addFulfillmentGroupItem(fgItem);
  }
  order.addAddedOfferCode(createOfferCode("20 Percent Off Item Offer",OfferType.ORDER_ITEM,OfferDiscountType.PERCENT_OFF,20,null,"discreteOrderItem.sku.name==\"Test Sku\""));
  order.addAddedOfferCode(createOfferCode("3 Dollars Off Item Offer",OfferType.ORDER_ITEM,OfferDiscountType.AMOUNT_OFF,3,null,"discreteOrderItem.sku.name!=\"Test Sku\""));
  order.addAddedOfferCode(createOfferCode("1.20 Dollars Off Order Offer",OfferType.ORDER,OfferDiscountType.AMOUNT_OFF,1.20,null,null));
  order.setTotalShipping(new Money(0D));
  cartService.save(order,true);
  assert(order.getAdjustmentPrice().equals(new Money(31.80D)));
  assert(order.getTotal().greaterThan(order.getSubTotal()));
  assert(order.getTotalTax().equals(order.getSubTotal().multiply(0.05D).add(group.getShippingPrice().multiply(0.05D))));
  assert(order.getTotal().equals(order.getSubTotal().add(order.getTotalTax()).add(order.getTotalShipping()).subtract(order.getOrderAdjustmentsValue())));
}
