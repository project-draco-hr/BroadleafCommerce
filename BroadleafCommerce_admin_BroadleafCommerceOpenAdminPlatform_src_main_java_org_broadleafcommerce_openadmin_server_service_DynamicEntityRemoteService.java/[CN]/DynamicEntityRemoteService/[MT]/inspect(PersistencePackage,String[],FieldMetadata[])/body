{
  String ceilingEntityFullyQualifiedClassname=persistencePackage.getCeilingEntityFullyQualifiedClassname();
  try {
    Map<String,FieldMetadata> metadataOverrides=null;
    if (metadataOverrideKeys != null) {
      metadataOverrides=new HashMap<String,FieldMetadata>();
      for (int j=0; j < metadataOverrideKeys.length; j++) {
        metadataOverrides.put(metadataOverrideKeys[j],metadataOverrideValues[j]);
      }
    }
    if (metadataOverrides == null && this.metadataOverrides != null) {
      metadataOverrides=this.metadataOverrides;
    }
    PersistenceManager persistenceManager=null;
    try {
      SandBoxContext context=new SandBoxContext();
      context.setSandBoxName(persistencePackage.getSandBoxInfo().getSandBox());
      context.setSandBoxMode(SandBoxMode.IMMEDIATE_COMMIT);
      SandBoxContext.setSandBoxContext(context);
      persistenceManager=(PersistenceManager)applicationContext.getBean(persistenceManagerRef);
      persistenceManager.setTargetMode(TargetModeType.SANDBOX);
      return persistenceManager.inspect(persistencePackage,metadataOverrides);
    }
  finally {
      if (persistenceManager != null) {
        persistenceManager.close();
      }
      SandBoxContext.setSandBoxContext(null);
    }
  }
 catch (  ServiceException e) {
    throw e;
  }
catch (  Exception e) {
    LOG.error("Problem fetching results for " + ceilingEntityFullyQualifiedClassname,e);
    throw new ServiceException("Unable to fetch results for " + ceilingEntityFullyQualifiedClassname,e);
  }
}
