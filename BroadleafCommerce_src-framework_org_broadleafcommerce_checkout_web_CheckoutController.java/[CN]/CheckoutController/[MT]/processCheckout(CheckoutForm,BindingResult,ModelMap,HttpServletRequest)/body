{
  Address addr=new AddressImpl();
  addr.setAddressLine1("12700 Merit Drive Way");
  addr.setCity("Dallas");
  addr.setState(stateService.findStateByAbbreviation("TX"));
  addr.setPostalCode("75251");
  addr.setCountry(countryService.findCountryByAbbreviation("US"));
  Order order=retrieveCartOrder(request,model);
  order.setOrderNumber(new SimpleDateFormat("yyyyMMddHHmmssS").format(new Date()));
  FulfillmentGroup group=fulfillmentGroupService.createEmptyFulfillmentGroup();
  List<FulfillmentGroup> groups=new ArrayList<FulfillmentGroup>();
  group.setMethod("standard");
  group.setOrder(order);
  group.setAddress(addr);
  group.setShippingPrice(order.getTotalShipping());
  groups.add(group);
  order.setFulfillmentGroups(groups);
  for (  OrderItem item : order.getOrderItems()) {
    FulfillmentGroupItem fulfillmentGroupItem=new FulfillmentGroupItemImpl();
    fulfillmentGroupItem.setOrderItem(item);
    fulfillmentGroupItem.setFulfillmentGroup(group);
    group.getFulfillmentGroupItems().add(fulfillmentGroupItem);
  }
  PaymentInfo paymentInfo=paymentInfoService.create();
  paymentInfo.setAddress(addr);
  paymentInfo.setOrder(order);
  Map<PaymentInfo,Referenced> payments=new HashMap<PaymentInfo,Referenced>();
  order.setStatus(OrderStatus.SUBMITTED);
  order.setSubmitDate(new Date());
  try {
    checkoutService.performCheckout(order,payments);
  }
 catch (  CheckoutException e) {
    LOG.error("Cannot perform checkout",e);
  }
  return receiptView != null ? "redirect:" + receiptView : "redirect:/orders/viewOrderDetails?orderNumber=" + order.getOrderNumber();
}
