{
  Address addr=new AddressImpl();
  addr.setCity("Dallas");
  State state=new StateImpl();
  state.setAbbreviation("TX");
  state.setName("Texas");
  addr.setState(state);
  addr.setAddressLine1("5657 Amesbury Drive");
  addr.setPostalCode("75206");
  Order order=retrieveCartOrder(request,model);
  FulfillmentGroup group=fulfillmentGroupService.createEmptyFulfillmentGroup();
  List<FulfillmentGroup> groups=new ArrayList<FulfillmentGroup>();
  group.setMethod("standard");
  group.setOrder(order);
  group.setAddress(addr);
  group.setShippingPrice(order.getTotalShipping());
  groups.add(group);
  order.setFulfillmentGroups(groups);
  for (  OrderItem item : order.getOrderItems()) {
    FulfillmentGroupItem fulfillmentGroupItem=new FulfillmentGroupItemImpl();
    fulfillmentGroupItem.setOrderItem(item);
    group.getFulfillmentGroupItems().add(fulfillmentGroupItem);
  }
  PaymentInfo paymentInfo=paymentInfoService.create();
  paymentInfo.setAddress(addr);
  paymentInfo.setOrder(order);
  List<PaymentInfo> paymentInfos=new ArrayList<PaymentInfo>();
  paymentInfos.add(paymentInfo);
  order.setPaymentInfos(paymentInfos);
  order.setStatus(OrderStatus.SUBMITTED.toString());
  order.setSubmitDate(new Date());
  try {
    orderService.save(order);
  }
 catch (  PricingException e) {
    e.printStackTrace();
  }
  return receiptView != null ? "redirect:" + receiptView : "redirect:/orders/viewOrderDetails?orderNumber" + order.getOrderNumber();
}
