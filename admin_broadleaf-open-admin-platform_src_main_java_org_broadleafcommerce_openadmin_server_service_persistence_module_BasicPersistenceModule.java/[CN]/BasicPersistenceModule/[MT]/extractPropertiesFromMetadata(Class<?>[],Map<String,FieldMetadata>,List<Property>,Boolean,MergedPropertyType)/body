{
  for (  Map.Entry<String,FieldMetadata> entry : mergedProperties.entrySet()) {
    String property=entry.getKey();
    Property prop=new Property();
    FieldMetadata metadata=mergedProperties.get(property);
    prop.setName(property);
    Comparator<Property> comparator=new Comparator<Property>(){
      @Override public int compare(      Property o1,      Property o2){
        return o1.getName().compareTo(o2.getName());
      }
    }
;
    Collections.sort(properties,comparator);
    int pos=Collections.binarySearch(properties,prop,comparator);
    if (pos >= 0 && MergedPropertyType.MAPSTRUCTUREKEY != type && MergedPropertyType.MAPSTRUCTUREVALUE != type) {
      logWarn: {
        if ((metadata instanceof BasicFieldMetadata) && SupportedFieldType.ID.equals(((BasicFieldMetadata)metadata).getFieldType())) {
          break logWarn;
        }
      }
      continue;
    }
    properties.add(prop);
    prop.setMetadata(metadata);
    if (isHiddenOverride && prop.getMetadata() instanceof BasicFieldMetadata) {
      ((BasicFieldMetadata)prop.getMetadata()).setVisibility(VisibilityEnum.HIDDEN_ALL);
    }
  }
}
