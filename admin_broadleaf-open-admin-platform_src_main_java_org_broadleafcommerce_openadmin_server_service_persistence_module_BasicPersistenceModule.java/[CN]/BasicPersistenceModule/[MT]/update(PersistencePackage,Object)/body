{
  try {
    Entity entity=persistencePackage.getEntity();
    PersistencePerspective persistencePerspective=persistencePackage.getPersistencePerspective();
    Class<?>[] entities=persistenceManager.getPolymorphicEntities(persistencePackage.getCeilingEntityFullyQualifiedClassname());
    Map<String,FieldMetadata> mergedProperties=persistenceManager.getDynamicEntityDao().getMergedProperties(persistencePackage.getCeilingEntityFullyQualifiedClassname(),entities,(ForeignKey)persistencePerspective.getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.FOREIGNKEY),persistencePerspective.getAdditionalNonPersistentProperties(),persistencePerspective.getAdditionalForeignKeys(),MergedPropertyType.PRIMARY,persistencePerspective.getPopulateToOneFields(),persistencePerspective.getIncludeFields(),persistencePerspective.getExcludeFields(),persistencePerspective.getConfigurationKey(),"");
    if (primaryKey == null) {
      primaryKey=getPrimaryKey(entity,mergedProperties);
    }
    Serializable instance=persistenceManager.getDynamicEntityDao().retrieve(Class.forName(entity.getType()[0]),primaryKey);
    instance=createPopulatedInstance(instance,entity,mergedProperties,false);
    if (!entity.isValidationFailure()) {
      instance=persistenceManager.getDynamicEntityDao().merge(instance);
      List<Serializable> entityList=new ArrayList<Serializable>(1);
      entityList.add(instance);
      return getRecords(mergedProperties,entityList,null,null)[0];
    }
 else {
      return entity;
    }
  }
 catch (  Exception e) {
    LOG.error("Problem editing entity",e);
    throw new ServiceException("Problem updating entity : " + e.getMessage(),e);
  }
}
