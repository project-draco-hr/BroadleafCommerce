{
  BroadleafRequestContext brc=new BroadleafRequestContext();
  brc.getAdditionalProperties().putAll(entityExtensionManagers);
  Site site=siteResolver.resolveSite(request);
  brc.setSite(site);
  brc.setWebRequest(request);
  if (site == null) {
    brc.setIgnoreSite(true);
  }
  brc.setAdmin(false);
  if (siteStrictValidateProductionChanges) {
    brc.setValidateProductionChangesState(ValidateProductionChangesState.SITE);
  }
 else {
    brc.setValidateProductionChangesState(ValidateProductionChangesState.UNDEFINED);
  }
  BroadleafRequestContext.setBroadleafRequestContext(brc);
  Locale locale=localeResolver.resolveLocale(request);
  brc.setLocale(locale);
  TimeZone timeZone=broadleafTimeZoneResolver.resolveTimeZone(request);
  BroadleafCurrency currency=currencyResolver.resolveCurrency(request);
  RequestDTO requestDTO=(RequestDTO)request.getAttribute(REQUEST_DTO_PARAM_NAME,WebRequest.SCOPE_REQUEST);
  if (requestDTO == null) {
    requestDTO=new RequestDTOImpl(request);
  }
  SandBox currentSandbox=sandboxResolver.resolveSandBox(request,site);
  Boolean reprocessRequest=(Boolean)request.getAttribute(BroadleafRequestProcessor.REPROCESS_PARAM_NAME,WebRequest.SCOPE_REQUEST);
  if (reprocessRequest != null && reprocessRequest) {
    LOG.debug("Reprocessing request");
    if (request instanceof ServletWebRequest) {
      HttpServletRequest hsr=((ServletWebRequest)request).getRequest();
      clearBroadleafSessionAttrs(request);
      StringBuffer url=hsr.getRequestURL();
      if (hsr.getQueryString() != null) {
        url.append('?').append(hsr.getQueryString());
      }
      try {
        ((ServletWebRequest)request).getResponse().sendRedirect(url.toString());
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
      throw new HaltFilterChainException("Reprocess required, redirecting user");
    }
  }
  if (currentSandbox != null) {
    SandBoxContext previewSandBoxContext=new SandBoxContext();
    previewSandBoxContext.setSandBoxId(currentSandbox.getId());
    previewSandBoxContext.setPreviewMode(true);
    SandBoxContext.setSandBoxContext(previewSandBoxContext);
  }
  brc.setBroadleafCurrency(currency);
  brc.setSandBox(currentSandbox);
  brc.setDeployBehavior(deployBehaviorUtil.isProductionSandBoxMode() ? DeployBehavior.CLONE_PARENT : DeployBehavior.OVERWRITE_PARENT);
  Theme theme=themeResolver.resolveTheme(request);
  brc.setTheme(theme);
  brc.setMessageSource(messageSource);
  brc.setTimeZone(timeZone);
  brc.setRequestDTO(requestDTO);
  Map<String,Object> ruleMap=(Map<String,Object>)request.getAttribute("blRuleMap",WebRequest.SCOPE_REQUEST);
  if (ruleMap == null) {
    LOG.trace("Creating ruleMap and adding in Locale.");
    ruleMap=new HashMap<String,Object>();
    request.setAttribute("blRuleMap",ruleMap,WebRequest.SCOPE_REQUEST);
  }
 else {
    LOG.trace("Using pre-existing ruleMap - added by non standard BLC process.");
  }
  ruleMap.put("locale",locale);
  String adminUserId=request.getParameter(BroadleafRequestFilter.ADMIN_USER_ID_PARAM_NAME);
  if (StringUtils.isNotBlank(adminUserId)) {
    brc.setAdminUserId(Long.parseLong(adminUserId));
  }
}
