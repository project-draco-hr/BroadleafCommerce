{
  DataSource orderDataSource=additionalDataSources[0];
  final DataSource orderItemDataSource=additionalDataSources[1];
  DataSource fulfillmentGroupDataSource=additionalDataSources[2];
  DataSource customerDataSource=additionalDataSources[3];
  VLayout leftVerticalLayout=new VLayout(10);
  leftVerticalLayout.setID("offerLeftVerticalLayout");
  leftVerticalLayout.setHeight100();
  leftVerticalLayout.setWidth("30%");
  leftVerticalLayout.setShowResizeBar(true);
  listDisplay=new DynamicEntityListView(BLCMain.getMessageManager().getString("promotionsListTitle"),entityDataSource,false);
  listDisplay.getGrid().setCanEdit(true);
  listDisplay.getGrid().setEditEvent(ListGridEditEvent.DOUBLECLICK);
  listDisplay.getGrid().setEditByCell(true);
  listDisplay.getGrid().setAutoSaveEdits(true);
  listDisplay.getGrid().setSaveByCell(true);
  listDisplay.getGrid().setAlternateBodyStyleName("");
  leftVerticalLayout.addMember(listDisplay);
  VLayout rightVerticalLayout=new VLayout();
  rightVerticalLayout.setID("offerRightVerticalLayout");
  rightVerticalLayout.setHeight100();
  rightVerticalLayout.setWidth("70%");
  dynamicFormDisplay=new DynamicFormView(BLCMain.getMessageManager().getString("promotionDetailsTitle"),entityDataSource);
  dynamicFormDisplay.getToolbar().addFill();
  advancedButton=new ToolStripButton(BLCMain.getMessageManager().getString("advancedCriteriaButtonTitle"));
  advancedButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/settings.png");
  advancedButton.setActionType(SelectionType.CHECKBOX);
  advancedButton.setDisabled(true);
  dynamicFormDisplay.getToolbar().addMember(advancedButton);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).setLayoutLeftMargin(10);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).setLayoutTopMargin(10);
  VLayout restrictLayout=new VLayout();
  restrictLayout.setID("offerRestrictLayout");
  restrictLayout.setLayoutLeftMargin(LAYOUT_MARGIN);
  Label restrictLabel=new Label(BLCMain.getMessageManager().getString("restrictOnlyPromotionLabel"));
  restrictLabel.setWrap(false);
  restrictLabel.setHeight(LABEL_HEIGHT);
  restrictLabel.setStyleName("blcFormBg");
  restrictLabel.setStyleName("label-bold");
  restrictLayout.addMember(restrictLabel);
  restrictForm=new DynamicForm();
  restrictRuleRadio=new RadioGroupItem();
  restrictRuleRadio.setWidth(RADIO_GROUP_WIDTH);
  restrictRuleRadio.setShowTitle(false);
  restrictRuleRadio.setWrap(false);
  restrictRuleRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> restrictMap=new LinkedHashMap<String,String>();
  restrictMap.put("YES",BLCMain.getMessageManager().getString("yesRadioChoice"));
  restrictMap.put("NO",BLCMain.getMessageManager().getString("noRadioChoice"));
  restrictRuleRadio.setValueMap(restrictMap);
  restrictForm.setFields(restrictRuleRadio);
  restrictLayout.addMember(restrictForm);
  restrictionSectionView=new SectionView(BLCMain.getMessageManager().getString("advancedRestrictionsViewTitle"));
  restrictionSectionView.setVisible(false);
  restrictionSectionView.setWidth("98%");
  restrictionSectionView.getContentLayout().addMember(restrictLayout);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(restrictionSectionView);
  customerLayout=new VLayout();
  customerLayout.setVisible(false);
  customerLayout.setID("offerCustomerLayout");
  customerLayout.setLayoutLeftMargin(LAYOUT_MARGIN);
  HStack customerObtainHStack=new HStack(10);
  customerObtainHStack.setID("offerCustomerObtainHStack");
  customerObtainHStack.setWidth100();
  customerObtainHStack.setHeight(LABEL_HEIGHT);
  Label customerObtainLabel=new Label(BLCMain.getMessageManager().getString("customerObtainLabel"));
  customerObtainLabel.setWrap(false);
  customerObtainLabel.setHeight(LABEL_HEIGHT);
  customerObtainLabel.setStyleName("blcFormBg");
  customerObtainLabel.setStyleName("label-bold");
  customerObtainHStack.addMember(customerObtainLabel);
  VStack helpCustomerObtainVStack=new VStack();
  helpCustomerObtainVStack.setID("offerHelpCustomerObtainVStack");
  helpCustomerObtainVStack.setAlign(VerticalAlignment.CENTER);
  helpButtonType=new ImgButton();
  helpButtonType.setSrc(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/help.png");
  helpButtonType.setWidth(HELP_BUTTON_WIDTH);
  helpButtonType.setHeight(HELP_BUTTON_HEIGHT);
  helpCustomerObtainVStack.addMember(helpButtonType);
  customerObtainHStack.addMember(helpCustomerObtainVStack);
  customerLayout.addMember(customerObtainHStack);
  customerObtainForm=new DynamicForm();
  customerObtainForm.setNumCols(4);
  deliveryTypeRadio=new RadioGroupItem();
  deliveryTypeRadio.setColSpan(2);
  deliveryTypeRadio.setWidth(RADIO_GROUP_WIDTH);
  deliveryTypeRadio.setShowTitle(false);
  deliveryTypeRadio.setWrap(false);
  deliveryTypeRadio.setDisabled(true);
  deliveryTypeRadio.setDefaultValue("AUTOMATIC");
  LinkedHashMap<String,String> valueMap=new LinkedHashMap<String,String>();
  valueMap.put("AUTOMATIC",BLCMain.getMessageManager().getString("deliveryTypeEnumAutomatic"));
  valueMap.put("CODE",BLCMain.getMessageManager().getString("deliveryTypeEnumCode"));
  valueMap.put("MANUAL",BLCMain.getMessageManager().getString("deliveryTypeEnumManual"));
  deliveryTypeRadio.setValueMap(valueMap);
  codeField=new TextItem();
  codeField.setTitle(BLCMain.getMessageManager().getString("offerCodeFieldTitle"));
  codeField.setWrapTitle(false);
  codeField.setDisabled(true);
  customerObtainForm.setFields(deliveryTypeRadio,codeField);
  customerLayout.addMember(customerObtainForm);
  Label whichCustomerLabel=new Label(BLCMain.getMessageManager().getString("whichCustomerLabel"));
  whichCustomerLabel.setWrap(false);
  whichCustomerLabel.setHeight(LABEL_HEIGHT);
  whichCustomerLabel.setStyleName("blcFormBg");
  whichCustomerLabel.setStyleName("label-bold");
  customerLayout.addMember(whichCustomerLabel);
  whichCustomerForm=new DynamicForm();
  customerRuleRadio=new RadioGroupItem();
  customerRuleRadio.setWidth(RADIO_GROUP_WIDTH);
  customerRuleRadio.setShowTitle(false);
  customerRuleRadio.setWrap(false);
  customerRuleRadio.setDisabled(true);
  customerRuleRadio.setDefaultValue("ALL");
  LinkedHashMap<String,String> valueMap3=new LinkedHashMap<String,String>();
  valueMap3.put("ALL",BLCMain.getMessageManager().getString("allCustomerRadioChoice"));
  valueMap3.put("CUSTOMER_RULE",BLCMain.getMessageManager().getString("buildCustomerRadioChoice"));
  customerRuleRadio.setValueMap(valueMap3);
  whichCustomerForm.setFields(customerRuleRadio);
  customerLayout.addMember(whichCustomerForm);
  rawCustomerForm=new DynamicForm();
  rawCustomerForm.setVisible(false);
  rawCustomerTextArea=new TextAreaItem();
  rawCustomerTextArea.setHeight(70);
  rawCustomerTextArea.setWidth("600");
  rawCustomerTextArea.setShowTitle(false);
  rawCustomerForm.setFields(rawCustomerTextArea);
  rawCustomerTextArea.setAttribute("dirty",false);
  customerLayout.addMember(rawCustomerForm);
  customerFilterBuilder=new BLCFilterBuilder();
  customerFilterBuilder.setDataSource(customerDataSource);
  customerFilterBuilder.setFieldDataSource(new FieldDataSourceWrapper(customerDataSource));
  customerFilterBuilder.setVisible(false);
  customerFilterBuilder.setLayoutBottomMargin(LAYOUT_MARGIN);
  customerFilterBuilder.setAllowEmpty(true);
  customerFilterBuilder.setValidateOnChange(false);
  customerLayout.addMember(customerFilterBuilder);
  customerLayout.setLayoutBottomMargin(LAYOUT_MARGIN);
  customerSection=new SectionView(BLCMain.getMessageManager().getString("customerSectionViewTitle"));
  customerSection.setVisible(false);
  customerSection.setID("offerSectionStack");
  customerSection.setWidth("98%");
  customerSection.getContentLayout().addMember(customerLayout);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(customerSection);
  orderSectionLayout=new VLayout();
  orderSectionLayout.setVisible(false);
  orderSectionLayout.setID("offerOrderSectionLayout");
  orderSectionLayout.setLayoutLeftMargin(LAYOUT_MARGIN);
  Label orderLabel=new Label(BLCMain.getMessageManager().getString("orderSectionLabel"));
  orderLabel.setWrap(false);
  orderLabel.setHeight(LABEL_HEIGHT);
  orderLabel.setStyleName("blcFormBg");
  orderLabel.setStyleName("label-bold");
  orderSectionLayout.addMember(orderLabel);
  orderForm=new DynamicForm();
  orderRuleRadio=new RadioGroupItem();
  orderRuleRadio.setWidth(RADIO_GROUP_WIDTH);
  orderRuleRadio.setShowTitle(false);
  orderRuleRadio.setWrap(false);
  orderRuleRadio.setDisabled(true);
  orderRuleRadio.setDefaultValue("NONE");
  LinkedHashMap<String,String> orderMap=new LinkedHashMap<String,String>();
  orderMap.put("NONE",BLCMain.getMessageManager().getString("noneOrderRadioChoice"));
  orderMap.put("ORDER_RULE",BLCMain.getMessageManager().getString("buildOrderRadioChoice"));
  orderRuleRadio.setValueMap(orderMap);
  orderForm.setFields(orderRuleRadio);
  orderSectionLayout.addMember(orderForm);
  rawOrderForm=new DynamicForm();
  rawOrderForm.setVisible(false);
  rawOrderTextArea=new TextAreaItem();
  rawOrderTextArea.setHeight(70);
  rawOrderTextArea.setWidth("600");
  rawOrderTextArea.setShowTitle(false);
  rawOrderTextArea.setAttribute("dirty",false);
  rawOrderForm.setFields(rawOrderTextArea);
  orderSectionLayout.addMember(rawOrderForm);
  orderFilterBuilder=new BLCFilterBuilder();
  orderFilterBuilder.setDataSource(orderDataSource);
  orderFilterBuilder.setFieldDataSource(new FieldDataSourceWrapper(orderDataSource));
  orderFilterBuilder.setVisible(false);
  orderFilterBuilder.setLayoutBottomMargin(LAYOUT_MARGIN);
  orderFilterBuilder.setAllowEmpty(true);
  orderFilterBuilder.setValidateOnChange(false);
  orderSectionLayout.addMember(orderFilterBuilder);
  orderCombineLabel=new Label(BLCMain.getMessageManager().getString("orderCombineLabel"));
  orderCombineLabel.setVisible(false);
  orderCombineLabel.setWrap(false);
  orderCombineLabel.setHeight(LABEL_HEIGHT);
  orderCombineLabel.setStyleName("blcFormBg");
  orderCombineLabel.setStyleName("label-bold");
  orderSectionLayout.addMember(orderCombineLabel);
  orderCombineForm=new DynamicForm();
  orderCombineForm.setVisible(false);
  orderCombineRuleRadio=new RadioGroupItem();
  orderCombineRuleRadio.setWidth(RADIO_GROUP_WIDTH);
  orderCombineRuleRadio.setShowTitle(false);
  orderCombineRuleRadio.setWrap(false);
  orderCombineRuleRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> orderCombineMap=new LinkedHashMap<String,String>();
  orderCombineMap.put("YES",BLCMain.getMessageManager().getString("yesRadioChoice"));
  orderCombineMap.put("NO",BLCMain.getMessageManager().getString("noRadioChoice"));
  orderCombineRuleRadio.setValueMap(orderCombineMap);
  orderCombineForm.setFields(orderCombineRuleRadio);
  orderSectionLayout.addMember(orderCombineForm);
  orderSection=new SectionView(BLCMain.getMessageManager().getString("orderQualificationSectionViewTitle"));
  orderSection.setVisible(false);
  orderSection.setID("offerSectionStack2");
  orderSection.setWidth("98%");
  orderSection.getContentLayout().addMember(orderSectionLayout);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(orderSection);
  VStack itemSectionLayout=new VStack();
  itemSectionLayout.setID("offerItemSectionLayout");
  itemSectionLayout.setLayoutLeftMargin(LAYOUT_MARGIN);
  orderItemCombineLabel=new Label(BLCMain.getMessageManager().getString("orderItemCombineLabel"));
  orderItemCombineLabel.setVisible(false);
  orderItemCombineLabel.setWrap(false);
  orderItemCombineLabel.setHeight(LABEL_HEIGHT);
  orderItemCombineLabel.setStyleName("blcFormBg");
  orderItemCombineLabel.setStyleName("label-bold");
  itemSectionLayout.addMember(orderItemCombineLabel);
  orderItemCombineForm=new DynamicForm();
  orderItemCombineForm.setVisible(false);
  orderItemCombineRuleRadio=new RadioGroupItem();
  orderItemCombineRuleRadio.setWidth(RADIO_GROUP_WIDTH);
  orderItemCombineRuleRadio.setShowTitle(false);
  orderItemCombineRuleRadio.setWrap(false);
  orderItemCombineRuleRadio.setDefaultValue("YES");
  LinkedHashMap<String,String> orderItemCombineMap=new LinkedHashMap<String,String>();
  orderItemCombineMap.put("YES",BLCMain.getMessageManager().getString("yesRadioChoice"));
  orderItemCombineMap.put("NO",BLCMain.getMessageManager().getString("noRadioChoice"));
  orderItemCombineRuleRadio.setValueMap(orderItemCombineMap);
  orderItemCombineForm.setFields(orderItemCombineRuleRadio);
  itemSectionLayout.addMember(orderItemCombineForm);
  bogoQuestionLayout=new VLayout();
  bogoQuestionLayout.setVisible(false);
  HStack hStackBogo=new HStack(10);
  hStackBogo.setID("offerHStackBogo");
  hStackBogo.setWidth100();
  hStackBogo.setHeight(LABEL_HEIGHT);
  bogoQuestionLabel=new Label(BLCMain.getMessageManager().getString("bogoQuestionLabel"));
  bogoQuestionLabel.setWrap(false);
  bogoQuestionLabel.setHeight(LABEL_HEIGHT);
  bogoQuestionLabel.setStyleName("blcFormBg");
  bogoQuestionLabel.setStyleName("label-bold");
  hStackBogo.addMember(bogoQuestionLabel);
  VStack helpButtonBogoStack=new VStack();
  helpButtonBogoStack.setID("offerHelpButtonBogoStack");
  helpButtonBogoStack.setAlign(VerticalAlignment.CENTER);
  helpButtonBogo=new ImgButton();
  helpButtonBogo.setSrc(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/headerIcons/help.png");
  helpButtonBogo.setWidth(16);
  helpButtonBogo.setHeight(16);
  helpButtonBogoStack.addMember(helpButtonBogo);
  hStackBogo.addMember(helpButtonBogoStack);
  bogoQuestionLayout.addMember(hStackBogo);
  stepBogoForm=new DynamicForm();
  bogoRadio=new RadioGroupItem();
  bogoRadio.setWidth(RADIO_GROUP_WIDTH);
  bogoRadio.setShowTitle(false);
  bogoRadio.setWrap(false);
  bogoRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMapBogo=new LinkedHashMap<String,String>();
  valueMapBogo.put("YES",BLCMain.getMessageManager().getString("yesRadioChoice"));
  valueMapBogo.put("NO",BLCMain.getMessageManager().getString("noRadioChoice"));
  bogoRadio.setValueMap(valueMapBogo);
  stepBogoForm.setFields(bogoRadio);
  bogoQuestionLayout.addMember(stepBogoForm);
  itemSectionLayout.addMember(bogoQuestionLayout);
  requiredItemsLayout=new VLayout();
  requiredItemsLayout.setVisible(false);
  requiredItemsLabel=new Label(BLCMain.getMessageManager().getString("requiredItemsLabel"));
  requiredItemsLabel.setWrap(false);
  requiredItemsLabel.setHeight(LABEL_HEIGHT);
  requiredItemsLabel.setStyleName("blcFormBg");
  requiredItemsLabel.setStyleName("label-bold");
  requiredItemsLayout.addMember(requiredItemsLabel);
  orderItemLayout=new VLayout();
  orderItemLayout.setVisible(false);
  stepItemForm=new DynamicForm();
  itemRuleRadio=new RadioGroupItem();
  itemRuleRadio.setWidth(RADIO_GROUP_WIDTH);
  itemRuleRadio.setShowTitle(false);
  itemRuleRadio.setWrap(false);
  itemRuleRadio.setDefaultValue("NONE");
  LinkedHashMap<String,String> valueMapItem=new LinkedHashMap<String,String>();
  valueMapItem.put("NONE",BLCMain.getMessageManager().getString("noneItemRadioChoice"));
  valueMapItem.put("ITEM_RULE",BLCMain.getMessageManager().getString("buildItemRadioChoice"));
  itemRuleRadio.setValueMap(valueMapItem);
  stepItemForm.setFields(itemRuleRadio);
  orderItemLayout.addMember(stepItemForm);
  requiredItemsLayout.addMember(orderItemLayout);
  itemBuilderViews.add(new ItemBuilderView(orderItemDataSource,true));
  newItemBuilderLayout=new VLayout();
  newItemBuilderLayout.setVisible(false);
  HLayout buttonLayout=new HLayout();
  buttonLayout.setID("offerButtonLayout");
  buttonLayout.setWidth100();
  buttonLayout.setAlign(Alignment.LEFT);
  buttonLayout.setHeight(LABEL_HEIGHT);
  buttonLayout.setLayoutTopMargin(LAYOUT_MARGIN);
  addItemButton=new Button();
  addItemButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/actions/add.png");
  addItemButton.setTitle(BLCMain.getMessageManager().getString("newItemRuleButtonTitle"));
  addItemButton.setWidth(ADD_ITEM_BUTTON_WIDTH);
  addItemButton.setWrap(false);
  buttonLayout.addMember(addItemButton);
  buttonLayout.setLayoutBottomMargin(LAYOUT_MARGIN);
  newItemBuilderLayout.addMember(buttonLayout);
  itemBuilderContainerLayout=new VLayout();
  newItemBuilderLayout.addMember(itemBuilderContainerLayout);
  for (  ItemBuilderDisplay widget : itemBuilderViews) {
    itemBuilderContainerLayout.addMember((ItemBuilderView)widget);
  }
  requiredItemsLayout.addMember(newItemBuilderLayout);
  advancedItemCriteria=new VLayout();
  advancedItemCriteria.setVisible(false);
  newItemBuilderLayout.addMember(advancedItemCriteria);
  Label receiveFromAnotherPromoLabel=new Label(BLCMain.getMessageManager().getString("receiveFromAnotherPromoLabel"));
  receiveFromAnotherPromoLabel.setWrap(false);
  receiveFromAnotherPromoLabel.setHeight(LABEL_HEIGHT);
  receiveFromAnotherPromoLabel.setStyleName("blcPromoAdditionalQuestion");
  advancedItemCriteria.addMember(receiveFromAnotherPromoLabel);
  receiveFromAnotherPromoForm=new DynamicForm();
  receiveFromAnotherPromoRadio=new RadioGroupItem();
  receiveFromAnotherPromoRadio.setWidth(RADIO_GROUP_WIDTH);
  receiveFromAnotherPromoRadio.setShowTitle(false);
  receiveFromAnotherPromoRadio.setWrap(false);
  receiveFromAnotherPromoRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMap4=new LinkedHashMap<String,String>();
  valueMap4.put("YES",BLCMain.getMessageManager().getString("yesRadioChoice"));
  valueMap4.put("NO",BLCMain.getMessageManager().getString("noRadioChoice"));
  receiveFromAnotherPromoRadio.setValueMap(valueMap4);
  receiveFromAnotherPromoForm.setFields(receiveFromAnotherPromoRadio);
  advancedItemCriteria.addMember(receiveFromAnotherPromoForm);
  Label qualifiyForAnotherPromoLabel=new Label(BLCMain.getMessageManager().getString("qualifiyForAnotherPromoLabel"));
  qualifiyForAnotherPromoLabel.setWrap(false);
  qualifiyForAnotherPromoLabel.setHeight(LABEL_HEIGHT);
  qualifiyForAnotherPromoLabel.setStyleName("blcPromoAdditionalQuestion");
  advancedItemCriteria.addMember(qualifiyForAnotherPromoLabel);
  qualifyForAnotherPromoForm=new DynamicForm();
  qualifyForAnotherPromoRadio=new RadioGroupItem();
  qualifyForAnotherPromoRadio.setWidth(RADIO_GROUP_WIDTH);
  qualifyForAnotherPromoRadio.setShowTitle(false);
  qualifyForAnotherPromoRadio.setWrap(false);
  qualifyForAnotherPromoRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMap5=new LinkedHashMap<String,String>();
  valueMap5.put("YES",BLCMain.getMessageManager().getString("yesRadioChoice"));
  valueMap5.put("NO",BLCMain.getMessageManager().getString("noRadioChoice"));
  qualifyForAnotherPromoRadio.setValueMap(valueMap5);
  qualifyForAnotherPromoForm.setFields(qualifyForAnotherPromoRadio);
  advancedItemCriteria.addMember(qualifyForAnotherPromoForm);
  qualifyingItemSubTotalForm=new DynamicForm();
  qualifyingItemSubTotalForm.setNumCols(2);
  qualifyingItemSubTotal=new FloatItem();
  qualifyingItemSubTotal.setAttribute("type","localMoneyDecimal");
  qualifyingItemSubTotal.setTitle(BLCMain.getMessageManager().getString("qualifiyngItemSubTotal"));
  qualifyingItemSubTotal.setWrapTitle(false);
  qualifyingItemSubTotal.setDisabled(false);
  FloatRangeValidator floatRangeValidator=new FloatRangeValidator();
  floatRangeValidator.setMin(0.0f);
  qualifyingItemSubTotal.setValidators(floatRangeValidator);
  qualifyingItemSubTotal.setCellStyle("label-bold");
  qualifyingItemSubTotalForm.setFields(qualifyingItemSubTotal);
  requiredItemsLayout.addMember(qualifyingItemSubTotalForm);
  itemSectionLayout.addMember(requiredItemsLayout);
  itemSectionLayout.setLayoutBottomMargin(LAYOUT_MARGIN);
  itemQualificationSectionView=new SectionView(BLCMain.getMessageManager().getString("itemQualificationSectionTitle"));
  itemQualificationSectionView.setWidth("98%");
  itemQualificationSectionView.getContentLayout().addMember(itemSectionLayout);
  itemQualificationSectionView.setVisible(false);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(itemQualificationSectionView);
  targetItemsLayout=new VLayout();
  targetItemsLayout.setLayoutLeftMargin(LAYOUT_MARGIN);
  targetItemsLabel=new Label(BLCMain.getMessageManager().getString("targetItemsLabel"));
  targetItemsLabel.setWrap(false);
  targetItemsLabel.setHeight(LABEL_HEIGHT);
  targetItemsLabel.setStyleName("blcFormBg");
  targetItemsLabel.setStyleName("label-bold");
  targetItemsLayout.addMember(targetItemsLabel);
  targetItemBuilderViews.add(new ItemBuilderView(orderItemDataSource,true));
  newTargetItemBuilderLayout=new VLayout();
  newTargetItemBuilderLayout.setVisible(false);
  HLayout targetButtonLayout=new HLayout();
  targetButtonLayout.setID("targetOfferButtonLayout");
  targetButtonLayout.setWidth100();
  targetButtonLayout.setAlign(Alignment.LEFT);
  targetButtonLayout.setHeight(LABEL_HEIGHT);
  targetButtonLayout.setLayoutTopMargin(LAYOUT_MARGIN);
  targetAddItemButton=new Button();
  targetAddItemButton.setIcon(GWT.getModuleBaseURL() + "sc/skins/Enterprise/images/actions/add.png");
  targetAddItemButton.setTitle(BLCMain.getMessageManager().getString("newItemRuleButtonTitle"));
  targetAddItemButton.setWidth(ADD_ITEM_BUTTON_WIDTH);
  targetAddItemButton.setWrap(false);
  targetButtonLayout.addMember(targetAddItemButton);
  targetButtonLayout.setLayoutBottomMargin(LAYOUT_MARGIN);
  newTargetItemBuilderLayout.addMember(targetButtonLayout);
  targetItemBuilderContainerLayout=new VLayout();
  newTargetItemBuilderLayout.addMember(targetItemBuilderContainerLayout);
  for (  ItemBuilderDisplay widget : targetItemBuilderViews) {
    targetItemBuilderContainerLayout.addMember((ItemBuilderView)widget);
  }
  targetItemsLayout.addMember(newTargetItemBuilderLayout);
  targetItemsLayout.setLayoutBottomMargin(LAYOUT_MARGIN);
  advancedItemCriteriaTarget=new VLayout();
  advancedItemCriteriaTarget.setVisible(false);
  targetItemsLayout.addMember(advancedItemCriteriaTarget);
  Label receiveFromAnotherPromoTargetLabel=new Label(BLCMain.getMessageManager().getString("receiveFromAnotherPromoTargetLabel"));
  receiveFromAnotherPromoTargetLabel.setWrap(false);
  receiveFromAnotherPromoTargetLabel.setHeight(LABEL_HEIGHT);
  receiveFromAnotherPromoTargetLabel.setStyleName("blcPromoAdditionalQuestion");
  advancedItemCriteriaTarget.addMember(receiveFromAnotherPromoTargetLabel);
  receiveFromAnotherPromoTargetForm=new DynamicForm();
  receiveFromAnotherPromoTargetRadio=new RadioGroupItem();
  receiveFromAnotherPromoRadio.setWidth(RADIO_GROUP_WIDTH);
  receiveFromAnotherPromoTargetRadio.setShowTitle(false);
  receiveFromAnotherPromoTargetRadio.setWrap(false);
  receiveFromAnotherPromoTargetRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMap6=new LinkedHashMap<String,String>();
  valueMap6.put("YES",BLCMain.getMessageManager().getString("yesRadioChoice"));
  valueMap6.put("NO",BLCMain.getMessageManager().getString("noRadioChoice"));
  receiveFromAnotherPromoTargetRadio.setValueMap(valueMap6);
  receiveFromAnotherPromoTargetForm.setFields(receiveFromAnotherPromoTargetRadio);
  advancedItemCriteriaTarget.addMember(receiveFromAnotherPromoTargetForm);
  Label qualifiyForAnotherPromoTargetLabel=new Label(BLCMain.getMessageManager().getString("qualifiyForAnotherPromoTargetLabel"));
  qualifiyForAnotherPromoTargetLabel.setWrap(false);
  qualifiyForAnotherPromoTargetLabel.setHeight(LABEL_HEIGHT);
  qualifiyForAnotherPromoTargetLabel.setStyleName("blcPromoAdditionalQuestion");
  advancedItemCriteriaTarget.addMember(qualifiyForAnotherPromoTargetLabel);
  qualifyForAnotherPromoTargetForm=new DynamicForm();
  qualifyForAnotherPromoTargetRadio=new RadioGroupItem();
  qualifyForAnotherPromoTargetRadio.setWidth(RADIO_GROUP_WIDTH);
  qualifyForAnotherPromoTargetRadio.setShowTitle(false);
  qualifyForAnotherPromoTargetRadio.setWrap(false);
  qualifyForAnotherPromoTargetRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMap7=new LinkedHashMap<String,String>();
  valueMap7.put("YES",BLCMain.getMessageManager().getString("yesRadioChoice"));
  valueMap7.put("NO",BLCMain.getMessageManager().getString("noRadioChoice"));
  qualifyForAnotherPromoTargetRadio.setValueMap(valueMap7);
  qualifyForAnotherPromoTargetForm.setFields(qualifyForAnotherPromoTargetRadio);
  advancedItemCriteriaTarget.addMember(qualifyForAnotherPromoTargetForm);
  itemTargetSectionView=new SectionView(BLCMain.getMessageManager().getString("itemTargetSectionTitle"));
  itemTargetSectionView.setVisible(false);
  itemTargetSectionView.setWidth("98%");
  itemTargetSectionView.getContentLayout().addMember(targetItemsLayout);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(itemTargetSectionView);
  fgQuestionLayout=new VLayout();
  fgQuestionLayout.setLayoutLeftMargin(LAYOUT_MARGIN);
  Label fgCombineLabel=new Label(BLCMain.getMessageManager().getString("fgCombineLabel"));
  fgCombineLabel.setWrap(false);
  fgCombineLabel.setHeight(LABEL_HEIGHT);
  fgCombineLabel.setStyleName("blcPromoAdditionalQuestion");
  fgCombineLabel.setStyleName("label-bold");
  fgQuestionLayout.addMember(fgCombineLabel);
  fgCombineForm=new DynamicForm();
  fgCombineRuleRadio=new RadioGroupItem();
  fgCombineRuleRadio.setWidth(RADIO_GROUP_WIDTH);
  fgCombineRuleRadio.setShowTitle(false);
  fgCombineRuleRadio.setWrap(false);
  fgCombineRuleRadio.setDefaultValue("NO");
  LinkedHashMap<String,String> valueMapCombineFG=new LinkedHashMap<String,String>();
  valueMapCombineFG.put("YES",BLCMain.getMessageManager().getString("yesRadioChoice"));
  valueMapCombineFG.put("NO",BLCMain.getMessageManager().getString("noRadioChoice"));
  fgCombineRuleRadio.setValueMap(valueMapCombineFG);
  fgCombineForm.setFields(fgCombineRuleRadio);
  fgQuestionLayout.addMember(fgCombineForm);
  stepFGLabel=new Label(BLCMain.getMessageManager().getString("stepFGLabel"));
  stepFGLabel.setWrap(false);
  stepFGLabel.setHeight(LABEL_HEIGHT);
  stepFGLabel.setStyleName("blcPromoAdditionalQuestion");
  stepFGLabel.setStyleName("label-bold");
  fgQuestionLayout.addMember(stepFGLabel);
  stepFGForm=new DynamicForm();
  fgRuleRadio=new RadioGroupItem();
  fgRuleRadio.setWidth(RADIO_GROUP_WIDTH);
  fgRuleRadio.setShowTitle(false);
  fgRuleRadio.setWrap(false);
  fgRuleRadio.setDefaultValue("ALL");
  LinkedHashMap<String,String> valueMapFG=new LinkedHashMap<String,String>();
  valueMapFG.put("ALL",BLCMain.getMessageManager().getString("allFGRadioChoice"));
  valueMapFG.put("FG_RULE",BLCMain.getMessageManager().getString("buildFGRadioChoice"));
  fgRuleRadio.setValueMap(valueMapFG);
  stepFGForm.setFields(fgRuleRadio);
  fgQuestionLayout.addMember(stepFGForm);
  fulfillmentGroupFilterBuilder=new BLCFilterBuilder();
  fulfillmentGroupFilterBuilder.setDataSource(fulfillmentGroupDataSource);
  fulfillmentGroupFilterBuilder.setFieldDataSource(new FieldDataSourceWrapper(fulfillmentGroupDataSource));
  fulfillmentGroupFilterBuilder.setVisible(false);
  fulfillmentGroupFilterBuilder.setAllowEmpty(true);
  fulfillmentGroupFilterBuilder.setValidateOnChange(false);
  fgQuestionLayout.addMember(fulfillmentGroupFilterBuilder);
  fgQuestionLayout.setLayoutBottomMargin(LAYOUT_MARGIN);
  rawFGForm=new DynamicForm();
  rawFGForm.setVisible(false);
  rawFGTextArea=new TextAreaItem();
  rawFGTextArea.setHeight(70);
  rawFGTextArea.setWidth("600");
  rawFGTextArea.setShowTitle(false);
  rawFGTextArea.setAttribute("dirty",false);
  rawFGForm.setFields(rawFGTextArea);
  fgQuestionLayout.addMember(rawFGForm);
  fgSectionView=new SectionView(BLCMain.getMessageManager().getString("fgSectionViewTitle"));
  fgSectionView.setVisible(false);
  fgSectionView.setWidth("98%");
  fgSectionView.getContentLayout().addMember(fgQuestionLayout);
  ((FormOnlyView)dynamicFormDisplay.getFormOnlyDisplay()).addMember(fgSectionView);
  rightVerticalLayout.addMember(dynamicFormDisplay);
  addMember(leftVerticalLayout);
  addMember(rightVerticalLayout);
}
