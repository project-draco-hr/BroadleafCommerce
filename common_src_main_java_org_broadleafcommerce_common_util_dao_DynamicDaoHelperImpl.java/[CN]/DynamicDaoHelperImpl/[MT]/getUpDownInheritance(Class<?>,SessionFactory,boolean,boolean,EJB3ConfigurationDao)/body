{
  Class<?>[] pEntities=getAllPolymorphicEntitiesFromCeiling(testClass,sessionFactory,includeUnqualifiedPolymorphicEntities,useCache);
  if (ArrayUtils.isEmpty(pEntities)) {
    return pEntities;
  }
  Class<?> topConcreteClass=pEntities[pEntities.length - 1];
  List<Class<?>> temp=new ArrayList<Class<?>>(pEntities.length);
  temp.addAll(Arrays.asList(pEntities));
  Collections.reverse(temp);
  boolean eof=false;
  while (!eof) {
    Class<?> superClass=topConcreteClass.getSuperclass();
    PersistentClass persistentClass=ejb3ConfigurationDao.getConfiguration().getClassMapping(superClass.getName());
    if (persistentClass == null) {
      eof=true;
    }
 else {
      temp.add(0,superClass);
      topConcreteClass=superClass;
    }
  }
  return temp.toArray(new Class<?>[temp.size()]);
}
