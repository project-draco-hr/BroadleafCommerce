{
  CriteriaBuilder builder=sandBoxEntityManager.getCriteriaBuilder();
  CriteriaQuery<SandBox> criteria=builder.createQuery(SandBox.class);
  Root<SandBoxManagementImpl> sandbox=criteria.from(SandBoxManagementImpl.class);
  criteria.select(sandbox.get("sandBox").as(SandBox.class));
  List<Predicate> restrictions=new ArrayList<Predicate>();
  restrictions.add(builder.equal(sandbox.get("sandBox").get("sandboxType"),sandBoxType.getType()));
  restrictions.add(builder.equal(sandbox.get("sandBox").get("name"),sandboxName));
  if (authorId != null) {
    restrictions.add(builder.equal(sandbox.get("sandBox").get("author"),authorId));
  }
  restrictions.add(builder.or(builder.isNull(sandbox.get("sandBox").get("archiveStatus").get("archived").as(String.class)),builder.notEqual(sandbox.get("sandBox").get("archiveStatus").get("archived").as(Character.class),'Y')));
  criteria.where(restrictions.toArray(new Predicate[restrictions.size()]));
  TypedQuery<SandBox> query=sandBoxEntityManager.createQuery(criteria);
  if (query.getResultList() != null && query.getResultList().size() == 1) {
    return query.getSingleResult();
  }
 else {
    return null;
  }
}
