{
  Map<String,BundleOrderItem> gatherBundle=new HashMap<String,BundleOrderItem>();
  List<BundleOrderItem> bundlesToRemove=new ArrayList<BundleOrderItem>();
  for (  OrderItem orderItem : order.getOrderItems()) {
    if (orderItem instanceof BundleOrderItem) {
      String identifier=buildIdentifier(orderItem,null);
      BundleOrderItem retrieved=gatherBundle.get(identifier);
      if (retrieved == null) {
        gatherBundle.put(identifier,(BundleOrderItem)orderItem);
        continue;
      }
      retrieved.setQuantity(retrieved.getQuantity() + orderItem.getQuantity());
      bundlesToRemove.add((BundleOrderItem)orderItem);
    }
  }
  for (  BundleOrderItem bundleOrderItem : gatherBundle.values()) {
    orderItemService.saveOrderItem(bundleOrderItem);
  }
  for (  BundleOrderItem orderItem : bundlesToRemove) {
    try {
      orderService.removeItem(order.getId(),orderItem.getId(),false);
    }
 catch (    RemoveFromCartException e) {
      throw new PricingException("Item could not be removed",e);
    }
  }
  return order;
}
