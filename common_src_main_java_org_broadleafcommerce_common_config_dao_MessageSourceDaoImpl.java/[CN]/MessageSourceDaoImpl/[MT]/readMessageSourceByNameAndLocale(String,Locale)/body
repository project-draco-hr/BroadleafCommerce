{
  return getCachedObject(MessageSource.class,"blMessageSourceNullCheckCache","MESSAGE_SOURCE_MISSING_CACHE_HIT_RATE",new PersistentRetrieval<MessageSource>(){
    @Override public MessageSource retrievePersistentObject(){
      CriteriaBuilder builder=em.getCriteriaBuilder();
      CriteriaQuery<MessageSource> criteria=builder.createQuery(MessageSource.class);
      Root<MessageSourceImpl> root=criteria.from(MessageSourceImpl.class);
      criteria.select(root);
      criteria.where(builder.and(builder.equal(root.get("name").as(String.class),name),builder.equal(root.get("locale").as(String.class),locale.getLocaleCode())));
      TypedQuery<MessageSource> query=em.createQuery(criteria);
      query.setHint(QueryHints.HINT_CACHEABLE,true);
      try {
        return query.getSingleResult();
      }
 catch (      javax.persistence.NoResultException e) {
        return null;
      }
    }
  }
,name,getSite());
}
