{
  Authentication auth=SecurityContextHolder.getContext().getAuthentication();
  CreateAddress createAddress=(CreateAddress)command;
  User user=userService.readUserByUsername(auth.getName());
  List<Address> addressList=addressService.readAddressByUserId(user.getId());
  for (Iterator<Address> itr=addressList.iterator(); itr.hasNext(); ) {
    Address address=(Address)itr.next();
    if (createAddress.getAddressName().equalsIgnoreCase(address.getAddressName())) {
      errors.rejectValue("addressName","addressName.duplicate",new Object[]{new String(address.getAddressName())},null);
    }
  }
  Address address=new Address();
  address.setAddressName(createAddress.getAddressName());
  address.setAddressLine1(createAddress.getAddressLine1());
  address.setAddressLine2(createAddress.getAddressLine2());
  address.setStateCode(createAddress.getState());
  address.setZipCode(createAddress.getZipCode());
  address.setCity(createAddress.getCity());
  address.setUser(user);
  ModelAndView mav=new ModelAndView(getSuccessView(),errors.getModel());
  if (errors.hasErrors()) {
    logger.debug("Error returning back to the form");
    return showForm(request,response,errors);
  }
  addressService.saveAddress(address);
  mav.addObject("saved",true);
  return mav;
}
