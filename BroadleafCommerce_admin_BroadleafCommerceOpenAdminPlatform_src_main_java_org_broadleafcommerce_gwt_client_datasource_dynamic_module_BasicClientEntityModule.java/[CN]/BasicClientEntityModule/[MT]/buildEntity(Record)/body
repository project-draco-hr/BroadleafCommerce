{
  Entity entity=new Entity();
  entity.setType(record.getAttributeAsStringArray("_type"));
  List<Property> properties=new ArrayList<Property>();
  String[] attributes=record.getAttributes();
  for (  String attribute : attributes) {
    if (!attribute.equals("_type") && !attribute.startsWith("__") && dataSource.getField(attribute) != null) {
      Property property=new Property();
      if (record.getAttribute(attribute) != null && dataSource.getField(attribute) != null && dataSource.getField(attribute).getType().equals(FieldType.DATETIME)) {
        property.setValue(formatter.format(record.getAttributeAsDate(attribute)));
      }
 else       if (linkedValue != null && dataSource.getField(attribute).getAttribute("fieldType") != null && SupportedFieldType.valueOf(dataSource.getField(attribute).getAttribute("fieldType")).equals(SupportedFieldType.FOREIGN_KEY)) {
        property.setValue(dataSource.stripDuplicateAllowSpecialCharacters(linkedValue));
      }
 else {
        property.setValue(dataSource.stripDuplicateAllowSpecialCharacters(record.getAttribute(attribute)));
      }
      property.setName(dataSource.getField(attribute).getAttribute("rawName"));
      properties.add(property);
    }
  }
  Property fullyQualifiedName=new Property();
  fullyQualifiedName.setName("ceilingEntityFullyQualifiedClassname");
  fullyQualifiedName.setValue(ceilingEntityFullyQualifiedClassname);
  properties.add(fullyQualifiedName);
  Property[] props=new Property[properties.size()];
  props=properties.toArray(props);
  entity.setProperties(props);
  return entity;
}
